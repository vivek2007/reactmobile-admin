{"ast":null,"code":"import _defineProperty from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/AllTodos/addStudentTodo.js\";\nimport React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport DatePicker from \"react-datepicker\";\nimport { MdDateRange } from 'react-icons/md';\nvar prg1 = [];\n\nvar AddTodo = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddTodo, _React$Component);\n\n  function AddTodo() {\n    var _this;\n\n    _classCallCheck(this, AddTodo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddTodo).call(this));\n\n    _this.openDatepicker1 = function () {\n      return _this._calendar1.setOpen(true);\n    };\n\n    _this.openDatepicker2 = function () {\n      return _this._calendar1.setOpen(true);\n    };\n\n    _this.handleSelectChange = function (e) {\n      console.log(\"value\", e.target.value, \"e.target.name\", e.target.name);\n\n      if (e.target.value != '') {\n        var data1 = {};\n        var usertype;\n\n        if (_this.props.match.params.user_type == 'student') {\n          usertype = 'Student';\n        } else {\n          usertype = 'Mentor';\n        }\n\n        data1 = {\n          'user': usertype,\n          'programs': e.target.value\n        };\n        axios.post(AppConstants.API + '/resource/getUserandProgrambasedResources', data1).then(function (res) {\n          // console.log(res.data)\n          if (res.data.Status == \"Success\") {\n            var resources1 = [];\n            res.data.data.map(function (resource, index) {\n              var item = {};\n              item[\"name\"] = resource.title;\n              item[\"id\"] = resource._id;\n              resources1.push(item);\n            });\n\n            _this.setState({\n              resources: resources1,\n              selectedValue: [],\n              seletedresources: []\n            });\n          }\n        });\n\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      } else {\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      }\n    };\n\n    _this.state = {\n      title: \"\",\n      description: \"\",\n      user_type: \"\",\n      status: true,\n      loading: \"\",\n      errors: {},\n      title_error: false,\n      status_error: false,\n      description_error: false,\n      resources: [],\n      res_error: false,\n      seletedresources: [],\n      period: \"\",\n      period_error: false,\n      prog_error: false,\n      dueDate: '',\n      dueDate_err: false,\n      seletedprogram: [],\n      resourse_error: false,\n      program_id: '',\n      programs: [],\n      label: '',\n      duration: '',\n      duration_start_date: '',\n      duration_start_err: false,\n      duration_end_date: '',\n      duration_end_err: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRemove = _this.onRemove.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.onSelect1 = this.onSelect1.bind(this);\n    // this.onRemove1 = this.onRemove1.bind(this);\n\n    _this.handledateOfEvent = _this.handledateOfEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.starthandledateOfEvent = _this.starthandledateOfEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddTodo, [{\n    key: \"handledateOfEvent\",\n    value: function handledateOfEvent(bday) {\n      if (bday != \"\") {\n        this.setState({\n          dob_error: false\n        });\n      } else {\n        this.setState({\n          dob_error: true\n        });\n      }\n\n      this.setState({\n        dueDate: bday\n      });\n    }\n  }, {\n    key: \"starthandledateOfEvent\",\n    value: function starthandledateOfEvent(startdate) {\n      var currentDate = new Date(startdate);\n      currentDate.setDate(currentDate.getDate() + parseInt(this.state.label));\n\n      if (startdate != \"\") {\n        this.setState({\n          duration_start_err: false\n        });\n      } else {\n        this.setState({\n          duration_start_err: true\n        });\n      }\n\n      this.setState({\n        duration_start_date: startdate,\n        duration_end_date: currentDate\n      });\n    } // onSelect1(selectedList, selectedItem) {\n    //     this.setState({\n    //       seletedprogram: selectedList\n    //     });\n    //     if(selectedList){\n    //         this.setState({prog_error:false})\n    //         var prgs = [];\n    //         selectedList.map((prg,i)=>{\n    //             prgs.push(prg.prg_id)\n    //         })\n    //         let data1 = {};\n    //         data1 = {\n    //             'user': this.props.match.params.user_type,\n    //             'programs' : prgs\n    //         }\n    //         axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n    //             .then(res => { \n    //                 // console.log(res.data)\n    //                 if(res.data.Status == \"Success\"){\n    //                     var resources1 = []\n    //                     res.data.data.map((resource,index)=>{\n    //                         var item ={}\n    //                         item[\"name\"] = resource.title\n    //                         item[\"id\"] = resource._id\n    //                         resources1.push(item)\n    //                     })\n    //                     this.setState({resources:resources1,selectedValue:[],seletedresources:[]})\n    //                 }\n    //             }) \n    //     }\n    // }\n    // onRemove1(selectedList, removedItem) {\n    //     this.setState({seletedprogram: selectedList})\n    //     if(selectedList == \"\"){\n    //       this.setState({prog_error:true})\n    //     }\n    //     if(selectedList){\n    //         this.setState({prog_error:false})\n    //         var prgs = [];\n    //         selectedList.map((prg,i)=>{\n    //             prgs.push(prg.prg_id)\n    //         })\n    //         let data1 = {};\n    //         data1 = {\n    //             'user': this.props.match.params.user_type,\n    //             'programs' : prgs\n    //         }\n    //         axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n    //             .then(res => { \n    //                 // console.log(res.data)\n    //                 if(res.data.Status == \"Success\"){\n    //                     var resources1 = []\n    //                     res.data.data.map((resource,index)=>{\n    //                         var item ={}\n    //                         item[\"name\"] = resource.title\n    //                         item[\"id\"] = resource._id\n    //                         resources1.push(item)\n    //                     })\n    //                     this.setState({resources:resources1,selectedValue:[],seletedresources:[]})\n    //                 }\n    //             }) \n    //     }\n    // }\n\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(selectedList, selectedItem) {\n      //console.log(\"selectedList\",selectedList);\n      this.setState({\n        seletedresources: selectedList,\n        selectedValue: selectedList\n      });\n\n      if (selectedList) {\n        this.setState({\n          res_error: false\n        });\n      }\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(selectedList, removedItem) {\n      this.setState({\n        seletedresources: selectedList,\n        selectedValue: selectedList\n      });\n\n      if (selectedList == \"\") {\n        this.setState({\n          res_error: true,\n          seletedresources: selectedList\n        });\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      if (e.target.name == \"title\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            title_error: false\n          });\n        } else {\n          this.setState({\n            title_error: true\n          });\n        }\n      }\n\n      if (e.target.name == \"description\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            description_error: false\n          });\n        } else {\n          this.setState({\n            description_error: true\n          });\n        }\n      }\n\n      if (e.target.name == \"period\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            period_error: false\n          });\n        } else {\n          this.setState({\n            period_error: true\n          });\n        }\n      } // if(e.target.name == \"user_type\"){\n      // if(e.target.value != \"\"){\n      //   this.setState({user_type_error:false})\n      // }else{\n      //   this.setState({user_type_error:true})\n      // }\n      // }\n\n\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    } //program change\n\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var errors = {};\n      var formIsValid = true; // if(!this.state.dueDate){\n      //     formIsValid = false;\n      //     errors[\"dueDate\"] = \"Please select due date\";\n      // }\n\n      if (this.state.seletedresources.length == 0) {\n        formIsValid = false;\n        errors[\"resource_error\"] = \"Please select resorces\"; //ReactDOM.findDOMNode(this.refs.resource).focus();\n      } // if(this.state.program_id.length==0){\n      //     formIsValid = false;\n      //     errors[\"seletedprogram\"] = \"Please select program\";\n      // }\n\n\n      if (!this.state.program_id) {\n        formIsValid = false;\n        errors[\"program_id\"] = \"Please enter program\";\n      }\n\n      if (!this.state.duration) {\n        formIsValid = false;\n        errors[\"duration\"] = \"Please enter duration\";\n      }\n\n      if (!this.state.description) {\n        formIsValid = false;\n        errors[\"description\"] = \"Please enter description\";\n        ReactDOM.findDOMNode(this.refs.description).focus();\n      }\n\n      if (!this.state.title) {\n        formIsValid = false;\n        errors[\"title\"] = \"Please enter title\";\n        ReactDOM.findDOMNode(this.refs.title).focus();\n      }\n\n      this.setState({\n        errors: errors,\n        title_error: true,\n        description_error: true,\n        res_error: true,\n        period_error: true,\n        prog_error: true,\n        dueDate_err: true,\n        duration_start_err: true\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleStatusChange\",\n    value: function handleStatusChange(checked) {\n      this.setState({\n        status: checked\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      console.log(\"program_id\", this.state.program_id);\n\n      if (this.handleValidation()) {\n        var _formval;\n\n        var reso = [];\n        this.state.seletedresources.map(function (res) {\n          reso.push(res.id);\n        });\n        var prgs = [];\n        this.state.seletedprogram.map(function (prg, index) {\n          prgs.push(prg.prg_id);\n        });\n        this.setState({\n          loading: 1\n        });\n        var formData = new FormData();\n        var formval = {};\n        formval = (_formval = {\n          'user_type': this.props.match.params.user_type,\n          'title': this.state.title,\n          'description': this.state.description,\n          'status': this.state.status,\n          'programs': JSON.stringify(prgs),\n          'resources': JSON.stringify(reso),\n          \"duration\": this.state.duration\n        }, _defineProperty(_formval, \"programs\", this.state.program_id), _defineProperty(_formval, 'dueDate', this.state.dueDate), _defineProperty(_formval, 'created_by', this.props.auth.user._id), _formval);\n        axios.post(AppConstants.API + '/todos/addTodo', formval).then(function (res) {\n          if (res.data.Status == \"Success\") {\n            setTimeout(function (e) {\n              if (_this2.props.match.params.user_type == 'parent') {\n                _this2.props.history.push('/allParentTodos');\n              } else if (_this2.props.match.params.user_type == 'student') {\n                _this2.props.history.push('/allStudentTodos');\n              } else {\n                _this2.props.history.push('/allMentorTodos');\n              }\n            }, 2000);\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-success fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          } else {\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-danger fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      prg1 = [];\n\n      if (this.props.match.params.user_type == 'student') {\n        // var element = document.getElementById(\"navItem-Client Habits-0\");\n        // element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Habits-3\");\n        element.classList.add(\"active\");\n      } else {\n        // var element = document.getElementById(\"navItem-Client Habits-0\");\n        // element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Habits-3\");\n        element.classList.add(\"active\");\n      }\n\n      fetch(AppConstants.API + '/programs/getAllactiveprograms').then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        console.log(\"result.data\", result.data); // result.data.map((res,i)=>{\n        //   var prg = {}\n        //   prg[\"name\"] = res.title\n        //   prg[\"prg_id\"] = res._id\n        //   prg1.push(prg)\n        // })\n\n        _this3.setState({\n          programs: result.data\n        }); // this.setState({programsdata:result.data})\n\n      });\n      fetch(AppConstants.API + '/resource/getUserbasedResources/' + this.props.match.params.user_type).then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        var resources1 = [];\n        result.data.map(function (resource, index) {\n          var item = {};\n          item[\"name\"] = resource.title;\n          item[\"id\"] = resource._id;\n          resources1.push(item);\n        });\n\n        _this3.setState({\n          resources: resources1\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      //console.log('dfdsf',this.state.program_id)\n      var page;\n\n      if (this.props.match.params.user_type == 'parent') {\n        page = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"cst-breadcrumb\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/dashboard',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 29\n          }\n        }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/allParentTodos',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }\n        }, \"Habits\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }\n        }, \"Add Parent Habit\"));\n      } else if (this.props.match.params.user_type == 'student') {\n        page = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"cst-breadcrumb\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/dashboard',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }\n        }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/allStudentTodos',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 29\n          }\n        }, \"All Habits\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }\n        }, \"Add  Habit\"));\n      } else {\n        page = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"cst-breadcrumb\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/dashboard',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 29\n          }\n        }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/allMentorTodos',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }\n        }, \"Habits\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }\n        }, \"Add Mentor Habit\"));\n      }\n\n      var pageTitle;\n\n      if (this.props.match.params.user_type == 'parent') {\n        pageTitle = 'Add Parent Habit';\n      } else if (this.props.match.params.user_type == 'student') {\n        pageTitle = 'Add  Habit';\n      } else {\n        pageTitle = 'Add Mentor Habit';\n      }\n\n      var resource_links = [];\n      this.state.seletedresources.map(function (item, index) {\n        resource_links.push(item);\n      });\n      return /*#__PURE__*/React.createElement(Page, {\n        title: pageTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }\n      }, page, /*#__PURE__*/React.createElement(ReactTitle, {\n        title: pageTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"addchild\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 41\n        }\n      }, \"Title\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 46\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        ref: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 45\n        }\n      }), this.state.title_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 79\n        }\n      }, this.state.errors[\"title\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"description\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 41\n        }\n      }, \"Description\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 56\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"textarea\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        ref: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 45\n        }\n      }), this.state.description_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 85\n        }\n      }, this.state.errors[\"description\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"program\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 41\n        }\n      }, \"Program  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 50\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 41\n        }\n      }, console.log(\"this.state.program\", this.state.programs), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"program_id\",\n        value: this.state.program_id,\n        onChange: this.handleSelectChange,\n        ref: \"programs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 41\n        }\n      }, \"Select Program\"), this.state.programs.map(function (customers, index) {\n        if (customers.status == true && customers.deleted == false) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: index,\n            value: customers._id,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 56\n            }\n          }, customers.title);\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 39\n        }\n      }, this.state.errors[\"program_id\"]))), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"program\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 41\n        }\n      }, \"Duration(Days)  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 57\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"duration\",\n        placeholder: \"Duration\",\n        value: this.state.duration,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 41\n        }\n      }, this.state.errors[\"duration\"]))), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"resource\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 41\n        }\n      }, \"Resources  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 56\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Multiselect, {\n        options: this.state.resources // Options to display in the dropdown\n        ,\n        selectedValues: this.state.selectedValue // Preselected value to persist in dropdown\n        ,\n        onSelect: this.onSelect // Function will trigger on select event\n        ,\n        onRemove: this.onRemove // Function will trigger on remove event\n        ,\n        displayValue: \"name\" // Property name to display in the dropdown options\n        ,\n        placeholder: \"Resources\",\n        ref: \"resource\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 45\n        }\n      })), this.state.res_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 77\n        }\n      }, this.state.errors[\"resource_error\"]) : '')), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 41\n        }\n      }, \"Status\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 47\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        onChange: this.handleStatusChange.bind(this),\n        checked: this.state.status,\n        uncheckedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"150px\",\n            color: \"#000\",\n            fontWeight: \"bold\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 45\n          }\n        }, \"Inactive\"),\n        checkedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"180px\",\n            fontWeight: \"bold\",\n            color: \"#000\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 45\n          }\n        }, \"Active\"),\n        onColor: \"#45b649\",\n        offColor: \"#ffd700\",\n        className: \"react-switch\",\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n        activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n        height: 20,\n        width: 48,\n        handleDiameter: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 45\n        }\n      }, \"Save    \", /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 119\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), \"\\xA0\", this.props.match.params.user_type == 'parent' ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/allParentTodos\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 49\n        }\n      }, \"\\xA0Cancel\") : this.props.match.params.user_type == 'student' ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/allStudentTodos\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 191\n        }\n      }, \"\\xA0Cancel\") : /*#__PURE__*/React.createElement(Link, {\n        to: \"/allMentorTodos\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 285\n        }\n      }, \"\\xA0Cancel\"))), this.state.errMsg))))));\n    }\n  }]);\n\n  return AddTodo;\n}(React.Component);\n\nAddTodo.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(AddTodo);","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/AllTodos/addStudentTodo.js"],"names":["React","Page","axios","AppConstants","ReactTitle","Link","Row","Col","Card","CardBody","Button","Form","FormGroup","Label","Input","Loading","PropTypes","connect","ReactDOM","Switch","Multiselect","DatePicker","MdDateRange","prg1","AddTodo","openDatepicker1","_calendar1","setOpen","openDatepicker2","handleSelectChange","e","console","log","target","value","name","data1","usertype","props","match","params","user_type","post","API","then","res","data","Status","resources1","map","resource","index","item","title","_id","push","setState","resources","selectedValue","seletedresources","state","description","status","loading","errors","title_error","status_error","description_error","res_error","period","period_error","prog_error","dueDate","dueDate_err","seletedprogram","resourse_error","program_id","programs","label","duration","duration_start_date","duration_start_err","duration_end_date","duration_end_err","handleSubmit","bind","handleInputChange","onSelect","onRemove","handledateOfEvent","starthandledateOfEvent","bday","dob_error","startdate","currentDate","Date","setDate","getDate","parseInt","selectedList","selectedItem","removedItem","formIsValid","length","findDOMNode","refs","focus","checked","preventDefault","handleValidation","reso","id","prgs","prg","prg_id","formData","FormData","formval","JSON","stringify","auth","user","setTimeout","history","errMsg","msg","element","document","getElementById","classList","add","fetch","json","result","page","pageTitle","resource_links","color","customers","deleted","handleStatusChange","display","justifyContent","alignItems","height","fontSize","width","fontWeight","paddingRight","size","offset","Component","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport  { Link } from 'react-router-dom';\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n  } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport DatePicker from \"react-datepicker\";\nimport {\n    MdDateRange\n  } from 'react-icons/md';\nvar prg1 = []\nclass AddTodo extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            title : \"\",\n            description : \"\",\n            user_type:\"\",\n            status : true,\n            loading : \"\",\n            errors : {},\n            title_error : false,\n            status_error : false,\n            description_error : false,\n            resources : [],\n            res_error : false,\n            seletedresources : [],\n            period : \"\",\n            period_error : false,\n            prog_error : false,\n            dueDate:'',\n            dueDate_err:false,\n            seletedprogram  : [],\n            resourse_error : false,\n            program_id:'',\n            programs:[],\n            label: '',\n            duration:'',\n            duration_start_date:'',\n            duration_start_err:false,\n            duration_end_date:'',\n            duration_end_err:false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.onRemove = this.onRemove.bind(this);\n        // this.onSelect1 = this.onSelect1.bind(this);\n        // this.onRemove1 = this.onRemove1.bind(this);\n        this.handledateOfEvent = this.handledateOfEvent.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.starthandledateOfEvent = this.starthandledateOfEvent.bind(this);\n    }\n    openDatepicker1 = () => this._calendar1.setOpen(true);\n    openDatepicker2 = () => this._calendar1.setOpen(true);\n    handledateOfEvent(bday){\n        if(bday != \"\"){\n            this.setState({dob_error:false})\n        }else{\n          this.setState({dob_error:true})\n        }\n        this.setState({dueDate:bday})\n    }\n    starthandledateOfEvent(startdate){\n        var currentDate = new Date(startdate);\n            currentDate.setDate(currentDate.getDate() + parseInt(this.state.label));\n\n        if(startdate != \"\"){\n            this.setState({duration_start_err:false})\n        }else{\n          this.setState({duration_start_err:true})\n        }\n        this.setState({duration_start_date:startdate,duration_end_date:currentDate})\n    }\n    // onSelect1(selectedList, selectedItem) {\n    //     this.setState({\n    //       seletedprogram: selectedList\n    //     });\n    //     if(selectedList){\n    //         this.setState({prog_error:false})\n    //         var prgs = [];\n    //         selectedList.map((prg,i)=>{\n    //             prgs.push(prg.prg_id)\n    //         })\n    //         let data1 = {};\n    //         data1 = {\n    //             'user': this.props.match.params.user_type,\n    //             'programs' : prgs\n    //         }\n    //         axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n    //             .then(res => { \n    //                 // console.log(res.data)\n    //                 if(res.data.Status == \"Success\"){\n    //                     var resources1 = []\n    //                     res.data.data.map((resource,index)=>{\n    //                         var item ={}\n    //                         item[\"name\"] = resource.title\n    //                         item[\"id\"] = resource._id\n    //                         resources1.push(item)\n    //                     })\n    //                     this.setState({resources:resources1,selectedValue:[],seletedresources:[]})\n    //                 }\n    //             }) \n    //     }\n        \n    // }\n    // onRemove1(selectedList, removedItem) {\n    //     this.setState({seletedprogram: selectedList})\n    //     if(selectedList == \"\"){\n    //       this.setState({prog_error:true})\n    //     }\n    //     if(selectedList){\n    //         this.setState({prog_error:false})\n    //         var prgs = [];\n    //         selectedList.map((prg,i)=>{\n    //             prgs.push(prg.prg_id)\n    //         })\n    //         let data1 = {};\n    //         data1 = {\n    //             'user': this.props.match.params.user_type,\n    //             'programs' : prgs\n    //         }\n    //         axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n    //             .then(res => { \n    //                 // console.log(res.data)\n    //                 if(res.data.Status == \"Success\"){\n    //                     var resources1 = []\n    //                     res.data.data.map((resource,index)=>{\n    //                         var item ={}\n    //                         item[\"name\"] = resource.title\n    //                         item[\"id\"] = resource._id\n    //                         resources1.push(item)\n    //                     })\n    //                     this.setState({resources:resources1,selectedValue:[],seletedresources:[]})\n    //                 }\n    //             }) \n    //     }\n    // }\n    onSelect(selectedList, selectedItem) {\n        //console.log(\"selectedList\",selectedList);\n        this.setState({\n          seletedresources: selectedList,selectedValue:selectedList\n        });\n        if(selectedList){\n            this.setState({res_error:false})\n        }\n    }\n    onRemove(selectedList, removedItem) {\n        this.setState({seletedresources: selectedList,selectedValue:selectedList})\n        if(selectedList == \"\"){\n          this.setState({res_error:true,seletedresources: selectedList})\n        }\n    }\n    handleInputChange(e){\n        if(e.target.name == \"title\"){\n            if(e.target.value != \"\"){\n                this.setState({title_error:false})\n            }else{\n                this.setState({title_error:true})\n            }\n        }\n        if(e.target.name == \"description\"){\n            if(e.target.value != \"\"){\n              this.setState({description_error:false})\n            }else{\n              this.setState({description_error:true})\n            }\n        }\n        if(e.target.name == \"period\"){\n            if(e.target.value != \"\"){\n              this.setState({period_error:false})\n            }else{\n              this.setState({period_error:true})\n            }\n        }\n        // if(e.target.name == \"user_type\"){\n           \n            // if(e.target.value != \"\"){\n            //   this.setState({user_type_error:false})\n            // }else{\n            //   this.setState({user_type_error:true})\n            // }\n        // }\n\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    \n    //program change\n    handleSelectChange= (e) => {\n        console.log(\"value\",e.target.value,\"e.target.name\",e.target.name)\n        if(e.target.value !='') {\n            let data1 = {};\n            var usertype;\n            if(this.props.match.params.user_type=='student'){\n                usertype = 'Student'\n            }else{\n                usertype = 'Mentor'\n            }\n            data1 = {\n                'user': usertype,\n                'programs' : e.target.value\n            }\n            axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n                .then(res => { \n                    // console.log(res.data)\n                    if(res.data.Status == \"Success\"){\n                        var resources1 = []\n                        res.data.data.map((resource,index)=>{\n                            var item ={}\n                            item[\"name\"] = resource.title\n                            item[\"id\"] = resource._id\n                            resources1.push(item)\n                        })\n                        this.setState({resources:resources1,selectedValue:[],seletedresources:[]})\n                    }\n                }) \n            this.setState({[e.target.name]:e.target.value})\n        } else {\n            this.setState({[e.target.name]:e.target.value,})\n        }\n        \n    }\n\n    handleValidation(){\n        let errors = {};\n        let formIsValid = true;\n        // if(!this.state.dueDate){\n        //     formIsValid = false;\n        //     errors[\"dueDate\"] = \"Please select due date\";\n        // }\n        if(this.state.seletedresources.length==0){\n            formIsValid = false;\n            errors[\"resource_error\"] = \"Please select resorces\";\n            //ReactDOM.findDOMNode(this.refs.resource).focus();\n        }\n\n     \n        // if(this.state.program_id.length==0){\n        //     formIsValid = false;\n        //     errors[\"seletedprogram\"] = \"Please select program\";\n        // }\n        if(!this.state.program_id){\n            formIsValid = false;\n            errors[\"program_id\"] = \"Please enter program\";\n        }\n        \n        if(!this.state.duration){\n            formIsValid = false;\n            errors[\"duration\"] = \"Please enter duration\";\n        }\n        if(!this.state.description){\n            formIsValid = false;\n            errors[\"description\"] = \"Please enter description\";\n            ReactDOM.findDOMNode(this.refs.description).focus();\n        }\n        if (!this.state.title){\n            formIsValid = false;\n            errors[\"title\"] = \"Please enter title\";\n            ReactDOM.findDOMNode(this.refs.title).focus();\n        }\n        this.setState({\n            errors: errors,\n            title_error : true,\n            description_error:true,\n            res_error : true,\n            period_error :true,\n            prog_error : true,\n            dueDate_err:true,\n            duration_start_err:true\n        });\n        return formIsValid;\n    }\n    handleStatusChange(checked){\n        this.setState({status : checked})\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        console.log(\"program_id\",this.state.program_id)\n        if(this.handleValidation()){\n         \n             var reso = []\n            this.state.seletedresources.map((res)=>{\n                reso.push(res.id)\n            })\n            var prgs = []\n            this.state.seletedprogram.map((prg,index)=>{\n                prgs.push(prg.prg_id)\n            })\n            this.setState({loading:1});\n            let formData = new FormData();\n            let formval = {};\n            formval = {\n                'user_type': this.props.match.params.user_type,\n                'title': this.state.title,\n                'description': this.state.description,\n                'status': this.state.status,\n                'programs' : JSON.stringify(prgs),\n                'resources' : JSON.stringify(reso),\n                \"duration\": this.state.duration,\n                'programs' : this.state.program_id,\n                'dueDate':this.state.dueDate,\n                'created_by':this.props.auth.user._id,\n            }\n            \n            \n            axios.post(AppConstants.API+'/todos/addTodo',formval)\n                .then(res => { \n                    if(res.data.Status == \"Success\"){\n                        setTimeout((e) => {\n                            if(this.props.match.params.user_type == 'parent'){\n                                this.props.history.push('/allParentTodos');\n                            }else if(this.props.match.params.user_type == 'student'){\n                                this.props.history.push('/allStudentTodos');\n                            }else{\n                                this.props.history.push('/allMentorTodos');\n                            }\n                            \n                        }, 2000);\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-success fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n                    else{\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-danger fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n            })\n        }\n    }\n\n   \n    componentDidMount(){\n        prg1 = [];\n        if(this.props.match.params.user_type == 'student'){\n            // var element = document.getElementById(\"navItem-Client Habits-0\");\n      // element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Habits-3\");\n      element.classList.add(\"active\");\n           \n        }else{\n            // var element = document.getElementById(\"navItem-Client Habits-0\");\n      // element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Habits-3\");\n      element.classList.add(\"active\");\n        }\n            \n        fetch(AppConstants.API+'/programs/getAllactiveprograms').then(res=>{\n            if(res.status == 200){\n                return res.json();\n            }\n          }).then(result=>{\n              console.log(\"result.data\",result.data)\n            // result.data.map((res,i)=>{\n            //   var prg = {}\n            //   prg[\"name\"] = res.title\n            //   prg[\"prg_id\"] = res._id\n            //   prg1.push(prg)\n            // })\n            this.setState({programs:result.data})\n            // this.setState({programsdata:result.data})\n          })\n          fetch(AppConstants.API+'/resource/getUserbasedResources/'+this.props.match.params.user_type).then(res=>{\n            if(res.status == 200){\n                return res.json();  \n            }\n          }).then(result=>{\n                var resources1 = []\n                result.data.map((resource,index)=>{\n                    var item ={}\n                    item[\"name\"] = resource.title\n                    item[\"id\"] = resource._id\n                    resources1.push(item)\n                })\n                this.setState({resources:resources1})\n        })  \n    }\n    render(){\n        //console.log('dfdsf',this.state.program_id)\n        let page;\n        if(this.props.match.params.user_type == 'parent'){\n            page =  <ul className=\"cst-breadcrumb\">\n                        <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                        <li><Link to={'/allParentTodos'}>Habits</Link></li>\n                        <li>Add Parent Habit</li>\n                    </ul> \n        }else if(this.props.match.params.user_type == 'student'){\n\n            page =  <ul className=\"cst-breadcrumb\">\n                        <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                        <li><Link to={'/allStudentTodos'}>All Habits</Link></li>\n                        <li>Add  Habit</li>\n                    </ul> \n        }else{\n            page =  <ul className=\"cst-breadcrumb\">\n                        <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                        <li><Link to={'/allMentorTodos'}>Habits</Link></li>\n                        <li>Add Mentor Habit</li>\n                    </ul> \n        }\n    let pageTitle\n        if(this.props.match.params.user_type == 'parent'){\n            pageTitle =  'Add Parent Habit'\n        }else if(this.props.match.params.user_type == 'student'){\n            pageTitle =  'Add  Habit'\n        }else{\n            pageTitle =  'Add Mentor Habit' \n        }\n        var resource_links = [];\n        this.state.seletedresources.map((item,index)=>{\n            resource_links.push(item)\n        })\n        return(\n            <Page title={pageTitle}>\n               { page}\n                <ReactTitle title={pageTitle}/>\n                <Row>\n                    <Col xl={12} lg={12} md={12}>\n                        <Card>\n                            <CardBody>\n                                <Form name=\"addchild\" onSubmit= { this.handleSubmit }>\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                        Title<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"Title\"                      \n                                            value={this.state.title}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"title\"           \n                                            />\n                                            {this.state.title_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"title\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"description\" sm={2}>\n                                            Description<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"textarea\"\n                                            name=\"description\"\n                                            placeholder=\"Description\"                      \n                                            value={this.state.description}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"description\"           \n                                            />\n                                            {this.state.description_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"description\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                        Program  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            {console.log(\"this.state.program\",this.state.programs)}\n                                        <Input\n                                        type=\"select\"\n                                        name=\"program_id\"\n                                        value={this.state.program_id}\n                                        onChange={ this.handleSelectChange }  \n                                        ref =\"programs\"                  \n                                        >\n                                        <option value=\"\">Select Program</option>\n                                        \n                                        {\n                                            this.state.programs.map((customers,index)=>{\n                                            if(customers.status == true && customers.deleted == false){\n                                                return <option key={index} value={customers._id}>{customers.title}</option>\n                                            }\n                                            })\n                                        }\n                                        </Input>\n                                      <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"program_id\"]}</span>\n                                        </Col>\n                                    </FormGroup>\n                                    {/* <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                            Program  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div>\n                                            <Multiselect\n                                            options={this.state.programs} // Options to display in the dropdown\n                                            selectedValues={this.state.selectedValue1} // Preselected value to persist in dropdown\n                                            onSelect={this.onSelect1} // Function will trigger on select event\n                                            onRemove={this.onRemove1} // Function will trigger on remove event\n                                            displayValue=\"name\" // Property name to display in the dropdown options\n                                            placeholder=\"Program\"\n                                            />\n                                            </div>\n                                            {this.state.prog_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"seletedprogram\"]}</span> :''}\n                                        </Col>\n                                    </FormGroup> */}\n\n                                        <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                        Duration(Days)  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <Input\n                                        type=\"text\"\n                                        name=\"duration\"\n                                        placeholder=\"Duration\"                      \n\n                                        value={this.state.duration}\n                                        onChange={ this.handleInputChange }  \n                                        />\n                                       \n                                        <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"duration\"]}</span> \n                                        </Col>\n                                    </FormGroup>\n\n                                    {/* {this.state.label != '' ? \n                                    <div>\n                                         <FormGroup row>\n                                         <Label for=\"dob\" sm={2}>\n                                         Start Date <span>*</span>\n                                         </Label>\n                                         <Col sm={10}>\n                                         <div className=\"cst-date-picker\">\n                                         <DatePicker\n                                             name=\"duration_start_date\"\n                                             className=\"form-control\"\n                                             placeholderText=\"MM-DD-YYYY\"\n                                             selected={this.state.duration_start_date}\n                                             selectsStart\n                                             peekNextMonth\n                                             showMonthDropdown\n                                             showYearDropdown\n                                             dropdownMode=\"select\"\n                                             onChange={this.starthandledateOfEvent}\n                                             // showTimeSelect                    \n                                             // timeIntervals={15}\n                                             dateFormat=\"MM-dd-yyyy\"\n                                             // timeCaption=\"time\"\n                                             autoComplete = \"off\"\n                                             onKeyDown={(e) =>e.preventDefault()}\n                                             ref={(c) => this._calendar1 = c}\n                                             // minDate={new Date().setFullYear(new Date().getFullYear() - 5)}\n                                             //maxDate={}\n                                         />\n                                         <MdDateRange className=\"cale-icon\" onClick={this.openDatepicker2.bind(this)}/>\n                                         </div>\n                                         {this.state.duration_start_err == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"duration_start_date\"]}</span> :''}\n                                         </Col>                                        \n                                     </FormGroup>\n\n                                    <FormGroup row>\n                                        <Label for=\"dob\" sm={2}>\n                                        End Date <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div className=\"cst-date-picker\">\n                                        <DatePicker\n                                            name=\"duration_end_date\"\n                                            className=\"form-control\"\n                                            placeholderText=\"MM-DD-YYYY\"\n                                            selected={this.state.duration_end_date}\n                                            selectsStart\n                                            peekNextMonth\n                                            showMonthDropdown\n                                            showYearDropdown\n                                            dropdownMode=\"select\"\n                                            dateFormat=\"MM-dd-yyyy\"\n                                            autoComplete = \"off\"\n                                            onKeyDown={(e) =>e.preventDefault()}\n                                            ref={(c) => this._calendar1 = c}\n                                            readOnly\n                                        />\n                                        <MdDateRange className=\"cale-icon\" onClick={this.openDatepicker2.bind(this)}/>\n                                        </div>\n                                        </Col>                                        \n                                        </FormGroup>\n\n                                    </div>\n                                   :''} */}\n\n                                    <FormGroup row>\n                                        <Label for=\"resource\" sm={2}>\n                                            Resources  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div>\n                                            <Multiselect\n                                            options={this.state.resources} // Options to display in the dropdown\n                                            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                                            onSelect={this.onSelect} // Function will trigger on select event\n                                            onRemove={this.onRemove} // Function will trigger on remove event\n                                            displayValue=\"name\" // Property name to display in the dropdown options\n                                            placeholder=\"Resources\"\n                                            ref=\"resource\"\n                                            />\n                                            </div>\n                                            {this.state.res_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"resource_error\"]}</span> :''}\n                                        </Col>\n                                    </FormGroup>\n\n                                    {/* <FormGroup row>\n                                        <Label for=\"dob\" sm={2}>\n                                        Due Date <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div className=\"cst-date-picker\">\n                                        <DatePicker\n                                            name=\"dob\"\n                                            className=\"form-control\"\n                                            placeholderText=\"MM-DD-YYYY\"\n                                            selected={this.state.dueDate}\n                                            selectsStart\n                                            peekNextMonth\n                                            showMonthDropdown\n                                            showYearDropdown\n                                            dropdownMode=\"select\"\n                                            onChange={this.handledateOfEvent}\n                                            // showTimeSelect                    \n                                            // timeIntervals={15}\n                                            dateFormat=\"MM-dd-yyyy\"\n                                            // timeCaption=\"time\"\n                                            autoComplete = \"off\"\n                                            onKeyDown={(e) =>e.preventDefault()}\n                                            ref={(c) => this._calendar1 = c}\n                                            // minDate={new Date().setFullYear(new Date().getFullYear() - 5)}\n                                            //maxDate={}\n                                        />\n                                        <MdDateRange className=\"cale-icon\" onClick={this.openDatepicker1.bind(this)}/>\n                                        </div>\n                                        {this.state.dueDate_err == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"dueDate\"]}</span> :''}\n                                        </Col>                                        \n                                    </FormGroup> */}\n                                    {/* <FormGroup row>\n                                        <Label for=\"period\" sm={2}>\n                                            Duration (Days) <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <NumberFormat\n                                            // format=\"(###) ###-####\" mask=\"\"\n                                            name=\"period\"\n                                            placeholder='Duration'\n                                            onChange={this.handleInputChange}\n                                            value={this.state.period} class=\"form-control\" ref =\"period\"/>   \n                                            {this.state.period_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"period\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup> */}\n                                    \n                                    \n                                    \n                                    <FormGroup row>\n                                        <Label for=\"status\" sm={2}>\n                                        Status<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <Switch onChange={this.handleStatusChange.bind(this)} checked={this.state.status} \n                                         uncheckedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"150px\",\n                                                color: \"#000\",\n                                                fontWeight: \"bold\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Inactive\n                                            </div>\n                                            }\n                                            checkedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"180px\",\n                                                fontWeight: \"bold\",\n                                                color: \"#000\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Active\n                                            </div>\n                                            }\n                                            onColor = \"#45b649\"\n                                            offColor = \"#ffd700\"\n                                            className=\"react-switch\"\n                                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                                            height={20}\n                                            width={48}\n                                            handleDiameter={30}\n                                        />\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup check row>\n                                        <Col sm={{ size: 10, offset: 2 }}>\n                                            <Button className=\"btn btn-primary\" onClick={ this.handleSubmit }>Save    <div style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div\">\n                                                \n                                                {/*                <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div> */}\n                                                <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n                                                </div></Button>&nbsp;\n                                            {(this.props.match.params.user_type == 'parent') ?\n                                                <Link to={\"/allParentTodos\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link> : this.props.match.params.user_type == 'student' ? <Link to={\"/allStudentTodos\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link> : <Link to={\"/allMentorTodos\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link> }\n                                            {/* <Link to={\"/allStudentTodos\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link> */}\n                                        </Col>\n                                    </FormGroup>\n                                    {this.state.errMsg}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Page>\n        )\n    }\n}\nAddTodo.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport  default connect(mapStateToProps, {})(AddTodo);"]},"metadata":{},"sourceType":"module"}