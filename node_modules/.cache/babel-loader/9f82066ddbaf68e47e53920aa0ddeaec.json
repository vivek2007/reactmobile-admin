{"ast":null,"code":"import _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/Children/thermometerDT.js\";\nimport React from 'react';\nimport { Row, CardBody, CardHeader, Card, Col, Label, FormGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Page from 'components/Page';\nimport AppConstants from 'AppConstants';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport moment from \"moment\";\nimport placeholderimg from '../../assets/img/placeholder.png';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport tmMeterIcon from 'assets/img/tm-meter.png';\nimport { Line, Pie, Doughnut, Bar, Radar, Polar } from 'react-chartjs-2';\nimport tmQuestionIcon from 'assets/img/tm-question.png';\nimport { FiUser, FiArrowRight } from \"react-icons/fi\";\nvar today = new Date();\nvar MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar Type = 'ThisWeek';\n\nvar genLineData = function genLineData() {\n  var moreData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    labels: MONTHS,\n    datasets: [{\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] //...moreData,\n\n    }]\n  };\n}; // var products = [];\n// class BSTable extends React.Component {\n//   render() {\n//     if (this.props.data) {\n//         return(\n//             <React.Fragment >\n//                 {this.props.data.map((result,id)=>{\n//                 return (\n//                     <div className=\"expend-block pb-0\" isKey={ true }>\n//                       <h3>{result.question}</h3>\n//                       <p className=\"mb-0\"  dataField='fieldA'>{result.answer}</p> \n//                     </div>\n//                 )})}\n//             </React.Fragment>)\n//     } else {\n//       return (<p>?</p>);\n//     }\n//   }\n// }\n\n\nvar products = [];\n\nvar BSTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(BSTable, _React$Component);\n\n  function BSTable() {\n    _classCallCheck(this, BSTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BSTable).apply(this, arguments));\n  }\n\n  _createClass(BSTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.data) {\n        var _React$createElement;\n\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }, this.props.data.length > 1 ? this.props.data.map(function (result, id) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"expend-block pb-0\",\n            isKey: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }\n          }, result.question), /*#__PURE__*/React.createElement(\"p\", {\n            dataField: \"fieldA\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }\n          }, result.answer));\n        }) : /*#__PURE__*/React.createElement(\"div\", (_React$createElement = {\n          className: \"mb-0\"\n        }, _defineProperty(_React$createElement, \"className\", \"expend-block\"), _defineProperty(_React$createElement, \"isKey\", true), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }), _React$createElement), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, \"N/A\")));\n      } else {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }, \"?\");\n      }\n    }\n  }]);\n\n  return BSTable;\n}(React.Component);\n\nvar ExpandRow = /*#__PURE__*/function (_React$Component2) {\n  _inherits(ExpandRow, _React$Component2);\n\n  function ExpandRow(props) {\n    var _this2;\n\n    _classCallCheck(this, ExpandRow);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ExpandRow).call(this, props));\n    _this2.state = {\n      thermometerAns: [],\n      profile_image: '',\n      name: '',\n      totalDataSize: 0,\n      sizePerPage: 10,\n      currentPage: 1,\n      sortName: '',\n      sortOrder: '',\n      searchText: '',\n      start_date: null,\n      end_date: null,\n      type: '',\n      type_error: '',\n      placeholderSD: 'MM-DD-yyyy',\n      placeholderTD: 'MM-DD-yyyy',\n      type_error2: '',\n      genLineDT: {}\n    };\n    _this2.onPageChange = _this2.onPageChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onSizePerPageList = _this2.onSizePerPageList.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onSortChange = _this2.onSortChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onSearchChange = _this2.onSearchChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.renderShowsTotal = _this2.renderShowsTotal.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleEndDateChange = _this2.handleEndDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleInputChange = _this2.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(ExpandRow, [{\n    key: \"renderShowsTotal\",\n    value: function renderShowsTotal(start, to, paginationShowsTotal) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }\n      }, \"Showing rows \", start, \" to \", to, \" of \", paginationShowsTotal);\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      if (row._id) return true;else return false;\n    }\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      return /*#__PURE__*/React.createElement(BSTable, {\n        data: row.expand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      Type = e.target.value;\n      this.getSDate(Type);\n\n      if (Type == \"Custom\" && this.state.start_date != null && this.state.end_date != null) {\n        this.getDPReport(Type, this.state.start_date, this.state.end_date);\n        this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, Type, this.state.start_date, this.state.end_date); //this.getMASReport(Type,this.state.start_date,this.state.end_date);\n      } else if (Type == \"ThisWeek\" || Type == \"Monthly\" || Type == \"Yearly\") {\n        this.getDPReport(Type, this.state.start_date, this.state.end_date);\n        this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, Type, this.state.start_date, this.state.end_date); //this.getMASReport(Type,this.state.start_date,this.state.end_date);\n      }\n    }\n  }, {\n    key: \"getSDate\",\n    value: function getSDate(type) {\n      var errors = {};\n      var formIsValid = true;\n\n      if (type == \"Custom\" && this.state.start_date == null && this.state.end_date == null) {\n        formIsValid = false;\n        this.state.type_error = \"Please select start date\";\n        this.state.type_error2 = \"Please select end date\";\n        this.state.placeholderSD = \"MM-DD-yyyy\";\n        this.state.placeholderTD = \"MM-DD-yyyy\";\n        return false;\n      } else {\n        this.state.type_error = '';\n        this.state.type_error2 = '';\n        this.state.start_date = null;\n        this.state.end_date = null;\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        start_date: date //end_date :date\n\n      });\n\n      if (date && date != null && this.state.end_date != null) {\n        this.getDPReport(\"Custom\", date, this.state.end_date);\n        this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, \"Custom\", date, this.state.end_date); //this.getMASReport(\"Custom\",date,this.state.end_date);\n\n        this.state.type_error = '';\n        this.state.type_error2 = '';\n      }\n\n      if (date && date == null) this.state.type_error = \"Please select start date\";else if (date && date != null) {\n        this.state.type_error = \"\";\n        this.state.type = \"Custom\";\n      }\n    }\n  }, {\n    key: \"handleEndDateChange\",\n    value: function handleEndDateChange(date1) {\n      this.setState({\n        //start_date: date,\n        end_date: date1\n      });\n\n      if (date1 && date1 != null && this.state.start_date != null) {\n        this.getDPReport(\"Custom\", this.state.start_date, date1);\n        this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, \"Custom\", this.state.start_date, date1); //this.getMASReport(\"Custom\",this.state.start_date,date1);\n\n        this.state.type_error = '';\n        this.state.type_error2 = '';\n      }\n\n      if (date1 && date1 == null) this.state.type_error2 = \"Please select end date\";else if (date1 && date1 != null) {\n        this.state.type_error2 = \"\";\n        this.state.type = \"Custom\";\n      }\n\n      if (new Date(date1).toISOString() >= new Date(this.state.start_date).toISOString()) {\n        this.getDPReport(\"Custom\", this.state.start_date, date1);\n        this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, \"Custom\", this.state.start_date, date1); //this.getMASReport(\"Custom\",this.state.start_date,date1);\n      } else {\n        this.state.type_error2 = \"To date should be greater than From date\";\n      }\n    }\n  }, {\n    key: \"getDPReport\",\n    value: function getDPReport(Type, custom_date, end_date) {\n      var _this3 = this;\n\n      console.log(\"type\", Type, \"custom\", custom_date, \"end_date\", end_date);\n      var UserID = this.props.data;\n      fetch(AppConstants.API + '/child/getUsersReportView/' + UserID + '/' + Type + '/' + custom_date + '/' + end_date).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.status == \"success\") {\n          var genLineDTv = {\n            labels: data.all_dates,\n            datasets: [{\n              label: 'Reading',\n              backgroundColor: '#fd671a',\n              borderColor: '#fd671a',\n              borderWidth: 1,\n              data: data.daily_goals_percentage_values,\n              // data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n              fill: false\n            }]\n          };\n          var sd = data.all_dates[0];\n          var ed = data.all_dates[data.all_dates.length - 1];\n\n          _this3.setState({\n            genLineDT: genLineDTv,\n            all_dates: data.all_dates,\n            placeholderSD: sd,\n            placeholderTD: ed\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleDate\",\n    value: function handleDate(cell, row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }\n      }, \" \", /*#__PURE__*/React.createElement(FiUser, {\n        className: \"cs-lef\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }), \"  \", moment(row.created_date).format(\"LLL\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n      var that = this; // fetch(AppConstants.API + '/thermometerReading/getThermoReading/' + this.props.data).then(function (res) {\n      //     //console.log(res);\n      //     if (res.status == 200) {\n      //       return res.json();\n      //     }\n      //   })\n      //   .then(function (data) {\n      //     that.setState({\n      //       thermometerAns :data.data,\n      //     })\n      //     if(data.data.length>0){\n      //         that.addProducts(data.data.length);\n      //       }\n      //   }\n\n      this.getDPReport(\"ThisWeek\", null, null);\n    }\n  }, {\n    key: \"onSizePerPageList\",\n    value: function onSizePerPageList(sizePerPage) {\n      console.log(\"onSizePerPageList\", sizePerPage, \"Type\", Type);\n      var page = 1;\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, Type, this.state.custom_date, this.state.end_date);\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(page, sizePerPage) {\n      console.log(\"onPageChange\", page, sizePerPage, \"Type\", Type);\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText, Type, this.state.custom_date, this.state.end_date);\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(sortName, sortOrder) {\n      console.log(\"onSortChange\", sortName, sortOrder, \"Type\", Type);\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText, Type, this.state.custom_date, this.state.end_date);\n    }\n  }, {\n    key: \"onSearchChange\",\n    value: function onSearchChange(searchText, colInfos, multiColumnSearch) {\n      console.log(\"onSearchChange\", searchText, \"Type\", Type);\n\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else {\n        searchText = '';\n      }\n\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText, Type, this.state.custom_date, this.state.end_date);\n    }\n  }, {\n    key: \"addProducts\",\n    value: function addProducts(quantity) {\n      products = [];\n      var subArray = [];\n      var startId = products.length;\n      this.state.thermometerAns.map(function (result, i) {\n        var data1 = {};\n        data1[\"_id\"] = result._id;\n        data1[\"created_date\"] = result.created_date;\n        data1[\"expand\"] = result.thermometerData;\n        products.push(data1);\n      });\n      this.setState({\n        products: products\n      });\n    }\n  }, {\n    key: \"updateProvidersList\",\n    value: function updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText, Type, custom_date, end_date) {\n      var _this4 = this;\n\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else if (this.state.searchText && this.state.searchText !== \"\") {\n        searchText = this.state.searchText;\n      } else {\n        searchText = '';\n      }\n\n      var addType = Type == 'undefined' ? 'ThisWeek' : Type;\n      console.log(\"type323\", Type, \"custom323\", custom_date, end_date);\n      var tablefilterdata = {\n        page: page,\n        sizeperpage: sizePerPage,\n        sortname: sortName,\n        sortorder: sortOrder,\n        serchtext: searchText,\n        defaultSearchText: searchText,\n        Type: addType,\n        custom_date: custom_date,\n        end_date: end_date\n      };\n      console.log(\"tablefilterdata\", tablefilterdata);\n      axios.post(AppConstants.API + '/thermometerReading/getThermoReading/' + this.props.data, tablefilterdata).then(function (res) {\n        if (res.data.Status === 'Success') {\n          _this4.setState({\n            thermometerAns: res.data.data,\n            currentPage: page,\n            sizePerPage: sizePerPage,\n            sortName: sortName,\n            sortOrder: sortOrder,\n            serchtext: searchText,\n            defaultSearchText: searchText\n          });\n        }\n\n        console.log(\"res.data.data353\", res.data.data);\n\n        if (res.data.data.length > 0) {\n          _this4.addProducts(res.data.data.length);\n        }\n      });\n      axios.post(AppConstants.API + '/thermometerReading/getThermoReadingCount/' + this.props.data, tablefilterdata).then(function (res) {\n        if (res.data.Status === 'Success') {\n          console.log(\"ressssss183\", res.data.data);\n\n          _this4.setState({\n            totalDataSize: res.data.data,\n            serchText: searchText,\n            defaultSearchText: searchText\n          });\n        }\n      });\n      console.log(\"this.state.thermometerAns.length368\", this.state.thermometerAns.length);\n      this.setState({\n        paginationShowsTotal: [this.state.thermometerAns.length]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement2, _React$createElement3;\n\n      //   console.log(\"products\",this.state.products)\n      var image;\n\n      if (this.state.profile_image == '' || this.state.profile_image == undefined) {\n        image = placeholderimg;\n      } else {\n        image = this.state.profile_image;\n      }\n\n      var optionsTwo = {\n        annotation: {\n          annotations: [{\n            drawTime: 'afterDatasetsDraw',\n            borderColor: 'red',\n            borderDash: [2, 2],\n            borderWidth: 1,\n            mode: 'vertical',\n            type: 'line',\n            value: 10,\n            scaleID: 'x-axis-0'\n          }]\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        maintainAspectRation: false\n      };\n      var options = {\n        //   expandRowBgColor: 'rgb(242, 255, 163)',\n        insertText: \"New\",\n        deleteText: 'Delete',\n        saveText: 'Save',\n        closeText: 'Close',\n        insertBtn: this.createCustomInsertButton,\n        page: this.state.currentPage,\n        // which page you want to show as default\n        sizePerPageList: [5, 10, 20, 50],\n        // you can change the dropdown list for size per page\n        sizePerPage: this.state.sizePerPage,\n        // which size per page you want to locate as default\n        pageStartIndex: 1,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        paginationPosition: 'bottom',\n        // default is bottom, top and both is all available\n        onPageChange: this.onPageChange,\n        onSizePerPageList: this.onSizePerPageList,\n        onSortChange: this.onSortChange,\n        onSearchChange: this.onSearchChange,\n        insertModal: this.createCustomModal,\n        paginationShowsTotal: this.renderShowsTotal\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"examplePassword\",\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 70\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: tmMeterIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 78\n        }\n      }), \"Thermometer Stats & Questions\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center m-auto pt-3 sort-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 mb-0 position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"type\",\n        onChange: this.handleInputChange,\n        value: this.state.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"ThisWeek\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 35\n        }\n      }, \"Weekly\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Monthly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 35\n        }\n      }, \"Monthly\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Yearly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 35\n        }\n      }, \"Yearly\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 35\n        }\n      }, \"Custom\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 position-relative dp-icn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, (_React$createElement2 = {\n        name: \"start_date\",\n        className: \"form-control\" //placeholderText=\"MM-DD-YYYY\"\n        ,\n        placeholderText: this.state.placeholderSD //placeholderText=\"02/09/2019\"\n        ,\n        selected: this.state.start_date,\n        selectsStart: true,\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        dateFormat: \"MM-dd-yyyy\",\n        minDate: new Date().setFullYear(new Date().getFullYear() - 5),\n        maxDate: new Date(),\n        onKeyDown: function onKeyDown(e) {\n          return e.preventDefault();\n        }\n      }, _defineProperty(_React$createElement2, \"className\", \"form-control\"), _defineProperty(_React$createElement2, \"__self\", this), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 33\n      }), _React$createElement2)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error d-block\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 31\n        }\n      }, this.state.type_error)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 position-relative dp-icn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, (_React$createElement3 = {\n        name: \"end_date\",\n        className: \"form-control\" //placeholderText=\"MM-DD-YYYY\"\n        ,\n        placeholderText: this.state.placeholderTD,\n        selected: this.state.end_date,\n        selectsEnd: true,\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\" //startDate={this.state.startDate}\n        ,\n        dateFormat: \"MM-dd-yyyy\",\n        endDate: this.state.endDate,\n        onChange: this.handleEndDateChange,\n        autoComplete: \"off\",\n        onKeyDown: function onKeyDown(e) {\n          return e.preventDefault();\n        },\n        minDate: new Date().setFullYear(new Date().getFullYear() - 5),\n        maxDate: new Date()\n      }, _defineProperty(_React$createElement3, \"className\", \"form-control\"), _defineProperty(_React$createElement3, \"__self\", this), _defineProperty(_React$createElement3, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 29\n      }), _React$createElement3)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error d-block\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 31\n        }\n      }, this.state.type_error2))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-11 m-auto pt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        data: this.state.genLineDT,\n        options: optionsTwo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 63\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return ExpandRow;\n}(React.Component);\n\nexport { ExpandRow as default };","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/Children/thermometerDT.js"],"names":["React","Row","CardBody","CardHeader","Card","Col","Label","FormGroup","BootstrapTable","TableHeaderColumn","Page","AppConstants","moment","placeholderimg","axios","DatePicker","tmMeterIcon","Line","Pie","Doughnut","Bar","Radar","Polar","tmQuestionIcon","FiUser","FiArrowRight","today","Date","MONTHS","Type","genLineData","moreData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","products","BSTable","props","length","map","result","id","question","answer","Component","ExpandRow","state","thermometerAns","profile_image","name","totalDataSize","sizePerPage","currentPage","sortName","sortOrder","searchText","start_date","end_date","type","type_error","placeholderSD","placeholderTD","type_error2","genLineDT","onPageChange","bind","onSizePerPageList","onSortChange","onSearchChange","renderShowsTotal","handleChange","handleEndDateChange","handleInputChange","start","to","paginationShowsTotal","row","_id","expand","e","setState","target","value","getSDate","getDPReport","updateProvidersList","errors","formIsValid","date","date1","toISOString","custom_date","console","log","UserID","fetch","API","then","response","json","status","genLineDTv","all_dates","borderWidth","daily_goals_percentage_values","sd","ed","cell","created_date","format","that","page","defaultSearchText","colInfos","multiColumnSearch","quantity","subArray","startId","i","data1","thermometerData","push","addType","tablefilterdata","sizeperpage","sortname","sortorder","serchtext","post","res","Status","addProducts","serchText","image","undefined","optionsTwo","annotation","annotations","drawTime","mode","scaleID","scales","yAxes","ticks","beginAtZero","maintainAspectRation","options","insertText","deleteText","saveText","closeText","insertBtn","createCustomInsertButton","sizePerPageList","pageStartIndex","paginationSize","paginationPosition","insertModal","createCustomModal","startDate","endDate","setFullYear","getFullYear","preventDefault","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Row,\n  CardBody,\n  CardHeader,\n  Card, \n  Col,\n  Label,\n  FormGroup,\n} from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Page from 'components/Page';\nimport AppConstants from 'AppConstants';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport moment from \"moment\";\nimport placeholderimg from '../../assets/img/placeholder.png';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport tmMeterIcon from 'assets/img/tm-meter.png';\nimport { Line, Pie, Doughnut, Bar, Radar, Polar } from 'react-chartjs-2';\nimport tmQuestionIcon from 'assets/img/tm-question.png';\nimport { FiUser, FiArrowRight } from \"react-icons/fi\";\n\nconst today = new Date();\n\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August', 'September', 'October', 'November', 'December' ];\nvar Type = 'ThisWeek';\nconst genLineData = (moreData = {}) => {\n  return {\n    labels: MONTHS,\n    datasets: [\n      {\n        label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        //...moreData,\n      },\n    ],\n  };\n};\n\n// var products = [];\n// class BSTable extends React.Component {\n//   render() {\n//     if (this.props.data) {\n//         return(\n//             <React.Fragment >\n//                 {this.props.data.map((result,id)=>{\n//                 return (\n//                     <div className=\"expend-block pb-0\" isKey={ true }>\n//                       <h3>{result.question}</h3>\n//                       <p className=\"mb-0\"  dataField='fieldA'>{result.answer}</p> \n//                     </div>\n//                 )})}\n//             </React.Fragment>)\n//     } else {\n//       return (<p>?</p>);\n//     }\n//   }\n// }\n\n\nvar products = [];\nclass BSTable extends React.Component {\n  render() {\n    if (this.props.data) {\n        return(\n            <React.Fragment >\n              {this.props.data.length >1 ?\n                 this.props.data.map((result,id)=>{\n                  return (\n                      <div className=\"expend-block pb-0\" isKey={ true }>\n                        <h3>{result.question}</h3>\n                        <p  dataField='fieldA'>{result.answer}</p> \n                      </div>\n                  )}):<div className=\"mb-0\" className=\"expend-block\" isKey={ true }>\n                        <h3>{\"N/A\"}</h3>\n                  </div>\n              }               \n            </React.Fragment>)\n    } else {\n      return (<p>?</p>);\n    }\n  }\n}\nexport default class ExpandRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        thermometerAns:[],\n        profile_image:'',\n        name:'',\n        totalDataSize: 0,\n        sizePerPage: 10,\n        currentPage: 1,\n        sortName: '',\n        sortOrder: '',\n        searchText: '',\n        start_date : null,\n        end_date : null,\n        type : '', \n        type_error : '',\n        placeholderSD : 'MM-DD-yyyy',\n      placeholderTD : 'MM-DD-yyyy',\n        type_error2 : '',\n      genLineDT : {},\n\n    }\n    this.onPageChange = this.onPageChange.bind(this);\n    this.onSizePerPageList = this.onSizePerPageList.bind(this);\n    this.onSortChange = this.onSortChange.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this); \n    this.renderShowsTotal = this.renderShowsTotal.bind(this); \n    this.handleChange = this.handleChange.bind(this); \n    this.handleEndDateChange = this.handleEndDateChange.bind(this);   \n    this.handleInputChange = this.handleInputChange.bind(this); \n\n  }\n\n  renderShowsTotal(start, to, paginationShowsTotal) {\n    return (\n    <span >\n       Showing rows { start } to { to } of { paginationShowsTotal }\n    </span>\n    );\n  }\n  \n  isExpandableRow(row) {\n    if (row._id) return true;\n    else return false;\n  }\n  expandComponent(row) {\n    return (\n      <BSTable data={ row.expand } />\n    );\n  }\n\n\n  handleInputChange(e) {\n    this.setState({\n        [e.target.name]: e.target.value\n    });\n     \n      Type = e.target.value;\n  \n    this.getSDate(Type);\n    if(Type == \"Custom\" && this.state.start_date !=null && this.state.end_date!=null) {\n         this.getDPReport(Type,this.state.start_date,this.state.end_date);\n         this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,Type,this.state.start_date,this.state.end_date);\n        //this.getMASReport(Type,this.state.start_date,this.state.end_date);\n    }\n    else if(Type == \"ThisWeek\" || Type == \"Monthly\" ||  Type == \"Yearly\") {\n       this.getDPReport(Type,this.state.start_date,this.state.end_date);\n       this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,Type,this.state.start_date,this.state.end_date);\n      //this.getMASReport(Type,this.state.start_date,this.state.end_date);\n    }\n     \n  }\n  getSDate(type) {\n    let errors = {};\n    let formIsValid = true;\n  \n        \n    if(type == \"Custom\" && this.state.start_date == null && this.state.end_date == null){\n        formIsValid = false;\n        this.state.type_error = \"Please select start date\";\n        this.state.type_error2=\"Please select end date\";\n        this.state.placeholderSD = \"MM-DD-yyyy\";\n        this.state.placeholderTD = \"MM-DD-yyyy\";\n        return false;\n    } else {\n      this.state.type_error='';\n      this.state.type_error2='';\n      this.state.start_date=null;\n      this.state.end_date=null;\n    }\n  };\n\n  handleChange(date) {\n    this.setState({\n      start_date: date\n      //end_date :date\n    });\n    if(date && date!=null && this.state.end_date != null){\n       this.getDPReport(\"Custom\",date,this.state.end_date);\n       this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,\"Custom\",date,this.state.end_date);\n      //this.getMASReport(\"Custom\",date,this.state.end_date);\n      this.state.type_error='';\n      this.state.type_error2='';\n    }\n    if(date && date==null)\n    this.state.type_error = \"Please select start date\";\n    else if(date && date!=null) {\n    this.state.type_error = \"\";\n    this.state.type = \"Custom\";\n    }\n  }\n\n  handleEndDateChange(date1) {\n    this.setState({\n      //start_date: date,\n      end_date :date1\n      \n    });\n    if(date1 && date1!=null && this.state.start_date != null){\n       this.getDPReport(\"Custom\",this.state.start_date,date1);\n       this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,\"Custom\",this.state.start_date,date1);\n      //this.getMASReport(\"Custom\",this.state.start_date,date1);\n      this.state.type_error='';\n      this.state.type_error2='';\n    }\n    \n    if(date1 && date1==null)\n    this.state.type_error2=\"Please select end date\";\n    else if(date1 && date1!=null){\n    this.state.type_error2 = \"\";\n    this.state.type = \"Custom\";\n    }\n  \n    if(new Date(date1).toISOString() >= new Date(this.state.start_date).toISOString()) {\n       this.getDPReport(\"Custom\",this.state.start_date,date1);\n       this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,\"Custom\",this.state.start_date,date1);\n      //this.getMASReport(\"Custom\",this.state.start_date,date1);\n    } else {\n      this.state.type_error2=\"To date should be greater than From date\";\n    }\n  \n    \n  }\n  getDPReport(Type,custom_date,end_date){\n    console.log(\"type\",Type,\"custom\",custom_date,\"end_date\",end_date);\n    var UserID =this.props.data;\n    fetch(AppConstants.API+'/child/getUsersReportView/'+ UserID +'/'+Type+'/'+custom_date+'/'+end_date).then(response => response.json())\n    .then(data => { \n     if(data.status == \"success\")\n      {\n        var genLineDTv={\n          labels: data.all_dates,\n          datasets: [\n            {\n              label: 'Reading',\n              backgroundColor: '#fd671a',\n              borderColor: '#fd671a',\n              borderWidth: 1,\n              data: data.daily_goals_percentage_values  ,\n              // data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n              fill:false\n            },\n          ],\n        };\n        var sd = data.all_dates[0];\n        var ed = data.all_dates[data.all_dates.length-1];\n        this.setState({ genLineDT:genLineDTv ,all_dates: data.all_dates,placeholderSD:sd,placeholderTD:ed});\n      } \n      });\n  }\n  handleDate(cell,row){\n    return(\n      <div> <FiUser className=\"cs-lef\" />  {moment(row.created_date).format(\"LLL\")}</div> \n    )\n }\n  componentDidMount(){\n    this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n\n\n    const that = this;\n    // fetch(AppConstants.API + '/thermometerReading/getThermoReading/' + this.props.data).then(function (res) {\n    //     //console.log(res);\n    //     if (res.status == 200) {\n    //       return res.json();\n    //     }\n    //   })\n    //   .then(function (data) {\n       \n    //     that.setState({\n    //       thermometerAns :data.data,\n      \n    //     })\n    //     if(data.data.length>0){\n    //         that.addProducts(data.data.length);\n    //       }\n    //   }\n    this.getDPReport(\"ThisWeek\",null,null); \n    \n  }\n  onSizePerPageList(sizePerPage) {\n    console.log(\"onSizePerPageList\",sizePerPage,\"Type\",Type);\n    let page = 1;\n     this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,Type,this.state.custom_date,this.state.end_date);\n  }\n  onPageChange(page, sizePerPage) {\n    console.log(\"onPageChange\",page,sizePerPage,\"Type\",Type)\n     this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText,Type,this.state.custom_date,this.state.end_date);\n  }\n  onSortChange(sortName, sortOrder) { \n    console.log(\"onSortChange\",sortName,sortOrder,\"Type\",Type)\n      let page = 1;\n       this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText,Type,this.state.custom_date,this.state.end_date);\n  }\n  onSearchChange(searchText, colInfos, multiColumnSearch) {\n    console.log(\"onSearchChange\",searchText,\"Type\",Type)\n    if(searchText && searchText !== \"\") {\n    searchText = searchText;\n    }else  {  \n    searchText = '';\n    }\n      let page = 1;\n       this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText,Type,this.state.custom_date,this.state.end_date);\n  }\n  addProducts(quantity) {\n     products = [];\n     var subArray = [];\n    const startId = products.length;\n    this.state.thermometerAns.map((result,i)=>{\n        var data1 = {};\n        data1[\"_id\"] = result._id\n        data1[\"created_date\"] = result.created_date\n        data1[\"expand\"] = result.thermometerData;\n        products.push(data1)\n\n    })\n\n    this.setState({products:products})\n  }\n  updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText,Type,custom_date,end_date){\n    if(searchText && searchText !== \"\") {\n      searchText = searchText;\n    }else if(this.state.searchText && this.state.searchText !== \"\") {\n      searchText = this.state.searchText;\n    }else {\n      searchText = '';\n    }\n    var addType =  (Type == 'undefined') ? 'ThisWeek' : Type;\n\n    console.log(\"type323\",Type,\"custom323\",custom_date,end_date);\n    let tablefilterdata = {\n      page: page,\n      sizeperpage: sizePerPage,\n      sortname: sortName,\n      sortorder: sortOrder,\n      serchtext: searchText,\n      defaultSearchText: searchText,\n      Type:addType,\n      custom_date:custom_date,\n      end_date:end_date\n\n    };\n    console.log(\"tablefilterdata\",tablefilterdata)\n      axios.post(AppConstants.API+'/thermometerReading/getThermoReading/' + this.props.data, tablefilterdata).then(res => {\n        if (res.data.Status === 'Success') {\n          this.setState({\n            thermometerAns: res.data.data,\n            currentPage: page,\n            sizePerPage: sizePerPage,\n            sortName: sortName,\n            sortOrder: sortOrder,\n            serchtext: searchText,\n            defaultSearchText: searchText\n  \n          });\n        }  \n        console.log(\"res.data.data353\",res.data.data)  \n        if(res.data.data.length>0){\n            this.addProducts(res.data.data.length);\n        }     \n      });\n    axios.post(AppConstants.API+'/thermometerReading/getThermoReadingCount/' + this.props.data, tablefilterdata).then(res => {\n      if (res.data.Status === 'Success') {\n        console.log(\"ressssss183\",res.data.data)\n        this.setState({\n          totalDataSize: res.data.data,\n            serchText: searchText,\n            defaultSearchText: searchText\n        });\n      }         \n    });\n    console.log(\"this.state.thermometerAns.length368\",this.state.thermometerAns.length)\n    this.setState({\n      paginationShowsTotal: [this.state.thermometerAns.length]\n    });\n  }\n  render() {\n    //   console.log(\"products\",this.state.products)\n    let image;\n    if (this.state.profile_image == '' || this.state.profile_image == undefined) {\n        image = placeholderimg;\n    }\n    else {\n        image =  this.state.profile_image\n    }\n    const optionsTwo = {\n      annotation: {\n            annotations: [{\n                drawTime: 'afterDatasetsDraw',\n                borderColor: 'red',\n                borderDash: [2, 2],\n                borderWidth: 1,\n                mode: 'vertical',\n                type: 'line',\n                value: 10,\n                scaleID: 'x-axis-0'\n          }]\n      },\n      scales: {\n        yAxes: [{         \n          ticks: {         \n            beginAtZero: true,        \n          }         \n        }]         \n      },\n      maintainAspectRation: false\n  };\n    const options = {\n    //   expandRowBgColor: 'rgb(242, 255, 163)',\n    insertText: \"New\",\n      \n    deleteText: 'Delete',\n\n    saveText: 'Save',\n\n    closeText: 'Close',\n\n    insertBtn: this.createCustomInsertButton,\n  \n    page: this.state.currentPage,  // which page you want to show as default\n\n    sizePerPageList: [ 5, 10, 20, 50], // you can change the dropdown list for size per page\n\n    sizePerPage: this.state.sizePerPage,  // which size per page you want to locate as default\n\n    pageStartIndex: 1, // where to start counting the pages\n\n    paginationSize: 3,  // the pagination bar size.\n\n    paginationPosition: 'bottom',  // default is bottom, top and both is all available\n\n    onPageChange: this.onPageChange,\n\n    onSizePerPageList: this.onSizePerPageList,\n\n    onSortChange: this.onSortChange,\n\n    onSearchChange: this.onSearchChange,\n\n    insertModal: this.createCustomModal, \n\n    paginationShowsTotal: this.renderShowsTotal\n\n    };\n        return (\n          <React.Fragment>\n                  <Row>\n                  <Col xl={12} lg={12} md={12}>\n                    \n                        <CardHeader className=\"d-flex justify-content-between\">\n                        <Label for=\"examplePassword\" className=\"m-0\"><strong><img src={tmMeterIcon} />Thermometer Stats & Questions</strong></Label>\n                      </CardHeader>\n                        <CardBody>\n                          <div className=\"d-flex justify-content-center m-auto pt-3 sort-control\">\n                              <div className=\"col-3 mb-0 position-relative\">\n                                <select className=\"form-control\" name=\"type\" onChange={ this.handleInputChange } value={this.state.type}>\n                                  <option value=\"ThisWeek\">Weekly</option>\n                                  <option value=\"Monthly\">Monthly</option>\n                                  <option value=\"Yearly\">Yearly</option>\n                                  <option value=\"Custom\">Custom</option> \n                                </select>\n                              </div>\n                                <div className=\"col-3 position-relative dp-icn\">\n                                <DatePicker\n                                name=\"start_date\"\n                                className=\"form-control\"\n                                //placeholderText=\"MM-DD-YYYY\"\n                                placeholderText={this.state.placeholderSD}\n                                //placeholderText=\"02/09/2019\"\n                                selected={this.state.start_date}\n                                selectsStart\n                                peekNextMonth\n                                showMonthDropdown\n                                showYearDropdown\n                                dropdownMode=\"select\"\n                                startDate={this.state.startDate}\n                                endDate={this.state.endDate}\n                                onChange={this.handleChange}\n                                autoComplete = \"off\"\n                                dateFormat={\"MM-dd-yyyy\"}\n                                minDate={new Date().setFullYear(new Date().getFullYear() - 5)}   \n                                  maxDate={new Date()}\n                                  onKeyDown={(e) =>e.preventDefault()}\n                                className=\"form-control\" />\n                              <span className=\"error d-block\" style={{color: 'red'}}>{this.state.type_error}</span>\n                            </div>\n                            <div className=\"col-3 position-relative dp-icn\">\n                            <DatePicker\n                                name=\"end_date\"\n                                className=\"form-control\"\n                                //placeholderText=\"MM-DD-YYYY\"\n                                placeholderText={this.state.placeholderTD}                    \n                                selected={this.state.end_date}\n                                selectsEnd\n                                peekNextMonth\n                                showMonthDropdown\n                                showYearDropdown\n                                dropdownMode=\"select\"\n                                //startDate={this.state.startDate}\n                                dateFormat={\"MM-dd-yyyy\"}\n                                endDate={this.state.endDate}\n                                onChange={this.handleEndDateChange}\n                                autoComplete = \"off\"\n                                onKeyDown={(e) =>e.preventDefault()}\n                                minDate={new Date().setFullYear(new Date().getFullYear() - 5)}   \n                                maxDate={new Date()}\n                                className=\"form-control\" />\n                              <span className=\"error d-block\" style={{color: 'red'}}>{this.state.type_error2}</span>\n                            </div>\n                          </div>\n                          <div className=\"col-11 m-auto pt-4\"><Line data={this.state.genLineDT}  options={optionsTwo} /></div>\n                        </CardBody>\n                  \n                        </Col>\n                   \n                    <Col xl={12} lg={12} md={12}>\n                    \n                        {/* <CardHeader><Label for=\"examplePassword\" className=\"m-0\"><strong><img src={tmQuestionIcon} />Thermometer Questions</strong></Label></CardHeader> */}\n                            {/* <CardBody>\n                                <div>\n                                <BootstrapTable className=\"toogle-data-tables\" data={products} \n                                fetchInfo={ { dataTotalSize: this.state.totalDataSize } }\n                                remote = { true }\n                                // search={ true }\n                                 pagination={ true } multiColumnSearch={ true }\n                                options={ options }\n                                expandableRow={ this.isExpandableRow }\n                                expandComponent={ this.expandComponent }\n                                expandColumnOptions={ { expandColumnVisible: true } }>\n                                    <TableHeaderColumn dataField='_id' isKey={true} searchable={false} dataSort={true} hidden={true}>ID</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='created_date' dataFormat={this.handleDate.bind(this)}>Date</TableHeaderColumn>\n                                </BootstrapTable>\n                                </div>\n                            </CardBody> */}\n                      \n                        </Col>\n                    </Row>\n               </React.Fragment>\n              )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}