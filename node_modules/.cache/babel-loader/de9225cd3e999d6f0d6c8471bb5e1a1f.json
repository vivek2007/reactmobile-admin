{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport RootClose from '../components/RootClose.react';\nimport { getDisplayName, isFunction, noop } from '../utils';\nimport { BACKSPACE } from '../constants';\nimport { optionType } from '../propTypes';\nvar propTypes = {\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onRemove: PropTypes.func,\n  option: optionType.isRequired\n};\nvar defaultProps = {\n  onBlur: noop,\n  onClick: noop,\n  onFocus: noop\n};\n/**\n * Higher-order component to encapsulate Token behaviors.\n */\n\nvar tokenContainer = function tokenContainer(Component) {\n  var WrappedComponent = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(WrappedComponent, _React$Component);\n\n    function WrappedComponent() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", {\n        active: false\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleActiveChange\", function (e, active, callback) {\n        // e.persist() isn't always present.\n        e.persist && e.persist();\n        e.stopPropagation();\n\n        _this.setState({\n          active: active\n        }, function () {\n          return callback(e);\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n        _this._handleActiveChange(e, false, _this.props.onBlur);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleClick\", function (e) {\n        _this._handleActiveChange(e, true, _this.props.onClick);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n        _this._handleActiveChange(e, true, _this.props.onFocus);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n        switch (e.keyCode) {\n          case BACKSPACE:\n            if (_this.state.active) {\n              // Prevent backspace keypress from triggering the browser \"back\"\n              // action.\n              e.preventDefault();\n\n              _this._handleRemove();\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleRemove\", function () {\n        var _this$props = _this.props,\n            onRemove = _this$props.onRemove,\n            option = _this$props.option; // Flow having trouble with `isFunction` here for some reason...\n\n        if (typeof onRemove === 'function') {\n          onRemove(option);\n        }\n      });\n\n      return _this;\n    }\n\n    var _proto = WrappedComponent.prototype;\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      var onRemove = this.props.onRemove;\n      var active = this.state.active;\n      return React.createElement(RootClose, {\n        disabled: !active,\n        onRootClose: this._handleBlur\n      }, function (ref) {\n        return React.createElement(Component, _extends({}, _this2.props, {\n          active: active,\n          onBlur: _this2._handleBlur,\n          onClick: _this2._handleClick,\n          onFocus: _this2._handleFocus,\n          onKeyDown: _this2._handleKeyDown,\n          onRemove: isFunction(onRemove) ? _this2._handleRemove : undefined,\n          ref: ref\n        }));\n      });\n    };\n\n    return WrappedComponent;\n  }(React.Component);\n\n  _defineProperty(WrappedComponent, \"displayName\", \"tokenContainer(\" + getDisplayName(Component) + \")\");\n\n  _defineProperty(WrappedComponent, \"propTypes\", propTypes);\n\n  _defineProperty(WrappedComponent, \"defaultProps\", defaultProps);\n\n  return WrappedComponent;\n};\n\nexport default tokenContainer;","map":null,"metadata":{},"sourceType":"module"}