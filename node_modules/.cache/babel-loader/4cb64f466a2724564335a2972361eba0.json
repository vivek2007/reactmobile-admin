{"ast":null,"code":"import _defineProperty from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/Allservices/editservice.js\";\nimport React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport NumberFormat from 'react-number-format';\n\nvar EditProgram = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProgram, _React$Component);\n\n  function EditProgram() {\n    var _this;\n\n    _classCallCheck(this, EditProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProgram).call(this));\n    _this.state = {\n      ServiceType: \"\",\n      status: true,\n      loading: \"\",\n      errors: {},\n      ServiceType_error: false,\n      description: \"\",\n      description_error: false,\n      duration: '',\n      duration_error: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditProgram, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var errors = {};\n\n      if (e.target.name == \"ServiceType\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            ServiceType_error: false\n          });\n        } else {\n          errors[\"ServiceType\"] = \"Please enter ServiceType\";\n          this.setState({\n            ServiceType_error: true,\n            errors: errors\n          });\n        }\n      }\n\n      if (e.target.name == \"description\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            description_error: false\n          });\n        } else {\n          this.setState({\n            description_error: true\n          });\n        }\n      }\n\n      if (e.target.name == \"duration\") {\n        if (e.target.value != 0) {\n          this.setState({\n            duration_error: false\n          });\n        } else {\n          this.setState({\n            duration_error: true\n          });\n        }\n      }\n\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var errors = {};\n      var formIsValid = true;\n\n      if (!this.state.duration) {\n        formIsValid = false;\n        errors[\"duration\"] = \"Please enter duration\";\n        ReactDOM.findDOMNode(this.refs.duration).focus();\n      }\n\n      if (!this.state.description) {\n        formIsValid = false;\n        errors[\"description\"] = \"Please enter description\";\n        ReactDOM.findDOMNode(this.refs.description).focus();\n      }\n\n      if (!this.state.ServiceType) {\n        formIsValid = false;\n        errors[\"ServiceType\"] = \"Please enter ServiceType\";\n        ReactDOM.findDOMNode(this.refs.ServiceType).focus();\n      }\n\n      this.setState({\n        errors: errors,\n        ServiceType_error: true,\n        description_error: true,\n        duration_error: true\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleStatusChange\",\n    value: function handleStatusChange(checked) {\n      this.setState({\n        status: checked\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var formval = {};\n\n      if (this.handleValidation()) {\n        this.setState({\n          loading: 1\n        });\n        console.log(\" this.state.status\", this.state.status);\n        formval = {\n          'ServiceType': this.state.ServiceType,\n          'status': this.state.status,\n          'description': this.state.description,\n          'duration': this.state.duration\n        };\n        axios.post(AppConstants.API + '/programs/updateProgram/' + this.props.match.params.id, formval).then(function (res) {\n          if (res.data.Status == \"Success\") {\n            setTimeout(function (e) {\n              _this2.props.history.push('/programs');\n            }, 2000);\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-success fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          } else {\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-danger fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var element = document.getElementById(\"navItem-Programs-2\");\n      element.classList.add(\"active\");\n      fetch(AppConstants.API + '/programs/getProgram/' + this.props.match.params.id).then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        _this3.setState({\n          ServiceType: result.data.ServiceType,\n          status: result.data.status,\n          description: result.data.description,\n          duration: result.data.duration\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Page, {\n        title: \"Edit Programs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cst-breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/programs',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, \"Programs\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, \"Edit Programs\")), /*#__PURE__*/React.createElement(ReactTitle, {\n        title: \"Edit Programs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"addchild\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"ServiceType\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 41\n        }\n      }, \"Title\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 49\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"ServiceType\",\n        placeholder: \"Title\",\n        value: this.state.ServiceType,\n        onChange: this.handleInputChange,\n        ref: \"ServiceType\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 45\n        }\n      }), this.state.ServiceType_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 84\n        }\n      }, this.state.errors[\"ServiceType\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 41\n        }\n      }, \"Description\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 55\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"textarea\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        ref: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 45\n        }\n      }), this.state.description_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 85\n        }\n      }, this.state.errors[\"description\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 41\n        }\n      }, \"Duration(Days)\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 55\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(NumberFormat, {\n        type: \"text\",\n        name: \"duration\",\n        placeholder: \"Duration\",\n        value: this.state.duration,\n        onChange: this.handleInputChange,\n        ref: \"duration\",\n        className: \"form-control\",\n        decimalScale: 0,\n        allowNegative: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 45\n        }\n      }), this.state.duration_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 82\n        }\n      }, this.state.errors[\"duration\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 41\n        }\n      }, \"Status\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 50\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        onChange: this.handleStatusChange.bind(this),\n        checked: this.state.status,\n        uncheckedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"150px\",\n            color: \"#000\",\n            fontWeight: \"bold\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 45\n          }\n        }, \"Inactive\"),\n        checkedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"180px\",\n            fontWeight: \"bold\",\n            color: \"#000\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 45\n          }\n        }, \"Active\"),\n        onColor: \"#45b649\",\n        offColor: \"#ffd700\",\n        className: \"react-switch\",\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n        activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n        height: 20,\n        width: 48,\n        handleDiameter: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 45\n        }\n      }, \"Update    \", /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 121\n        }\n      }, \"               \", /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 234\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), \"\\xA0\", /*#__PURE__*/React.createElement(Link, {\n        to: \"/programs\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 45\n        }\n      }, \"\\xA0Cancel\"))), this.state.errMsg))))));\n    }\n  }]);\n\n  return EditProgram;\n}(React.Component);\n\nEditProgram.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(EditProgram);","map":{"version":3,"sources":["/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/Allservices/editservice.js"],"names":["React","Page","axios","AppConstants","ReactTitle","Link","Row","Col","Card","CardBody","Button","Form","FormGroup","Label","Input","Loading","PropTypes","connect","ReactDOM","Switch","NumberFormat","EditProgram","state","ServiceType","status","loading","errors","ServiceType_error","description","description_error","duration","duration_error","handleSubmit","bind","handleInputChange","e","target","name","value","setState","formIsValid","findDOMNode","refs","focus","checked","preventDefault","formval","handleValidation","console","log","post","API","props","match","params","id","then","res","data","Status","setTimeout","history","push","errMsg","msg","element","document","getElementById","classList","add","fetch","json","result","color","handleStatusChange","display","justifyContent","alignItems","height","fontSize","width","fontWeight","paddingRight","size","offset","Component","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAUC,IAAV,QAAsB,kBAAtB;AACA,SACIC,GADJ,EAEIC,GAFJ,EAGIC,IAHJ,EAIIC,QAJJ,EAKIC,MALJ,EAMIC,IANJ,EAOIC,SAPJ,EAQIC,KARJ,EASIC,KATJ,QAUS,YAVT;AAWA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;IAEMC,W;;;AACF,yBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAG,EADP;AAEPC,MAAAA,MAAM,EAAG,IAFF;AAGPC,MAAAA,OAAO,EAAG,EAHH;AAIPC,MAAAA,MAAM,EAAG,EAJF;AAKPC,MAAAA,iBAAiB,EAAG,KALb;AAMPC,MAAAA,WAAW,EAAC,EANL;AAOPC,MAAAA,iBAAiB,EAAC,KAPX;AAQPC,MAAAA,QAAQ,EAAC,EARF;AASPC,MAAAA,cAAc,EAAC;AATR,KAAX;AAWA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,uDAAzB;AAdS;AAeZ;;;;sCACiBE,C,EAAE;AAChB,UAAIT,MAAM,GAAG,EAAb;;AACA,UAAGS,CAAC,CAACC,MAAF,CAASC,IAAT,IAAiB,aAApB,EAAkC;AAC9B,YAAGF,CAAC,CAACC,MAAF,CAASE,KAAT,IAAkB,EAArB,EAAwB;AACpB,eAAKC,QAAL,CAAc;AAACZ,YAAAA,iBAAiB,EAAC;AAAnB,WAAd;AACH,SAFD,MAEK;AACDD,UAAAA,MAAM,CAAC,aAAD,CAAN,GAAwB,0BAAxB;AACA,eAAKa,QAAL,CAAc;AAACZ,YAAAA,iBAAiB,EAAC,IAAnB;AAAwBD,YAAAA,MAAM,EAACA;AAA/B,WAAd;AACH;AACJ;;AACD,UAAGS,CAAC,CAACC,MAAF,CAASC,IAAT,IAAiB,aAApB,EAAkC;AAC9B,YAAGF,CAAC,CAACC,MAAF,CAASE,KAAT,IAAkB,EAArB,EAAwB;AACpB,eAAKC,QAAL,CAAc;AAACV,YAAAA,iBAAiB,EAAC;AAAnB,WAAd;AACH,SAFD,MAEK;AACD,eAAKU,QAAL,CAAc;AAACV,YAAAA,iBAAiB,EAAC;AAAnB,WAAd;AACH;AACJ;;AACD,UAAGM,CAAC,CAACC,MAAF,CAASC,IAAT,IAAiB,UAApB,EAA+B;AAC3B,YAAGF,CAAC,CAACC,MAAF,CAASE,KAAT,IAAkB,CAArB,EAAuB;AACnB,eAAKC,QAAL,CAAc;AAACR,YAAAA,cAAc,EAAC;AAAhB,WAAd;AACH,SAFD,MAEK;AACD,eAAKQ,QAAL,CAAc;AAACR,YAAAA,cAAc,EAAC;AAAhB,WAAd;AACH;AACJ;;AACD,WAAKQ,QAAL,qBAAgBJ,CAAC,CAACC,MAAF,CAASC,IAAzB,EAA+BF,CAAC,CAACC,MAAF,CAASE,KAAxC;AACH;;;uCACiB;AACd,UAAIZ,MAAM,GAAG,EAAb;AACA,UAAIc,WAAW,GAAG,IAAlB;;AACA,UAAI,CAAC,KAAKlB,KAAL,CAAWQ,QAAhB,EAAyB;AACrBU,QAAAA,WAAW,GAAG,KAAd;AACAd,QAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,uBAArB;AACAR,QAAAA,QAAQ,CAACuB,WAAT,CAAqB,KAAKC,IAAL,CAAUZ,QAA/B,EAAyCa,KAAzC;AACH;;AACD,UAAI,CAAC,KAAKrB,KAAL,CAAWM,WAAhB,EAA4B;AACxBY,QAAAA,WAAW,GAAG,KAAd;AACAd,QAAAA,MAAM,CAAC,aAAD,CAAN,GAAwB,0BAAxB;AACAR,QAAAA,QAAQ,CAACuB,WAAT,CAAqB,KAAKC,IAAL,CAAUd,WAA/B,EAA4Ce,KAA5C;AACH;;AACD,UAAI,CAAC,KAAKrB,KAAL,CAAWC,WAAhB,EAA4B;AACxBiB,QAAAA,WAAW,GAAG,KAAd;AACAd,QAAAA,MAAM,CAAC,aAAD,CAAN,GAAwB,0BAAxB;AACAR,QAAAA,QAAQ,CAACuB,WAAT,CAAqB,KAAKC,IAAL,CAAUnB,WAA/B,EAA4CoB,KAA5C;AACH;;AACD,WAAKJ,QAAL,CAAc;AACVb,QAAAA,MAAM,EAAEA,MADE;AAEVC,QAAAA,iBAAiB,EAAG,IAFV;AAGVE,QAAAA,iBAAiB,EAAE,IAHT;AAIVE,QAAAA,cAAc,EAAG;AAJP,OAAd;AAMA,aAAOS,WAAP;AACH;;;uCACkBI,O,EAAQ;AACvB,WAAKL,QAAL,CAAc;AAACf,QAAAA,MAAM,EAAGoB;AAAV,OAAd;AACH;;;iCACYT,C,EAAE;AAAA;;AACXA,MAAAA,CAAC,CAACU,cAAF;AACA,UAAIC,OAAO,GAAC,EAAZ;;AACA,UAAG,KAAKC,gBAAL,EAAH,EAA2B;AACvB,aAAKR,QAAL,CAAc;AAACd,UAAAA,OAAO,EAAC;AAAT,SAAd;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAa,oBAAb,EAAkC,KAAK3B,KAAL,CAAWE,MAA7C;AACAsB,QAAAA,OAAO,GAAG;AACN,yBAAe,KAAKxB,KAAL,CAAWC,WADpB;AAEN,oBAAU,KAAKD,KAAL,CAAWE,MAFf;AAGN,yBAAc,KAAKF,KAAL,CAAWM,WAHnB;AAIN,sBAAY,KAAKN,KAAL,CAAWQ;AAJjB,SAAV;AAMA5B,QAAAA,KAAK,CAACgD,IAAN,CAAW/C,YAAY,CAACgD,GAAb,GAAiB,0BAAjB,GAA8C,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjF,EAAoFT,OAApF,EACKU,IADL,CACU,UAAAC,GAAG,EAAI;AACT,cAAGA,GAAG,CAACC,IAAJ,CAASC,MAAT,IAAmB,SAAtB,EAAgC;AAC5BC,YAAAA,UAAU,CAAC,UAACzB,CAAD,EAAO;AACd,cAAA,MAAI,CAACiB,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH,aAFS,EAEP,IAFO,CAAV;AAGAF,YAAAA,UAAU,CAAC,YAAM;AACf,cAAA,MAAI,CAACrB,QAAL,CAAc;AACZd,gBAAAA,OAAO,EAAC,EADI;AAEZsC,gBAAAA,MAAM,eAAI;AAAK,kBAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqDN,GAAG,CAACC,IAAJ,CAASM,GAA9D;AAFE,eAAd;AAID,aALS,EAKP,IALO,CAAV;AAMH,WAVD,MAWI;AACAJ,YAAAA,UAAU,CAAC,YAAM;AACf,cAAA,MAAI,CAACrB,QAAL,CAAc;AACZd,gBAAAA,OAAO,EAAC,EADI;AAEZsC,gBAAAA,MAAM,eAAI;AAAK,kBAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoDN,GAAG,CAACC,IAAJ,CAASM,GAA7D;AAFE,eAAd;AAID,aALS,EAKP,IALO,CAAV;AAMH;AACR,SArBD;AAsBH;AACJ;;;wCACkB;AAAA;;AACf,UAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAd;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,QAAtB;AACAC,MAAAA,KAAK,CAACnE,YAAY,CAACgD,GAAb,GAAiB,uBAAjB,GAA2C,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApE,CAAL,CAA6EC,IAA7E,CAAkF,UAAAC,GAAG,EAAE;AACnF,YAAGA,GAAG,CAACjC,MAAJ,IAAc,GAAjB,EAAqB;AACjB,iBAAOiC,GAAG,CAACc,IAAJ,EAAP;AACH;AACJ,OAJD,EAIGf,IAJH,CAIQ,UAAAgB,MAAM,EAAE;AACZ,QAAA,MAAI,CAACjC,QAAL,CAAc;AAAChB,UAAAA,WAAW,EAACiD,MAAM,CAACd,IAAP,CAAYnC,WAAzB;AAAqCC,UAAAA,MAAM,EAACgD,MAAM,CAACd,IAAP,CAAYlC,MAAxD;AAA+DI,UAAAA,WAAW,EAAC4C,MAAM,CAACd,IAAP,CAAY9B,WAAvF;AAAmGE,UAAAA,QAAQ,EAAC0C,MAAM,CAACd,IAAP,CAAY5B;AAAxH,SAAd;AACH,OAND;AAOH;;;6BACO;AACJ,0BACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,CADJ,eAMI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,QAAQ,EAAI,KAAKE,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,aAAX;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR,CADJ,eAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,WAAW,EAAC,OAHZ;AAIA,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,WAJlB;AAKA,QAAA,QAAQ,EAAG,KAAKW,iBALhB;AAMA,QAAA,GAAG,EAAE,aANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI,KAAKZ,KAAL,CAAWK,iBAAX,IAAgC,IAAhC,gBAAuC;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,KAAK,EAAE;AAAC8C,UAAAA,KAAK,EAAE;AAAR,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD,KAAKnD,KAAL,CAAWI,MAAX,CAAkB,aAAlB,CAAhD,CAAvC,GAAgI,EATpI,CAJJ,CADJ,eAkBI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,OAAX;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADd,CADJ,eAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,WAAW,EAAC,aAHZ;AAIA,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,WAJlB;AAKA,QAAA,QAAQ,EAAG,KAAKM,iBALhB;AAMA,QAAA,GAAG,EAAE,aANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASK,KAAKZ,KAAL,CAAWO,iBAAX,IAAgC,IAAhC,gBAAuC;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,KAAK,EAAE;AAAC4C,UAAAA,KAAK,EAAE;AAAR,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD,KAAKnD,KAAL,CAAWI,MAAX,CAAkB,aAAlB,CAAhD,CAAvC,GAAgI,EATrI,CAJJ,CAlBJ,eAmCI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,OAAX;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADd,CADJ,eAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,WAAW,EAAC,UAHZ;AAIA,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWQ,QAJlB;AAKA,QAAA,QAAQ,EAAG,KAAKI,iBALhB;AAMA,QAAA,GAAG,EAAE,UANL;AAMgB,QAAA,SAAS,EAAC,cAN1B;AAM0C,QAAA,YAAY,EAAE,CANxD;AAM2D,QAAA,aAAa,EAAE,KAN1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASK,KAAKZ,KAAL,CAAWS,cAAX,IAA6B,IAA7B,gBAAoC;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,KAAK,EAAE;AAAC0C,UAAAA,KAAK,EAAE;AAAR,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD,KAAKnD,KAAL,CAAWI,MAAX,CAAkB,UAAlB,CAAhD,CAApC,GAA0H,EAT/H,CAJJ,CAnCJ,eAoDI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,QAAX;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADT,CADJ,eAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKgD,kBAAL,CAAwBzC,IAAxB,CAA6B,IAA7B,CAAlB;AAAsD,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWE,MAA1E;AACG,QAAA,aAAa,eACZ;AACI,UAAA,KAAK,EAAE;AACPmD,YAAAA,OAAO,EAAE,MADF;AAEPC,YAAAA,cAAc,EAAE,QAFT;AAGPC,YAAAA,UAAU,EAAE,QAHL;AAIPC,YAAAA,MAAM,EAAE,MAJD;AAKPC,YAAAA,QAAQ,EAAE,EALH;AAMPC,YAAAA,KAAK,EAAC,OANC;AAOPP,YAAAA,KAAK,EAAE,MAPA;AAQPQ,YAAAA,UAAU,EAAE,MARL;AASPC,YAAAA,YAAY,EAAE;AATP,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAkBI,QAAA,WAAW,eACX;AACI,UAAA,KAAK,EAAE;AACPP,YAAAA,OAAO,EAAE,MADF;AAEPC,YAAAA,cAAc,EAAE,QAFT;AAGPC,YAAAA,UAAU,EAAE,QAHL;AAIPC,YAAAA,MAAM,EAAE,MAJD;AAKPC,YAAAA,QAAQ,EAAE,EALH;AAMPC,YAAAA,KAAK,EAAC,OANC;AAOPC,YAAAA,UAAU,EAAE,MAPL;AAQPR,YAAAA,KAAK,EAAE,MARA;AASPS,YAAAA,YAAY,EAAE;AATP,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBJ;AAmCI,QAAA,OAAO,EAAG,SAnCd;AAoCI,QAAA,QAAQ,EAAG,SApCf;AAqCI,QAAA,SAAS,EAAC,cArCd;AAsCI,QAAA,SAAS,EAAC,gCAtCd;AAuCI,QAAA,eAAe,EAAC,qCAvCpB;AAwCI,QAAA,MAAM,EAAE,EAxCZ;AAyCI,QAAA,KAAK,EAAE,EAzCX;AA0CI,QAAA,cAAc,EAAE,EA1CpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAJJ,CApDJ,eAwGI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,GAAG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAG,KAAKpD,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA4E;AAAK,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWG,OAAX,GAAqB,EAArB,GAA0B;AAAEkD,UAAAA,OAAO,EAAE;AAAX,SAAtC;AAA2D,QAAA,SAAS,EAAC,4BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAiH;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACvO;AAAK,QAAA,KAAK,EAAC,kCAAX;AAA8C,QAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADuO,CAAjH,CAA5E,CADJ,uBAMI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,WAAV;AAAuB,QAAA,SAAS,EAAC,gBAAjC;AAAkD,QAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CADJ,CAxGJ,EAkHK,KAAKrD,KAAL,CAAWyC,MAlHhB,CADJ,CADJ,CADJ,CADJ,CAPJ,CADJ;AAsIH;;;;EA9PqB/D,KAAK,CAACqF,S;;AAgQhChE,WAAW,CAACiE,SAAZ,GAAwB;AACpBC,EAAAA,IAAI,EAAEvE,SAAS,CAACwE,MAAV,CAAiBC,UADH;AAEpB/D,EAAAA,MAAM,EAAEV,SAAS,CAACwE,MAAV,CAAiBC;AAFL,CAAxB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACpE,KAAD;AAAA,SAAY;AAChCiE,IAAAA,IAAI,EAAEjE,KAAK,CAACiE,IADoB;AAEhC7D,IAAAA,MAAM,EAAEJ,KAAK,CAACI;AAFkB,GAAZ;AAAA,CAAxB;;AAIA,eAAgBT,OAAO,CAACyE,eAAD,EAAkB,EAAlB,CAAP,CAA6BrE,WAA7B,CAAhB","sourcesContent":["import React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport  { Link } from 'react-router-dom';\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n  } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport NumberFormat from 'react-number-format';\n\nclass EditProgram extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            ServiceType : \"\",\n            status : true,\n            loading : \"\",\n            errors : {},\n            ServiceType_error : false,\n            description:\"\",\n            description_error:false,\n            duration:'',\n            duration_error:false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    handleInputChange(e){\n        let errors = {};\n        if(e.target.name == \"ServiceType\"){\n            if(e.target.value != \"\"){\n                this.setState({ServiceType_error:false})\n            }else{\n                errors[\"ServiceType\"] = \"Please enter ServiceType\";\n                this.setState({ServiceType_error:true,errors:errors})\n            }\n        }\n        if(e.target.name == \"description\"){\n            if(e.target.value != \"\"){\n                this.setState({description_error:false})\n            }else{\n                this.setState({description_error:true})\n            }\n        }\n        if(e.target.name == \"duration\"){\n            if(e.target.value != 0){\n                this.setState({duration_error:false})\n            }else{\n                this.setState({duration_error:true})\n            }\n        }\n        this.setState({[e.target.name]:e.target.value})\n    }\n    handleValidation(){\n        let errors = {};\n        let formIsValid = true;\n        if (!this.state.duration){\n            formIsValid = false;\n            errors[\"duration\"] = \"Please enter duration\";\n            ReactDOM.findDOMNode(this.refs.duration).focus();\n        }\n        if (!this.state.description){\n            formIsValid = false;\n            errors[\"description\"] = \"Please enter description\";\n            ReactDOM.findDOMNode(this.refs.description).focus();\n        }\n        if (!this.state.ServiceType){\n            formIsValid = false;\n            errors[\"ServiceType\"] = \"Please enter ServiceType\";\n            ReactDOM.findDOMNode(this.refs.ServiceType).focus();\n        }\n        this.setState({\n            errors: errors,\n            ServiceType_error : true,\n            description_error: true,\n            duration_error : true\n        });\n        return formIsValid;\n    }\n    handleStatusChange(checked){\n        this.setState({status : checked})\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        let formval={}\n        if(this.handleValidation()){\n            this.setState({loading:1});\n            console.log( \" this.state.status\",this.state.status);\n            formval = {\n                'ServiceType': this.state.ServiceType,\n                'status': this.state.status,\n                'description':this.state.description,\n                'duration': this.state.duration\n            }\n            axios.post(AppConstants.API+'/programs/updateProgram/' + this.props.match.params.id,formval)\n                .then(res => { \n                    if(res.data.Status == \"Success\"){\n                        setTimeout((e) => {\n                            this.props.history.push('/programs');\n                        }, 2000);\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-success fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n                    else{\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-danger fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n            })\n        }\n    }\n    componentDidMount(){\n        var element = document.getElementById(\"navItem-Programs-2\");\n        element.classList.add(\"active\");\n        fetch(AppConstants.API+'/programs/getProgram/' + this.props.match.params.id).then(res=>{\n            if(res.status == 200){\n                return res.json();\n            }\n        }).then(result=>{\n            this.setState({ServiceType:result.data.ServiceType,status:result.data.status,description:result.data.description,duration:result.data.duration})\n        })     \n    }\n    render(){\n        return(\n            <Page title=\"Edit Programs\">\n                <ul className=\"cst-breadcrumb\">\n                    <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                    <li><Link to={'/programs'}>Programs</Link></li>\n                    <li>Edit Programs</li>\n                </ul>\n                <ReactTitle title=\"Edit Programs\"/>\n                <Row>\n                    <Col xl={12} lg={12} md={12}>\n                        <Card>\n                            <CardBody>\n                                <Form name=\"addchild\" onSubmit= { this.handleSubmit }>\n                                    <FormGroup row>\n                                        <Label for=\"ServiceType\" sm={2}>\n                                           Title<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"ServiceType\"\n                                            placeholder=\"Title\"                      \n                                            value={this.state.ServiceType}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"ServiceType\"           \n                                            />\n                                           {this.state.ServiceType_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"ServiceType\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                           Description<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"textarea\"\n                                            name=\"description\"\n                                            placeholder=\"Description\"                      \n                                            value={this.state.description}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"description\"           \n                                            />\n                                            {this.state.description_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"description\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                        Duration(Days)<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <NumberFormat\n                                            type=\"text\"\n                                            name=\"duration\"\n                                            placeholder=\"Duration\"                      \n                                            value={this.state.duration}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"duration\" className=\"form-control\"  decimalScale={0} allowNegative={false}       \n                                            />\n                                            {this.state.duration_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"duration\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    \n                                    <FormGroup row>\n                                        <Label for=\"status\" sm={2}>\n                                           Status<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <Switch onChange={this.handleStatusChange.bind(this)} checked={this.state.status} \n                                           uncheckedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"150px\",\n                                                color: \"#000\",\n                                                fontWeight: \"bold\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Inactive\n                                            </div>\n                                            }\n                                            checkedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"180px\",\n                                                fontWeight: \"bold\",\n                                                color: \"#000\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Active\n                                            </div>\n                                            }\n                                            onColor = \"#45b649\"\n                                            offColor = \"#ffd700\"\n                                            className=\"react-switch\"\n                                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                                            height={20}\n                                            width={48}\n                                            handleDiameter={30}\n                                        />\n                                           \n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup check row>\n                                        <Col sm={{ size: 10, offset: 2 }}>\n                                            <Button className=\"btn btn-primary\" onClick={ this.handleSubmit }>Update    <div style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div\">               <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div></div></Button>&nbsp;\n                                            <Link to={\"/programs\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link>\n                                        </Col>\n                                    </FormGroup>\n                                    {this.state.errMsg}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Page>\n        )\n    }\n}\nEditProgram.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport  default connect(mapStateToProps, {})(EditProgram);"]},"metadata":{},"sourceType":"module"}