{"ast":null,"code":"import _classCallCheck from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pradeepkumar/Downloads/meadmin/src/components/SetadminPassword.js\";\nimport logo200Image from 'assets/img/logo/ME-logo.jpg';\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Card, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\n\nvar SetadminPassword = /*#__PURE__*/function (_React$Component) {\n  _inherits(SetadminPassword, _React$Component);\n\n  function SetadminPassword(props) {\n    var _this;\n\n    _classCallCheck(this, SetadminPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SetadminPassword).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      //console.log(process.env.REACT_APP_API_URL+'/users/login');\n      event.preventDefault();\n\n      if (_this.handleValidation()) {\n        var setadminpwd = {\n          id: _this.props.match.params.id,\n          password: _this.state.fields['password']\n        }; //axios.post('/users/setadminpassword',setadminpwd)\n\n        axios.post(AppConstants.API + '/users/setmainadminpassword', setadminpwd).then(function (res) {\n          console.log(res);\n\n          if (res.data.Status == \"Success\") {\n            setTimeout(function () {\n              window.location.href = '/';\n            }, 2000);\n\n            _this.setState({\n              errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  color: 'green'\n                },\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 20\n                }\n              }, res.data.msg)\n            });\n          } else {\n            _this.setState({\n              errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                className: \"error\",\n                style: {\n                  color: 'red'\n                },\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }\n              }, res.data.msg)\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      fields: {},\n      errors: {},\n      invalidUser: '',\n      errMsg: '',\n      token_val: 0\n    };\n    return _this;\n  }\n\n  _createClass(SetadminPassword, [{\n    key: \"handleChange\",\n    value: function handleChange(field, e) {\n      var fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n    /** Validations */\n\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true; //Email\n\n      if (!fields[\"password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"Please enter password\";\n      }\n\n      if (!fields[\"cnfpassword\"]) {\n        formIsValid = false;\n        errors[\"cnfpassword\"] = \"Please enter confirm password\";\n      } else if (fields[\"password\"] != fields[\"cnfpassword\"]) {\n        formIsValid = false;\n        errors[\"cnfpassword\"] = \"Confirm password does not match\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      fetch(AppConstants.API + '/users/profile/' + this.props.match.params.id).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(\"data\", data);\n\n        if (data.Status == \"Success\") {\n          if (data.data.token != 0 && data.data.token != null && data.data.token != 'undefined') {\n            that.setState({\n              token_val: 1\n            });\n          } else {\n            that.setState({\n              token_val: 0\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"test\", this.props);\n      var _this$props = this.props,\n          showLogo = _this$props.showLogo,\n          onLogoClick = _this$props.onLogoClick;\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"login-bg\",\n        style: {\n          height: '100vh',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        lg: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }, this.state.token_val == 1 ? /*#__PURE__*/React.createElement(Form, {\n        name: \"setpwdform\",\n        onSubmit: this.handleSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, showLogo && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo200Image,\n        className: \"rounded\",\n        style: {\n          width: 150,\n          cursor: 'pointer'\n        },\n        alt: \"logo\",\n        onClick: onLogoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, this.state.errMsg), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"exampleEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleChange.bind(this, \"password\"),\n        name: \"password\",\n        value: this.state.fields[\"password\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"exampleEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        onChange: this.handleChange.bind(this, \"cnfpassword\"),\n        name: \"cnfpassword\",\n        value: this.state.fields[\"cnfpassword\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, this.state.errors[\"cnfpassword\"])), /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        className: \"cst-login-btn border-0 mt-4 btn btn-secondary btn-lg btn-block btn btn-secondary btn-lg btn-block\",\n        block: true,\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }, \"Submit\")) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }\n      }, showLogo && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo200Image,\n        className: \"rounded\",\n        style: {\n          width: 60,\n          height: 60,\n          cursor: 'pointer'\n        },\n        alt: \"logo\",\n        onClick: onLogoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: '#ffa960'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, \"This set password link has been expired. Please contact admin.\")))));\n    }\n  }]);\n\n  return SetadminPassword;\n}(React.Component);\n\nSetadminPassword.defaultProps = {\n  showLogo: true\n};\nSetadminPassword.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(SetadminPassword);","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/meadmin/src/components/SetadminPassword.js"],"names":["logo200Image","React","Button","Form","FormGroup","Input","Label","Card","Col","Row","connect","PropTypes","axios","AppConstants","SetadminPassword","props","handleSubmit","event","preventDefault","handleValidation","setadminpwd","id","match","params","password","state","fields","post","API","then","res","console","log","data","Status","setTimeout","window","location","href","setState","errMsg","color","msg","errors","invalidUser","token_val","field","e","target","value","formIsValid","that","fetch","response","json","token","showLogo","onLogoClick","height","justifyContent","alignItems","bind","width","cursor","handleChange","background","Component","defaultProps","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import logo200Image from 'assets/img/logo/ME-logo.jpg';\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Card, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\n\n\nclass SetadminPassword extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {},\n      invalidUser:'',\n      errMsg:'',\n      token_val:0\n    }\n  }\n  \n  handleChange(field, e){    \t\t\n    let fields = this.state.fields;\n    fields[field] = e.target.value;        \n    this.setState({fields});\n  }\n\n  /** Validations */\n  handleValidation(){\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //Email\n    if(!fields[\"password\"]){\n      formIsValid = false;\n      errors[\"password\"] = \"Please enter password\";\n    }\n    if(!fields[\"cnfpassword\"]){\n      formIsValid = false;\n      errors[\"cnfpassword\"] = \"Please enter confirm password\";\n    }\n    else if(fields[\"password\"] != fields[\"cnfpassword\"]){\n      formIsValid = false;\n      errors[\"cnfpassword\"] = \"Confirm password does not match\";\n    }\n    \n\n    this.setState({errors: errors});\n    return formIsValid;\n  }\n  handleSubmit = event => {\n    //console.log(process.env.REACT_APP_API_URL+'/users/login');\n    event.preventDefault();\n    if(this.handleValidation()){\n      const setadminpwd = {\n        id:this.props.match.params.id,\n        password: this.state.fields['password']\n      }      \n      //axios.post('/users/setadminpassword',setadminpwd)\n      axios.post(AppConstants.API+'/users/setmainadminpassword',setadminpwd) \n        .then(res => {   \n          console.log(res);   \n         if(res.data.Status == \"Success\"){\n          setTimeout(function()\n          {\n            window.location.href = '/';\n          }, 2000);              \n          this.setState({\n            errMsg:<div style={{color: 'green'}}>{res.data.msg}</div>\n          });\n        }\n        else{\n          this.setState({\n            errMsg: <div className=\"error\" style={{color: 'red'}}>{res.data.msg}</div>\n          });\n        } \n      });   \n    }\n  };\n\n  componentDidMount() {\n    const that = this; \n    fetch(AppConstants.API+'/users/profile/'+this.props.match.params.id).then(response => response.json())\n  .then(data => { \n    console.log(\"data\",data);\n      if(data.Status == \"Success\"){\n          if(data.data.token != 0 && data.data.token != null && data.data.token != 'undefined'){\n              that.setState({\n                  token_val:1\n               });\n          }\n          else\n          {\n            that.setState({\n              token_val:0\n           });\n          }          \n      }\n    });\n}\n  \n  \n  render() {\n    console.log(\"test\", this.props);\n    const {\n      showLogo,\n      onLogoClick,\n    } = this.props;\n    \n    return (\n      <Row className=\"login-bg\"\n        style={{\n          height: '100vh',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <Col md={6} lg={4}>\n          <Card body>\n          {(this.state.token_val == 1) ? \n            <Form name=\"setpwdform\" onSubmit= {this.handleSubmit.bind(this)}>\n              {showLogo && (\n                <div className=\"text-center pb-4\">\n                  <img\n                    src={logo200Image}\n                    className=\"rounded\"\n                    style={{ width: 150,  cursor: 'pointer' }}\n                    alt=\"logo\"\n                    onClick={onLogoClick}\n                  />\n                </div>\n              )}\n              <span >{this.state.errMsg}</span>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Password</Label>\n                <Input\n                  type=\"password\"                 \n                  placeholder=\"Password\"\n                  onChange={this.handleChange.bind(this, \"password\")}\n                  name=\"password\"\n                  value={this.state.fields[\"password\"]}\n                />\n                <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"password\"]}</span>\n              </FormGroup> \n              <FormGroup>\n                <Label for=\"exampleEmail\">Confirm Password</Label>\n                <Input\n                  type=\"password\"                 \n                  placeholder=\"Confirm Password\"\n                  onChange={this.handleChange.bind(this, \"cnfpassword\")}\n                  name=\"cnfpassword\"\n                  value={this.state.fields[\"cnfpassword\"]}\n                />\n                <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"cnfpassword\"]}</span>\n              </FormGroup>                      \n              <Button\n                size=\"lg\"\n                className=\"cst-login-btn border-0 mt-4 btn btn-secondary btn-lg btn-block btn btn-secondary btn-lg btn-block\"\n                block\n                onClick={this.handleSubmit}>\n                Submit\n              </Button>                         \n            </Form> : <div>{showLogo && (\n                <div className=\"text-center pb-4\">\n                  <img\n                    src={logo200Image}\n                    className=\"rounded\"\n                    style={{ width: 60, height: 60, cursor: 'pointer' }}\n                    alt=\"logo\"\n                    onClick={onLogoClick}\n                  />\n                </div>\n              )}<div style={{background:'#ffa960'}}>This set password link has been expired. Please contact admin.</div></div>\n                    }\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nSetadminPassword.defaultProps = {\n  showLogo: true\n};\nSetadminPassword.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport  default connect(mapStateToProps, {})(SetadminPassword);\n"]},"metadata":{},"sourceType":"module"}