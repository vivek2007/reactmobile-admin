{"ast":null,"code":"import _defineProperty from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/AllTodos/editStudentTodo.js\";\nimport React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport DatePicker from \"react-datepicker\";\nimport { MdDateRange } from 'react-icons/md';\nvar prg1 = [];\nvar resources1 = [];\n\nvar EditTodos = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditTodos, _React$Component);\n\n  function EditTodos() {\n    var _this;\n\n    _classCallCheck(this, EditTodos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditTodos).call(this));\n\n    _this.openDatepicker1 = function () {\n      return _this._calendar1.setOpen(true);\n    };\n\n    _this.openDatepicker2 = function () {\n      return _this._calendar1.setOpen(true);\n    };\n\n    _this.handleSelectChange = function (e) {\n      if (e.target.value != '' && _this.state.Changelabel == false) {\n        var _this$setState;\n\n        var index = e.nativeEvent.target.selectedIndex;\n        var label = e.nativeEvent.target[index].text;\n\n        _this.setState((_this$setState = {}, _defineProperty(_this$setState, e.target.name, e.target.value), _defineProperty(_this$setState, \"label\", label), _defineProperty(_this$setState, \"duration_start_date\", ''), _defineProperty(_this$setState, \"duration_end_date\", ''), _this$setState));\n      } else if (e.target.value != '') {\n        var _this$setState2;\n\n        var _index = e.nativeEvent.target.selectedIndex;\n        var _label = e.nativeEvent.target[_index].text;\n\n        _this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, e.target.name, e.target.value), _defineProperty(_this$setState2, \"label\", _label), _this$setState2));\n      } else {\n        var _this$setState3;\n\n        _this.setState((_this$setState3 = {}, _defineProperty(_this$setState3, e.target.name, e.target.value), _defineProperty(_this$setState3, \"label\", ''), _defineProperty(_this$setState3, \"duration_start_date\", ''), _defineProperty(_this$setState3, \"duration_end_date\", ''), _this$setState3));\n      }\n    };\n\n    _this.handleSelectChange = function (e) {\n      console.log(\"value\", e.target.value, \"e.target.name\", e.target.name);\n\n      if (e.target.value != '') {\n        var data1 = {};\n        var usertype;\n\n        if (_this.props.match.params.user_type == 'student') {\n          usertype = 'Student';\n        } else {\n          usertype = 'Mentor';\n        }\n\n        data1 = {\n          'user': usertype,\n          'programs': e.target.value\n        };\n        axios.post(AppConstants.API + '/resource/getUserandProgrambasedResources', data1).then(function (res) {\n          // console.log(res.data)\n          if (res.data.Status == \"Success\") {\n            // var resources1 = []\n            res.data.data.map(function (resource, index) {\n              var item = {};\n              item[\"name\"] = resource.title;\n              item[\"id\"] = resource._id;\n              resources1.push(item);\n            });\n\n            _this.setState({\n              resources1: resources1,\n              selectedValue: [],\n              seletedresources: []\n            });\n          }\n        });\n\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      } else {\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      }\n    };\n\n    _this.state = {\n      title: \"\",\n      description: \"\",\n      // user_type:\"\",\n      status: true,\n      loading: \"\",\n      errors: {},\n      title_error: false,\n      status_error: false,\n      description_error: false,\n      resources: [],\n      res_error: false,\n      seletedresources: [],\n      period: \"\",\n      period_error: false,\n      programs: [],\n      prog_error: false,\n      selectedValue: [],\n      seletedprogram: [],\n      resources1: [],\n      program_id: '',\n      selectedValue1: [],\n      programsdata: [],\n      duration_start_date: '',\n      duration_end_date: '',\n      dueDate_err: false,\n      duration_start_err: false,\n      duration_end_err: false,\n      Changelabel: true,\n      label: '',\n      duration: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRemove = _this.onRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelect1 = _this.onSelect1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRemove1 = _this.onRemove1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handledateOfEvent = _this.handledateOfEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.starthandledateOfEvent = _this.starthandledateOfEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditTodos, [{\n    key: \"handledateOfEvent\",\n    value: function handledateOfEvent(bday) {\n      if (bday != \"\") {\n        this.setState({\n          dob_error: false\n        });\n      } else {\n        this.setState({\n          dob_error: true\n        });\n      }\n\n      this.setState({\n        dueDate: bday\n      });\n    }\n  }, {\n    key: \"starthandledateOfEvent\",\n    value: function starthandledateOfEvent(startdate) {\n      var currentDate = new Date(startdate);\n      currentDate.setDate(currentDate.getDate() + parseInt(this.state.label));\n\n      if (startdate != \"\") {\n        this.setState({\n          duration_start_err: false\n        });\n      } else {\n        this.setState({\n          duration_start_err: true\n        });\n      }\n\n      this.setState({\n        duration_start_date: startdate,\n        duration_end_date: currentDate\n      });\n    }\n  }, {\n    key: \"onSelect1\",\n    value: function onSelect1(selectedList, selectedItem) {\n      // console.log(\"asdfghj\",selectedList)\n      this.setState({\n        selectedValue1: selectedList\n      }); // if(selectedList){\n      //     this.setState({prog_error:false})\n      //     var prgs = [];\n      //     selectedList.map((prg,i)=>{\n      //         prgs.push(prg.prg_id)\n      //     })\n      //     let data1 = {};\n      //     data1 = {\n      //         'user': this.props.match.params.user_type,\n      //         'programs' : prgs\n      //     }\n      //     axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n      //         .then(res => { \n      //             if(res.data.Status == \"Success\"){\n      //                 var resources1 = []\n      //                 res.data.data.map((resource,index)=>{\n      //                     var item ={}\n      //                     item[\"name\"] = resource.title\n      //                     item[\"id\"] = resource._id\n      //                     resources1.push(item)\n      //                 })\n      //                 this.setState({resources:resources1,selectedValue:[]})\n      //             }\n      //         }) \n      // }\n    }\n  }, {\n    key: \"onRemove1\",\n    value: function onRemove1(selectedList, removedItem) {\n      this.setState({\n        selectedValue1: selectedList\n      });\n\n      if (selectedList == \"\") {\n        this.setState({\n          prog_error: true\n        });\n      } // if(selectedList){\n      //     this.setState({prog_error:false})\n      //     var prgs = [];\n      //     selectedList.map((prg,i)=>{\n      //         prgs.push(prg.prg_id)\n      //     })\n      //     let data1 = {};\n      //     data1 = {\n      //         'user': this.props.match.params.user_type,\n      //         'programs' : prgs\n      //     }\n      //     axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n      //         .then(res => { \n      //             if(res.data.Status == \"Success\"){\n      //                 var resources1 = []\n      //                 res.data.data.map((resource,index)=>{\n      //                     var item ={}\n      //                     item[\"name\"] = resource.title\n      //                     item[\"id\"] = resource._id\n      //                     resources1.push(item)\n      //                 })\n      //                 this.setState({resources:resources1,selectedValue:[],seletedresources :[]})\n      //             }\n      //         }) \n      // }\n\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(selectedList, selectedItem) {\n      this.setState({\n        seletedresources: selectedList\n      });\n\n      if (selectedList) {\n        this.setState({\n          res_error: false\n        });\n      }\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(selectedList, removedItem) {\n      this.setState({\n        seletedresources: selectedList\n      });\n\n      if (selectedList == \"\") {\n        this.setState({\n          res_error: true,\n          seletedresources: selectedList\n        });\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      if (e.target.name == \"title\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            title_error: false\n          });\n        } else {\n          this.setState({\n            title_error: true\n          });\n        }\n      }\n\n      if (e.target.name == \"description\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            description_error: false\n          });\n        } else {\n          this.setState({\n            description_error: true\n          });\n        }\n      } // if(e.target.name == \"period\"){\n      //     if(e.target.value != \"\"){\n      //       this.setState({period_error:false})\n      //     }else{\n      //       this.setState({period_error:true})\n      //     }\n      // }\n      // if(e.target.name == \"user_type\"){\n      //     fetch(AppConstants.API+'/resource/getUserbasedResources/'+\"student\").then(res=>{\n      //         if(res.status == 200){\n      //             return res.json();\n      //         }\n      //       }).then(result=>{\n      //             var resources1 = []\n      //             result.data.map((resource,index)=>{\n      //                 var item ={}\n      //                 item[\"name\"] = resource.title\n      //                 item[\"id\"] = resource._id\n      //                 resources1.push(item)\n      //             })\n      //             this.setState({resources:resources1})\n      //     })\n      //     // if(e.target.value != \"\"){\n      //     //   this.setState({user_type_error:false})\n      //     // }else{\n      //     //   this.setState({user_type_error:true})\n      //     // }\n      // }\n\n\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var errors = {};\n      var formIsValid = true; // if(!this.state.document){\n      //     formIsValid = false;\n      //     errors[\"document\"] = \"Please upload document\";\n      //     ReactDOM.findDOMNode(this.refs.document).focus();\n      // }\n\n      if (!this.state.dueDate) {\n        formIsValid = false;\n        errors[\"dueDate\"] = \"Please select due date\";\n      }\n\n      if (this.state.resources.length == 0) {\n        formIsValid = false;\n        errors[\"resource_error\"] = \"Please select resources\";\n      } // if(!this.state.period){\n      //     formIsValid = false;\n      //     errors[\"period\"] = \"Please enter period to complete todo\";\n      //     ReactDOM.findDOMNode(this.refs.period).focus();\n      // }\n      // if(this.state.selectedValue1.length==0){\n      //     formIsValid = false;\n      //     errors[\"seletedprogram\"] = \"Please select program\";\n      // }\n\n\n      if (this.state.program_id != '') {\n        if (!this.state.duration_start_date) {\n          formIsValid = false;\n          errors[\"duration_start_date\"] = \"Please select start date\";\n        }\n      }\n\n      if (!this.state.program_id) {\n        formIsValid = false;\n        errors[\"seletedprogram\"] = \"Please select duration\";\n      }\n\n      if (!this.state.description) {\n        formIsValid = false;\n        errors[\"description\"] = \"Please enter description\";\n        ReactDOM.findDOMNode(this.refs.description).focus();\n      }\n\n      if (!this.state.title) {\n        formIsValid = false;\n        errors[\"title\"] = \"Please enter title\";\n        ReactDOM.findDOMNode(this.refs.title).focus();\n      }\n\n      this.setState({\n        errors: errors,\n        title_error: true,\n        description_error: true,\n        res_error: true,\n        period_error: true,\n        prog_error: true,\n        dueDate_err: true,\n        duration_start_err: true\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleStatusChange\",\n    value: function handleStatusChange(checked) {\n      this.setState({\n        status: checked\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        this.setState({\n          loading: 1\n        }); // let formData = new FormData();\n\n        var reso = [];\n\n        if (this.state.resources.length !== 0) {\n          this.state.resources.map(function (res) {\n            reso.push(res.id);\n          });\n        } else {\n          this.state.selectedValue.map(function (res) {\n            reso.push(res.id);\n          });\n        }\n\n        var prgs = [];\n        this.state.selectedValue1.map(function (prg, index) {\n          prgs.push(prg.prg_id);\n        });\n        var formval = {};\n        formval = {\n          'id': this.props.match.params.id,\n          'user_type': this.props.match.params.user_type,\n          'title': this.state.title,\n          'duration': this.state.duration,\n          'description': this.state.description,\n          'resources': JSON.stringify(reso),\n          'dueDate': this.state.dueDate,\n          //'programs' : JSON.stringify(prgs),\n          'status': this.state.status,\n          'programs': this.state.program_id,\n          'created_by': this.props.auth.user._id,\n          'duration_start_date': this.state.duration_start_date,\n          'duration_end_date': this.state.duration_end_date\n        };\n        axios.post(AppConstants.API + '/todos/updateTodo', formval).then(function (res) {\n          if (res.data.Status == \"Success\") {\n            setTimeout(function (e) {\n              if (_this2.props.match.params.user_type == 'parent') {\n                _this2.props.history.push('/allParentTodos');\n              } else if (_this2.props.match.params.user_type == 'student') {\n                _this2.props.history.push('/allStudentTodos');\n              } else {\n                _this2.props.history.push('/allMentorTodos');\n              }\n            }, 2000);\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-success fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          } else {\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-danger fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var that = this;\n      prg1 = [];\n      resources1 = [];\n\n      if (this.props.match.params.user_type == 'student') {\n        // var element = document.getElementById(\"navItem-Client Habits-0\");\n        // element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Habits-3\");\n        element.classList.add(\"active\");\n      } else {\n        // var element = document.getElementById(\"navItem-Client Habits-0\");\n        // element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Habits-3\");\n        element.classList.add(\"active\");\n      }\n\n      fetch(AppConstants.API + '/programs/getAllactiveprograms').then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        // result.data.map((res,i)=>{\n        //   var prg = {}\n        //   prg[\"name\"] = res.title\n        //   prg[\"prg_id\"] = res._id\n        //   prg1.push(prg)\n        // })\n        that.setState({\n          programs: result.data\n        }); // this.setState({programsdata:result.data})\n      });\n      fetch(AppConstants.API + '/resource/getUserbasedResources/' + this.props.match.params.user_type).then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        //   var resources1 = []\n        result.data.map(function (resource, index) {\n          var item = {};\n          item[\"name\"] = resource.title;\n          item[\"id\"] = resource._id;\n          resources1.push(item);\n        });\n\n        _this3.setState({\n          resources1: resources1\n        });\n      }); //console.log(\"this.props.match.params.id\",this.props.match.params.id,\"this.props.match.params.user_type\",this.props.match.params.user_type)\n\n      fetch(AppConstants.API + '/todos/getStudentTodoData/' + this.props.match.params.id + '/' + this.props.match.params.user_type).then(function (res) {\n        if (res.status == \"200\") {\n          return res.json();\n        }\n      }).then(function (data) {\n        if (data.Status == \"Success\") {\n          console.log(\" data.data[0].duration\", data.data[0].duration); // let selectedValue1 = []\n          // data.data[0].programs.map((prgs,i)=>{\n          //     that.state.programs.forEach(option => {\n          //         if(prgs == option.prg_id){\n          //             var item ={}\n          //             item[\"name\"] = option.name\n          //             item[\"prg_id\"] = option.prg_id\n          //             selectedValue1.push(item)\n          //         }\n          //     })\n          // })\n          // let data2 = {};\n          // data2 = {\n          //     'user': that.props.match.params.user_type,\n          //     'programs' : data.data[0].programs\n          // }\n          // var resources1 = []\n          // axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data2)\n          // .then(res => { \n          //     console.log(\"resorces\",res.data);\n          //     if(res.data.Status == \"Success\"){\n          //         res.data.data.map((resource,index)=>{\n          //             var item ={}\n          //             item[\"name\"] = resource.title\n          //             item[\"id\"] = resource._id\n          //             resources1.push(item)\n          //         })\n          //         that.setState({resources:resources1})\n          //     }\n          // }) \n\n          that.setState({\n            user_type: data.data[0].user_type,\n            title: data.data[0].title,\n            // selectedValue : selectedValue,\n            // selectedValue1 : selectedValue1,\n            description: data.data[0].description,\n            status: data.data[0].status,\n            dueDate: new Date(data.data[0].dueDate),\n            resources: data.data[0].resources_data,\n            program_id: data.data[0].programs,\n            duration_start_date: new Date(data.data[0].duration_start_date),\n            duration_end_date: new Date(data.data[0].duration_end_date),\n            Changelabel: false,\n            duration: data.data[0].duration // label:data.data[0].duration\n\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var resource_links = [];\n\n      if (this.state.seletedresources.length !== 0) {\n        this.state.seletedresources.map(function (item, index) {\n          // console.log(\"selectedresources\")\n          resource_links.push(item);\n        });\n      } else {\n        this.state.selectedValue.map(function (item, index) {\n          resource_links.push(item);\n        });\n      }\n\n      var page;\n\n      if (this.props.match.params.user_type == 'parent') {\n        page = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"cst-breadcrumb\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/dashboard',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 29\n          }\n        }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/allParentTodos',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 29\n          }\n        }, \"Habits\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }\n        }, \"Edit Parent Habit\"));\n      } else if (this.props.match.params.user_type == 'student') {\n        page = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"cst-breadcrumb\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/dashboard',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 29\n          }\n        }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/allStudentTodos',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 29\n          }\n        }, \"All Habits\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 25\n          }\n        }, \"Edit Habit\"));\n      } else {\n        page = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"cst-breadcrumb\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/dashboard',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 29\n          }\n        }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: '/allMentorTodos',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 29\n          }\n        }, \"Habits\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 25\n          }\n        }, \"Edit Mentor Habit\"));\n      }\n\n      var pageTitle;\n\n      if (this.props.match.params.user_type == 'parent') {\n        pageTitle = 'Edit Parent Habits';\n      } else if (this.props.match.params.user_type == 'student') {\n        pageTitle = 'Edit Habits';\n      } else {\n        pageTitle = 'Edit Mentor Habits';\n      }\n\n      return /*#__PURE__*/React.createElement(Page, {\n        title: pageTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }\n      }, page, /*#__PURE__*/React.createElement(ReactTitle, {\n        title: pageTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"EditTodo\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 41\n        }\n      }, \"Title\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 46\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        ref: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 45\n        }\n      }), this.state.title_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 79\n        }\n      }, this.state.errors[\"title\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"description\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 41\n        }\n      }, \"Description\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 52\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"textarea\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        ref: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 45\n        }\n      }), this.state.description_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 85\n        }\n      }, this.state.errors[\"description\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"program\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 41\n        }\n      }, \"Program  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 54\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"program_id\",\n        value: this.state.program_id,\n        onChange: this.handleSelectChange // onKeyUp={this.handleKeyUp} \n        ,\n        ref: \"programs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 41\n        }\n      }, \"Select Program\"), this.state.programs.map(function (customers, index) {\n        if (customers.status == true && customers.deleted == false) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: index,\n            value: customers._id,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 56\n            }\n          }, customers.title);\n        }\n      })), this.state.prog_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 74\n        }\n      }, this.state.errors[\"seletedprogram\"]) : '')), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"program\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 41\n        }\n      }, \"Duration(Days) \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 56\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"duration\",\n        placeholder: \"Duration\",\n        value: this.state.duration,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 41\n        }\n      }, this.state.errors[\"duration\"]))), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"resource\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 41\n        }\n      }, \"Resources  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 56\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Multiselect, {\n        options: this.state.resources1 // Options to display in the dropdown\n        ,\n        selectedValues: this.state.resources // Preselected value to persist in dropdown\n        ,\n        onSelect: this.onSelect // Function will trigger on select event\n        ,\n        onRemove: this.onRemove // Function will trigger on remove event\n        ,\n        displayValue: \"name\" // Property name to display in the dropdown options\n        ,\n        placeholder: \"Resources\",\n        ref: \"resource\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 45\n        }\n      })), this.state.res_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 77\n        }\n      }, this.state.errors[\"resource_error\"]) : '')), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 41\n        }\n      }, \"Status\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 47\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        onChange: this.handleStatusChange.bind(this),\n        checked: this.state.status,\n        uncheckedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"150px\",\n            color: \"#000\",\n            fontWeight: \"bold\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 45\n          }\n        }, \"Inactive\"),\n        checkedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"180px\",\n            fontWeight: \"bold\",\n            color: \"#000\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 45\n          }\n        }, \"Active\"),\n        onColor: \"#45b649\",\n        offColor: \"#ffd700\",\n        className: \"react-switch\",\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n        activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n        height: 20,\n        width: 48,\n        handleDiameter: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 45\n        }\n      }, \"Update    \", /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 121\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), \"\\xA0\", this.props.match.params.user_type == 'parent' ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/allParentTodos\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 49\n        }\n      }, \"\\xA0Cancel\") : this.props.match.params.user_type == 'student' ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/allStudentTodos\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 191\n        }\n      }, \"\\xA0Cancel\") : /*#__PURE__*/React.createElement(Link, {\n        to: \"/allMentorTodos\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 285\n        }\n      }, \"\\xA0Cancel\"))), this.state.errMsg))))));\n    }\n  }]);\n\n  return EditTodos;\n}(React.Component);\n\nEditTodos.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(EditTodos);","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/AllTodos/editStudentTodo.js"],"names":["React","Page","axios","AppConstants","ReactTitle","Link","Row","Col","Card","CardBody","Button","Form","FormGroup","Label","Input","Loading","PropTypes","connect","ReactDOM","Switch","Multiselect","DatePicker","MdDateRange","prg1","resources1","EditTodos","openDatepicker1","_calendar1","setOpen","openDatepicker2","handleSelectChange","e","target","value","state","Changelabel","index","nativeEvent","selectedIndex","label","text","setState","name","console","log","data1","usertype","props","match","params","user_type","post","API","then","res","data","Status","map","resource","item","title","_id","push","selectedValue","seletedresources","description","status","loading","errors","title_error","status_error","description_error","resources","res_error","period","period_error","programs","prog_error","seletedprogram","program_id","selectedValue1","programsdata","duration_start_date","duration_end_date","dueDate_err","duration_start_err","duration_end_err","duration","handleSubmit","bind","handleInputChange","onSelect","onRemove","onSelect1","onRemove1","handledateOfEvent","starthandledateOfEvent","bday","dob_error","dueDate","startdate","currentDate","Date","setDate","getDate","parseInt","selectedList","selectedItem","removedItem","formIsValid","length","findDOMNode","refs","focus","checked","preventDefault","handleValidation","reso","id","prgs","prg","prg_id","formval","JSON","stringify","auth","user","setTimeout","history","errMsg","msg","that","element","document","getElementById","classList","add","fetch","json","result","resources_data","resource_links","page","pageTitle","color","customers","deleted","handleStatusChange","display","justifyContent","alignItems","height","fontSize","width","fontWeight","paddingRight","size","offset","Component","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport  { Link } from 'react-router-dom';\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n  } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport DatePicker from \"react-datepicker\";\nimport {\n    MdDateRange\n  } from 'react-icons/md';\nvar prg1 = []\nvar resources1 = []\n\nclass EditTodos extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            title : \"\",\n            description : \"\",\n            // user_type:\"\",\n            status : true,\n            loading : \"\",\n            errors : {},\n            title_error : false,\n            status_error : false,\n            description_error : false,\n            resources : [],\n            res_error : false,\n            seletedresources : [],\n            period : \"\",\n            period_error : false,\n            programs:[],\n            prog_error:false,\n            selectedValue : [],\n            seletedprogram : [],\n            resources1 : [],\n            program_id:'',\n            selectedValue1:[],\n            programsdata:[],\n            duration_start_date:'',\n            duration_end_date:'',\n            dueDate_err:false,\n            duration_start_err:false,\n            duration_end_err:false,\n            Changelabel: true,\n            label: '',\n            duration:''\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.onRemove = this.onRemove.bind(this);\n        this.onSelect1 = this.onSelect1.bind(this);\n        this.onRemove1 = this.onRemove1.bind(this);\n        this.handledateOfEvent = this.handledateOfEvent.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.starthandledateOfEvent = this.starthandledateOfEvent.bind(this);\n    }\n    openDatepicker1 = () => this._calendar1.setOpen(true);\n    openDatepicker2 = () => this._calendar1.setOpen(true);\n    handledateOfEvent(bday){\n        if(bday != \"\"){\n            this.setState({dob_error:false})\n        }else{\n          this.setState({dob_error:true})\n        }\n        this.setState({dueDate:bday})\n    }\n\n    starthandledateOfEvent(startdate){\n        var currentDate = new Date(startdate);\n            currentDate.setDate(currentDate.getDate() + parseInt(this.state.label));\n        if(startdate != \"\"){\n            this.setState({duration_start_err:false})\n        }else{\n          this.setState({duration_start_err:true})\n        }\n        this.setState({duration_start_date:startdate,duration_end_date:currentDate})\n    }\n    onSelect1(selectedList, selectedItem) {\n        // console.log(\"asdfghj\",selectedList)\n        this.setState({\n            selectedValue1: selectedList\n        });\n        // if(selectedList){\n        //     this.setState({prog_error:false})\n        //     var prgs = [];\n        //     selectedList.map((prg,i)=>{\n        //         prgs.push(prg.prg_id)\n        //     })\n        //     let data1 = {};\n        //     data1 = {\n        //         'user': this.props.match.params.user_type,\n        //         'programs' : prgs\n        //     }\n        //     axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n        //         .then(res => { \n        //             if(res.data.Status == \"Success\"){\n        //                 var resources1 = []\n        //                 res.data.data.map((resource,index)=>{\n        //                     var item ={}\n        //                     item[\"name\"] = resource.title\n        //                     item[\"id\"] = resource._id\n        //                     resources1.push(item)\n        //                 })\n        //                 this.setState({resources:resources1,selectedValue:[]})\n        //             }\n        //         }) \n        // }\n        \n    }\n    onRemove1(selectedList, removedItem) {\n        this.setState({selectedValue1: selectedList})\n        if(selectedList == \"\"){\n          this.setState({prog_error:true})\n        }\n        // if(selectedList){\n        //     this.setState({prog_error:false})\n        //     var prgs = [];\n        //     selectedList.map((prg,i)=>{\n        //         prgs.push(prg.prg_id)\n        //     })\n        //     let data1 = {};\n        //     data1 = {\n        //         'user': this.props.match.params.user_type,\n        //         'programs' : prgs\n        //     }\n        //     axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n        //         .then(res => { \n        //             if(res.data.Status == \"Success\"){\n        //                 var resources1 = []\n        //                 res.data.data.map((resource,index)=>{\n        //                     var item ={}\n        //                     item[\"name\"] = resource.title\n        //                     item[\"id\"] = resource._id\n        //                     resources1.push(item)\n        //                 })\n        //                 this.setState({resources:resources1,selectedValue:[],seletedresources :[]})\n        //             }\n        //         }) \n        // }\n    }\n    onSelect(selectedList, selectedItem) {\n        this.setState({\n          seletedresources: selectedList\n        });\n        if(selectedList){\n             this.setState({res_error:false})\n        }\n    }\n    onRemove(selectedList, removedItem) {\n        this.setState({seletedresources: selectedList})\n        if(selectedList == \"\"){\n          this.setState({\n              res_error:true,\n              seletedresources: selectedList\n        })\n        }\n    }\n    handleSelectChange= (e) => {\n        if(e.target.value !=''  && this.state.Changelabel == false) {\n            let index = e.nativeEvent.target.selectedIndex;\n            let label = e.nativeEvent.target[index].text;\n            this.setState({[e.target.name]:e.target.value, label: label,duration_start_date:'',duration_end_date:''})\n        } else if(e.target.value !='') {\n            let index = e.nativeEvent.target.selectedIndex;\n            let label = e.nativeEvent.target[index].text;\n            this.setState({[e.target.name]:e.target.value, label: label})\n        }else {\n            this.setState({[e.target.name]:e.target.value, label: '',duration_start_date:'',duration_end_date:''})\n        }\n        \n    }\n    handleInputChange(e){\n        if(e.target.name == \"title\"){\n            if(e.target.value != \"\"){\n                this.setState({title_error:false})\n            }else{\n                this.setState({title_error:true})\n            }\n        }\n        if(e.target.name == \"description\"){\n            if(e.target.value != \"\"){\n              this.setState({description_error:false})\n            }else{\n              this.setState({description_error:true})\n            }\n        }\n        // if(e.target.name == \"period\"){\n        //     if(e.target.value != \"\"){\n        //       this.setState({period_error:false})\n        //     }else{\n        //       this.setState({period_error:true})\n        //     }\n        // }\n        // if(e.target.name == \"user_type\"){\n        //     fetch(AppConstants.API+'/resource/getUserbasedResources/'+\"student\").then(res=>{\n        //         if(res.status == 200){\n        //             return res.json();\n        //         }\n        //       }).then(result=>{\n        //             var resources1 = []\n        //             result.data.map((resource,index)=>{\n        //                 var item ={}\n        //                 item[\"name\"] = resource.title\n        //                 item[\"id\"] = resource._id\n        //                 resources1.push(item)\n        //             })\n        //             this.setState({resources:resources1})\n        //     })\n        //     // if(e.target.value != \"\"){\n        //     //   this.setState({user_type_error:false})\n        //     // }else{\n        //     //   this.setState({user_type_error:true})\n        //     // }\n        // }\n\n        this.setState({[e.target.name]:e.target.value})\n    }\n    handleValidation(){\n        let errors = {};\n        let formIsValid = true;\n        // if(!this.state.document){\n        //     formIsValid = false;\n        //     errors[\"document\"] = \"Please upload document\";\n        //     ReactDOM.findDOMNode(this.refs.document).focus();\n        // }\n        if(!this.state.dueDate){\n            formIsValid = false;\n            errors[\"dueDate\"] = \"Please select due date\";\n        }\n        if(this.state.resources.length==0){\n            formIsValid = false;\n            errors[\"resource_error\"] = \"Please select resources\";\n        }\n        // if(!this.state.period){\n        //     formIsValid = false;\n        //     errors[\"period\"] = \"Please enter period to complete todo\";\n        //     ReactDOM.findDOMNode(this.refs.period).focus();\n        // }\n        // if(this.state.selectedValue1.length==0){\n        //     formIsValid = false;\n        //     errors[\"seletedprogram\"] = \"Please select program\";\n        // }\n        if(this.state.program_id !=''){\n            if(!this.state.duration_start_date){\n                formIsValid = false;\n                errors[\"duration_start_date\"] = \"Please select start date\";\n            }\n        }\n        if(!this.state.program_id){\n            formIsValid = false;\n            errors[\"seletedprogram\"] = \"Please select duration\";\n        }\n        if(!this.state.description){\n            formIsValid = false;\n            errors[\"description\"] = \"Please enter description\";\n            ReactDOM.findDOMNode(this.refs.description).focus();\n        }\n        if (!this.state.title){\n            formIsValid = false;\n            errors[\"title\"] = \"Please enter title\";\n            ReactDOM.findDOMNode(this.refs.title).focus();\n        }\n        this.setState({\n            errors: errors,\n            title_error : true,\n            description_error:true,\n            res_error : true,\n            period_error :true,\n            prog_error : true,\n            dueDate_err:true,\n            duration_start_err:true\n        });\n        return formIsValid;\n    }\n     handleSelectChange= (e) => {\n        console.log(\"value\",e.target.value,\"e.target.name\",e.target.name)\n        if(e.target.value !='') {\n            let data1 = {};\n            var usertype;\n            if(this.props.match.params.user_type=='student'){\n                usertype = 'Student'\n            }else{\n                usertype = 'Mentor'\n            }\n            data1 = {\n                'user': usertype,\n                'programs' : e.target.value\n            }\n            axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data1)\n                .then(res => { \n                    // console.log(res.data)\n                    if(res.data.Status == \"Success\"){\n                        // var resources1 = []\n                        res.data.data.map((resource,index)=>{\n                            var item ={}\n                            item[\"name\"] = resource.title\n                            item[\"id\"] = resource._id\n                            resources1.push(item)\n                        })\n                        this.setState({resources1:resources1,selectedValue:[],seletedresources:[]})\n                    }\n                }) \n            this.setState({[e.target.name]:e.target.value})\n        } else {\n            this.setState({[e.target.name]:e.target.value,})\n        }\n        \n    }\n    handleStatusChange(checked){\n        this.setState({status : checked})\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        if(this.handleValidation()){\n            this.setState({loading:1});\n            // let formData = new FormData();\n            var reso = []\n            if(this.state.resources.length!==0){\n                this.state.resources.map((res)=>{\n                    reso.push(res.id)\n                })\n            }else{\n                this.state.selectedValue.map((res)=>{\n                    reso.push(res.id)\n                })\n            }\n            var prgs = []\n            this.state.selectedValue1.map((prg,index)=>{\n                prgs.push(prg.prg_id)\n            })\n            let formval = {};\n            formval = {\n                'id':this.props.match.params.id,\n                'user_type': this.props.match.params.user_type,\n                'title': this.state.title,\n                'duration': this.state.duration,\n                'description': this.state.description,\n                'resources': JSON.stringify(reso),\n                'dueDate':this.state.dueDate,\n                //'programs' : JSON.stringify(prgs),\n                'status': this.state.status,\n                'programs' : this.state.program_id,\n                'created_by':this.props.auth.user._id,\n                'duration_start_date':this.state.duration_start_date,\n                'duration_end_date':this.state.duration_end_date\n            }\n            axios.post(AppConstants.API+'/todos/updateTodo',formval)\n                .then(res => { \n                    if(res.data.Status == \"Success\"){\n                        setTimeout((e) => {\n                            if(this.props.match.params.user_type == 'parent'){\n                                this.props.history.push('/allParentTodos');\n                            }else if(this.props.match.params.user_type == 'student'){\n                                this.props.history.push('/allStudentTodos');\n                            }else{\n                                this.props.history.push('/allMentorTodos');\n                            }\n                        }, 2000);\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-success fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n                    else{\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-danger fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n            })\n        }\n    }\n    componentDidMount(){\n        var that = this;\n        prg1 = [];\n        resources1 = [];\n       if(this.props.match.params.user_type == 'student'){\n             // var element = document.getElementById(\"navItem-Client Habits-0\");\n            // element.classList.remove(\"active\");\n            var element = document.getElementById(\"navItem-Habits-3\");\n            element.classList.add(\"active\");\n           \n        }else{\n            // var element = document.getElementById(\"navItem-Client Habits-0\");\n            // element.classList.remove(\"active\");\n            var element = document.getElementById(\"navItem-Habits-3\");\n            element.classList.add(\"active\");\n        }\n        fetch(AppConstants.API+'/programs/getAllactiveprograms').then(res=>{\n            if(res.status == 200){\n                return res.json();\n            }\n          }).then(result=>{\n            // result.data.map((res,i)=>{\n            //   var prg = {}\n            //   prg[\"name\"] = res.title\n            //   prg[\"prg_id\"] = res._id\n            //   prg1.push(prg)\n            // })\n            that.setState({programs:result.data})\n            // this.setState({programsdata:result.data})\n          })\n          fetch(AppConstants.API+'/resource/getUserbasedResources/'+this.props.match.params.user_type).then(res=>{\n          if(res.status == 200){\n              return res.json();  \n          }\n        }).then(result=>{\n            //   var resources1 = []\n              result.data.map((resource,index)=>{\n                  var item ={}\n                  item[\"name\"] = resource.title\n                  item[\"id\"] = resource._id\n                  resources1.push(item)\n              })\n              this.setState({resources1:resources1})\n      })\n    //console.log(\"this.props.match.params.id\",this.props.match.params.id,\"this.props.match.params.user_type\",this.props.match.params.user_type)\n          fetch(AppConstants.API+'/todos/getStudentTodoData/'+this.props.match.params.id +'/'+ this.props.match.params.user_type)\n        .then(function(res) {\n            if(res.status == \"200\"){\n                return res.json();\n            }\n        })\n        .then(function(data) {\n            if(data.Status == \"Success\"){\n                console.log( \" data.data[0].duration\",data.data[0].duration)\n                // let selectedValue1 = []\n                // data.data[0].programs.map((prgs,i)=>{\n                //     that.state.programs.forEach(option => {\n                //         if(prgs == option.prg_id){\n                //             var item ={}\n                //             item[\"name\"] = option.name\n                //             item[\"prg_id\"] = option.prg_id\n                //             selectedValue1.push(item)\n                //         }\n                //     })\n                // })\n              \n                // let data2 = {};\n                // data2 = {\n                //     'user': that.props.match.params.user_type,\n                //     'programs' : data.data[0].programs\n                // }\n\n                \n                // var resources1 = []\n                // axios.post(AppConstants.API+'/resource/getUserandProgrambasedResources',data2)\n                // .then(res => { \n                //     console.log(\"resorces\",res.data);\n                //     if(res.data.Status == \"Success\"){\n                //         res.data.data.map((resource,index)=>{\n                //             var item ={}\n                //             item[\"name\"] = resource.title\n                //             item[\"id\"] = resource._id\n                //             resources1.push(item)\n                //         })\n                //         that.setState({resources:resources1})\n                //     }\n                // }) \n                that.setState({\n                    user_type:data.data[0].user_type,\n                    title: data.data[0].title,\n                    // selectedValue : selectedValue,\n                   // selectedValue1 : selectedValue1,\n                    description: data.data[0].description,  \n                    status:data.data[0].status,\n                    dueDate :  new Date(data.data[0].dueDate),\n                    resources:data.data[0].resources_data,\n                    program_id: data.data[0].programs,\n                    duration_start_date: new Date(data.data[0].duration_start_date),\n                    duration_end_date: new Date(data.data[0].duration_end_date),\n                    Changelabel:false,\n                    duration: data.data[0].duration,\n                    // label:data.data[0].duration\n                }); \n            }\n        }); \n    }\n    render(){\n        var resource_links = [];\n        if(this.state.seletedresources.length!==0){\n            this.state.seletedresources.map((item,index)=>{\n                // console.log(\"selectedresources\")\n                resource_links.push(item)\n            })\n        }else{\n            this.state.selectedValue.map((item,index)=>{\n                resource_links.push(item)\n            })\n        }\n        \n        let page;\n        if(this.props.match.params.user_type == 'parent'){\n            page =  <ul className=\"cst-breadcrumb\">\n                        <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                        <li><Link to={'/allParentTodos'}>Habits</Link></li>\n                        <li>Edit Parent Habit</li>\n                    </ul> \n        }else if(this.props.match.params.user_type == 'student'){\n\n            page =  <ul className=\"cst-breadcrumb\">\n                        <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                        <li><Link to={'/allStudentTodos'}>All Habits</Link></li>\n                        <li>Edit Habit</li>\n                    </ul> \n        }else{\n            page =  <ul className=\"cst-breadcrumb\">\n                        <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                        <li><Link to={'/allMentorTodos'}>Habits</Link></li>\n                        <li>Edit Mentor Habit</li>\n                    </ul> \n        }\n         let pageTitle;\n        if(this.props.match.params.user_type == 'parent'){\n            pageTitle =  'Edit Parent Habits'\n        }else if(this.props.match.params.user_type == 'student'){\n            pageTitle =  'Edit Habits'\n        }else{\n            pageTitle =  'Edit Mentor Habits' \n        }\n        return(\n            <Page title={pageTitle}>\n                {page}\n                <ReactTitle title={pageTitle}/>\n                <Row>\n                    <Col xl={12} lg={12} md={12}>\n                        <Card>\n                            <CardBody>\n                                <Form name=\"EditTodo\" onSubmit= { this.handleSubmit }>\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                        Title<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"Title\"                      \n                                            value={this.state.title}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"title\"           \n                                            />\n                                            {this.state.title_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"title\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"description\" sm={2}>\n                                        Description<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"textarea\"\n                                            name=\"description\"\n                                            placeholder=\"Description\"                      \n                                            value={this.state.description}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"description\"           \n                                            />\n                                            {this.state.description_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"description\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    {/* <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                            Program  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div>\n                                            <Multiselect\n                                            options={this.state.programs} // Options to display in the dropdown\n                                            selectedValues={this.state.selectedValue1} // Preselected value to persist in dropdown\n                                            onSelect={this.onSelect1} // Function will trigger on select event\n                                            onRemove={this.onRemove1} // Function will trigger on remove event\n                                            displayValue=\"name\" // Property name to display in the dropdown options\n                                            placeholder=\"Program\"\n                                            />\n                                            </div>\n                                            {this.state.prog_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"seletedprogram\"]}</span> :''}\n                                        </Col>\n                                    </FormGroup> */}\n\n                                    <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                            Program  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <Input\n                                        type=\"select\"\n                                        name=\"program_id\"\n                                        value={this.state.program_id}\n                                        onChange={ this.handleSelectChange }  \n                                        // onKeyUp={this.handleKeyUp} \n                                        ref =\"programs\"                  \n                                        >\n                                        <option value=\"\">Select Program</option>\n                                        {\n                                            this.state.programs.map((customers,index)=>{\n                                            if(customers.status == true && customers.deleted == false){\n                                                return <option key={index} value={customers._id}>{customers.title}</option>\n                                            }\n                                            })\n                                        }\n                                        </Input>\n                                        {this.state.prog_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"seletedprogram\"]}</span> :''}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                        Duration(Days) <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <Input\n                                        type=\"text\"\n                                        name=\"duration\"\n                                        placeholder=\"Duration\"                      \n\n                                        value={this.state.duration}\n                                        onChange={ this.handleInputChange }  \n                                        />\n                                       \n                                        <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"duration\"]}</span> \n                                        </Col>\n                                    </FormGroup>\n                                  \n                                    <FormGroup row>\n                                        <Label for=\"resource\" sm={2}>\n                                            Resources  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div>\n                                            <Multiselect\n                                            options={this.state.resources1} // Options to display in the dropdown\n                                            selectedValues={this.state.resources} // Preselected value to persist in dropdown\n                                            onSelect={this.onSelect} // Function will trigger on select event\n                                            onRemove={this.onRemove} // Function will trigger on remove event\n                                            displayValue=\"name\" // Property name to display in the dropdown options\n                                            placeholder=\"Resources\"\n                                            ref=\"resource\"\n                                            />\n                                            \n                                            </div>\n                                            {this.state.res_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"resource_error\"]}</span> :''}\n                                        </Col>\n                                    </FormGroup>\n                                    \n\n                                    {/* <FormGroup row>\n                                        <Label for=\"period\" sm={2}>\n                                        Duration (Days)<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <NumberFormat\n                                            // format=\"(###) ###-####\" mask=\"\"\n                                            name=\"period\"\n                                            placeholder='Duration'\n                                            onChange={this.handleInputChange}\n                                            value={this.state.period} class=\"form-control\" ref =\"period\"/>   \n                                            {this.state.period_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"period\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup> */}\n                                    \n                                    <FormGroup row>\n                                        <Label for=\"status\" sm={2}>\n                                        Status<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <Switch onChange={this.handleStatusChange.bind(this)} checked={this.state.status} \n                                         uncheckedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"150px\",\n                                                color: \"#000\",\n                                                fontWeight: \"bold\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Inactive\n                                            </div>\n                                            }\n                                            checkedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"180px\",\n                                                fontWeight: \"bold\",\n                                                color: \"#000\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Active\n                                            </div>\n                                            }\n                                            onColor = \"#45b649\"\n                                            offColor = \"#ffd700\"\n                                            className=\"react-switch\"\n                                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                                            height={20}\n                                            width={48}\n                                            handleDiameter={30}\n                                        />\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup check row>\n                                        <Col sm={{ size: 10, offset: 2 }}>\n                                            <Button className=\"btn btn-primary\" onClick={ this.handleSubmit }>Update    <div style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div\">\n                                                {/*                <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div> */}\n                                                <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n                                                </div></Button>&nbsp;\n                                            {(this.props.match.params.user_type == 'parent') ?\n                                                <Link to={\"/allParentTodos\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link> : this.props.match.params.user_type == 'student' ? <Link to={\"/allStudentTodos\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link> : <Link to={\"/allMentorTodos\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link> }\n                                        </Col>\n                                    </FormGroup>\n                                    {this.state.errMsg}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Page>\n        )\n    }\n}\nEditTodos.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport  default connect(mapStateToProps, {})(EditTodos);"]},"metadata":{},"sourceType":"module"}