{"ast":null,"code":"import _classCallCheck from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pradeepkumar/Downloads/meadmin/src/components/Layout/Header.js\";\nimport React from 'react';\nimport bn from 'utils/bemnames';\nimport { Navbar // NavbarToggler,\n, Nav, NavItem, NavLink, Popover, PopoverBody, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { // MdNotificationsActive,\n// MdPersonPin,\nMdClearAll // MdExitToApp,\n} from 'react-icons/md';\nimport { FaRegEdit, FaEye, FaUnlockAlt, FaPowerOff } from \"react-icons/fa\";\nimport { UserCard } from 'components/Card'; // import withBadge from 'hocs/withBadge';\n// import PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { logoutUser, getProfile } from 'actions/authentication';\nimport AppConstants from 'AppConstants';\nvar bem = bn.create('header'); // const MdNotificationsActiveWithBadge = withBadge({\n//   size: 'md',\n//   color: 'primary',\n//   style: {\n//     top: -10,\n//     right: -10,\n//     display: 'inline-flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   children: <small>5</small>,\n// })(MdNotificationsActive);\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n\n    _this.toggleNotificationPopover = function () {\n      _this.setState({\n        isOpenNotificationPopover: !_this.state.isOpenNotificationPopover\n      });\n\n      if (!_this.state.isNotificationConfirmed) {\n        _this.setState({\n          isNotificationConfirmed: true\n        });\n      }\n    };\n\n    _this.toggleUserCardPopover = function () {\n      _this.setState({\n        isOpenUserCardPopover: !_this.state.isOpenUserCardPopover\n      });\n    };\n\n    _this.handleSidebarControlButton = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n    };\n\n    _this.onProfile = function (event) {\n      var path = AppConstants.STAGADMIN + '/viewadminprofile';\n\n      _this.toggleUserCardPopover();\n\n      _this.props.history.push(path);\n    };\n\n    _this.onEditProfile = function (event) {\n      var path = AppConstants.STAGADMIN + '/editadminprofile';\n\n      _this.toggleUserCardPopover();\n\n      _this.props.history.push(path);\n    };\n\n    _this.passwordChange = function (event) {\n      var path = AppConstants.STAGADMIN + '/changeadminpassword';\n\n      _this.toggleUserCardPopover();\n\n      _this.props.history.push(path);\n    };\n\n    _this.state = {\n      _id: _this.props.auth.user._id,\n      username: '',\n      email: '',\n      profile_img: '',\n      isOpenNotificationPopover: false,\n      isNotificationConfirmed: false,\n      isOpenUserCardPopover: false\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // console.log(this.props.auth.user);\n      this.props.getProfile(this.props.auth.user._id);\n    } //componentDidMount() { \n    // const that = this;       \n    //console.log(process.env.REACT_APP_API_URL+'/users/profile/5bbe07d54d50be868b4ee2b8');\n    //this.props.getProfile(this.state._id)\n    //process.env.REACT_APP_API_URL\n\n    /* axios.get('/users/profile/'+this.props.auth.user._id)\n    .then(res => {      \n      if(res.data.Status == \"Success\"){\n        this.setState({\n          username:res.data.data.username,\n          email:res.data.data.email,\n          profile_img:res.data.data.profile_img,\n        });\n      }\n      else{\n        console.log('invalid data')\n      }\n    }) */\n\n    /* fetch(AppConstants.API+'/users/profile/'+this.props.auth.user._id)\n    .then(function(res) {\n      //console.log(res.status);\n      if(res.status == 200){\n        return res.json();\n      }\n    })\n    .then(function(data) {\n      if(data.Status == \"Success\"){\n        that.setState({\n          username:data.data.username,\n          email:data.data.email,\n          profile_img:data.data.profile_img || '/static/media/100_4.978e51b5.jpg',\n        });\n      }else\n      {\n        console.log('invalid data')\n      }\n    });\n    } */\n\n  }, {\n    key: \"onLogout\",\n    value: function onLogout(e) {\n      e.preventDefault();\n      this.props.logoutUser(this.props.history);\n    }\n    /*onProfile = event => { \n      this.toggleUserCardPopover();   \n    }\n     onEditProfile = event => { \n      this.toggleUserCardPopover();   \n    }*/\n\n    /* uploadnaicnigpcodes = event => {\n      let path = '/uploadnigpnaic';\n      this.toggleUserCardPopover();\n      this.props.history.push(path); \n    } */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const { isNotificationConfirmed } = this.state;\n      var user = this.props.auth.user;\n      var userImage;\n\n      if (user.profile_img === '' || user.profile_img === undefined) {\n        // console.log(\"nill image\")\n        userImage = 'assets/img/users/avatar-img.png';\n      } else {\n        //userImage = 'assets/img/users/100_4.jpg'\n        userImage = user.profile_img;\n      }\n\n      return /*#__PURE__*/React.createElement(Navbar, {\n        light: true,\n        expand: true,\n        className: bem.b('bg-white'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        navbar: true,\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        onClick: this.handleSidebarControlButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MdClearAll, {\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Nav, {\n        navbar: true,\n        className: bem.e('nav-right'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        id: \"Popover2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: userImage,\n        onClick: this.toggleUserCardPopover,\n        alt: \"pic\",\n        className: \"can-click\",\n        style: {\n          width: 40,\n          height: 40,\n          borderRadius: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Popover, {\n        placement: \"bottom-end\",\n        isOpen: this.state.isOpenUserCardPopover,\n        toggle: this.toggleUserCardPopover,\n        target: \"Popover2\",\n        className: \"p-0 border-0\",\n        style: {\n          minWidth: 250\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PopoverBody, {\n        className: \"p-0 border-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(UserCard, {\n        title: user.username,\n        subtitle: user.email,\n        className: \"border-light adminuser\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        flush: true,\n        className: \"adminuser-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        tag: \"button\",\n        action: true,\n        className: \"border-light\",\n        onClick: this.onProfile.bind(this),\n        title: \"View Profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FaEye, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 23\n        }\n      }), \" View Profile\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        tag: \"button\",\n        action: true,\n        className: \"border-light\",\n        onClick: this.onEditProfile.bind(this),\n        title: \"Edit Profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FaRegEdit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      }), \" Edit Profile\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        tag: \"button\",\n        action: true,\n        className: \"border-light\",\n        onClick: this.passwordChange.bind(this),\n        title: \"Change Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FaUnlockAlt, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 23\n        }\n      }), \" Change Password\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        tag: \"button\",\n        action: true,\n        className: \"border-light\",\n        onClick: this.onLogout.bind(this),\n        title: \"Logout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FaPowerOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }), \" Logout\"))))))));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n/* Header.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n} */\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}; //export default Header;\n\n\nexport default connect(mapStateToProps, {\n  logoutUser: logoutUser,\n  getProfile: getProfile\n})(withRouter(Header));","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/meadmin/src/components/Layout/Header.js"],"names":["React","bn","Navbar","Nav","NavItem","NavLink","Popover","PopoverBody","ListGroup","ListGroupItem","Button","MdClearAll","FaRegEdit","FaEye","FaUnlockAlt","FaPowerOff","UserCard","connect","withRouter","logoutUser","getProfile","AppConstants","bem","create","Header","props","toggleNotificationPopover","setState","isOpenNotificationPopover","state","isNotificationConfirmed","toggleUserCardPopover","isOpenUserCardPopover","handleSidebarControlButton","event","preventDefault","stopPropagation","document","querySelector","classList","toggle","onProfile","path","STAGADMIN","history","push","onEditProfile","passwordChange","_id","auth","user","username","email","profile_img","e","userImage","undefined","b","width","height","borderRadius","minWidth","bind","onLogout","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport bn from 'utils/bemnames';\nimport {\n  Navbar,\n  // NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Popover,\n  PopoverBody,\n  ListGroup,\n  ListGroupItem,\n  Button,\n} from 'reactstrap';\n\nimport {\n  // MdNotificationsActive,\n  // MdPersonPin,\n  MdClearAll,\n  // MdExitToApp,\n} from 'react-icons/md';\nimport { FaRegEdit,FaEye,FaUnlockAlt,FaPowerOff } from \"react-icons/fa\";\nimport { UserCard } from 'components/Card';\n// import withBadge from 'hocs/withBadge';\n\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { logoutUser,getProfile} from 'actions/authentication';\nimport AppConstants from 'AppConstants';\n\nconst bem = bn.create('header');\n\n// const MdNotificationsActiveWithBadge = withBadge({\n//   size: 'md',\n//   color: 'primary',\n//   style: {\n//     top: -10,\n//     right: -10,\n//     display: 'inline-flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   children: <small>5</small>,\n// })(MdNotificationsActive);\n\nclass Header extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      _id:this.props.auth.user._id,\n      username:'',\n      email:'',\n      profile_img:'',\n      isOpenNotificationPopover: false,\n      isNotificationConfirmed: false,\n      isOpenUserCardPopover: false,\n    }\n  }\n\n  componentDidMount() {\n    // console.log(this.props.auth.user);\n    this.props.getProfile(this.props.auth.user._id)\n  }\n  //componentDidMount() { \n   // const that = this;       \n    //console.log(process.env.REACT_APP_API_URL+'/users/profile/5bbe07d54d50be868b4ee2b8');\n    //this.props.getProfile(this.state._id)\n    //process.env.REACT_APP_API_URL\n    /* axios.get('/users/profile/'+this.props.auth.user._id)\n    .then(res => {      \n      if(res.data.Status == \"Success\"){\n        this.setState({\n          username:res.data.data.username,\n          email:res.data.data.email,\n          profile_img:res.data.data.profile_img,\n        });\n      }\n      else{\n        console.log('invalid data')\n      }\n    }) */\n\n    /* fetch(AppConstants.API+'/users/profile/'+this.props.auth.user._id)\n    .then(function(res) {\n      //console.log(res.status);\n      if(res.status == 200){\n        return res.json();\n      }\n    })\n    .then(function(data) {\n      if(data.Status == \"Success\"){\n        that.setState({\n          username:data.data.username,\n          email:data.data.email,\n          profile_img:data.data.profile_img || '/static/media/100_4.978e51b5.jpg',\n        });\n      }else\n      {\n        console.log('invalid data')\n      }\n    });\n  } */\n\n  toggleNotificationPopover = () => {\n    this.setState({\n      isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\n    });\n\n    if (!this.state.isNotificationConfirmed) {\n      this.setState({ isNotificationConfirmed: true });\n    }\n  };\n\n  toggleUserCardPopover = () => {\n    this.setState({\n      isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\n    });\n  };\n\n  handleSidebarControlButton = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n  };\n  onLogout(e) {\n    e.preventDefault();\n    this.props.logoutUser(this.props.history);\n  }\n\n  /*onProfile = event => { \n    this.toggleUserCardPopover();   \n  }\n   onEditProfile = event => { \n    this.toggleUserCardPopover();   \n  }*/\n\n  /* uploadnaicnigpcodes = event => {\n    let path = '/uploadnigpnaic';\n    this.toggleUserCardPopover();\n    this.props.history.push(path); \n  } */\n\n  onProfile = event => {\n    let path = AppConstants.STAGADMIN+'/viewadminprofile';\n    this.toggleUserCardPopover();\n    this.props.history.push(path);   \n  };\n\n  onEditProfile = event => {\n    let path = AppConstants.STAGADMIN+'/editadminprofile';\n    this.toggleUserCardPopover();\n    this.props.history.push(path);   \n  };\n\n  passwordChange = event => {\n    let path = AppConstants.STAGADMIN+'/changeadminpassword';\n    this.toggleUserCardPopover();\n    this.props.history.push(path);   \n  };\n\n  \n  render() {\n    // const { isNotificationConfirmed } = this.state;\n    const {user} = this.props.auth;\n   let userImage ;\n\t if(user.profile_img ==='' || user.profile_img === undefined )\n\t {\n\t\t// console.log(\"nill image\")\n\t\t userImage = 'assets/img/users/avatar-img.png'\n\t }\n\t else\n\t {\n\t\t//userImage = 'assets/img/users/100_4.jpg'\n\t\t userImage =  user.profile_img;\n\t\t\n\t }\n    return (\n      <Navbar light expand className={bem.b('bg-white')}>\n        <Nav navbar className=\"mr-2\">\n          <Button outline onClick={this.handleSidebarControlButton}>\n            <MdClearAll size={25} />\n          </Button>\n        </Nav>\n      \n\n        <Nav navbar className={bem.e('nav-right')}>        \n\n          <NavItem>\n            <NavLink id=\"Popover2\">\n              {/* <Avatar\n                onClick={this.toggleUserCardPopover}\n                className=\"can-click\"\n              /> */}\n                \n              <img src={userImage} onClick={this.toggleUserCardPopover} alt=\"pic\"\n                className=\"can-click\" style={{width: 40, height: 40,borderRadius:50}}/>\n            </NavLink>\n            <Popover\n              placement=\"bottom-end\"\n              isOpen={this.state.isOpenUserCardPopover}\n              toggle={this.toggleUserCardPopover}\n              target=\"Popover2\"\n              className=\"p-0 border-0\"\n              style={{ minWidth: 250 }}>\n              <PopoverBody className=\"p-0 border-light\">\n                <UserCard\n                  title={user.username}\n                  subtitle={user.email}\n                  className=\"border-light adminuser\">\n                  <ListGroup flush className=\"adminuser-list\">\n                    {/* <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdPersonPin />\n                      <Link to={`/viewadminprofile`} style={{color:\"#212529\"}} onClick={this.onProfile.bind(this)}>View Profile</Link>                      \n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdPersonPin /> \n                      <Link to={`/editadminprofile`} style={{color:\"#212529\"}} onClick={this.onEditProfile.bind(this)}>Edit Profile</Link>\n                    </ListGroupItem>*/}\n                    {/* <ListGroupItem tag=\"button\" action className=\"border-light\" onClick={this.uploadnaicnigpcodes.bind(this)} title=\"Upload NAIC/NIGP codes\">\n                      <MdPersonPin /> Upload NAIC/NIGP Codes\n                    </ListGroupItem> */}\n                    <ListGroupItem tag=\"button\" action className=\"border-light\" onClick={this.onProfile.bind(this)} title=\"View Profile\">\n                      <FaEye /> View Profile\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\" onClick={this.onEditProfile.bind(this)} title=\"Edit Profile\">\n                      < FaRegEdit/> Edit Profile\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\" onClick={this.passwordChange.bind(this)} title=\"Change Password\">\n                      <FaUnlockAlt /> Change Password\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\" onClick={this.onLogout.bind(this)} title=\"Logout\">\n                      <FaPowerOff /> Logout\n                    </ListGroupItem>\n                  </ListGroup>\n                </UserCard>\n              </PopoverBody>\n            </Popover>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n/* Header.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n} */\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n})\n//export default Header;\nexport default connect(mapStateToProps, { logoutUser,getProfile })(withRouter(Header));\n"]},"metadata":{},"sourceType":"module"}