{"ast":null,"code":"import _classCallCheck from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/Login.js\";\nimport logo200Image from 'assets/img/logo/prana-logo.jpg';\nimport React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Card, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport PropTypes from 'prop-types';\nimport { ReactTitle } from 'react-meta-tags'; // import Loading from 'assets/img/loader.gif';\n\nvar Login = /*#__PURE__*/function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleSubmitEnter = function (event) {\n      if (event.key == 'Enter') {\n        event.preventDefault();\n\n        if (_this.handleValidation()) {\n          var user = {\n            email: _this.state.fields['email'],\n            password: _this.state.fields['password']\n          };\n\n          _this.props.loginUser(user);\n        }\n      }\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.handleValidation()) {\n        _this.setState({\n          loading: 1,\n          invalidUser: ''\n        });\n\n        var user = {\n          email: _this.state.fields['email'],\n          password: _this.state.fields['password']\n        };\n\n        _this.props.loginUser(user);\n      }\n    };\n\n    _this.state = {\n      fields: {},\n      errors: {},\n      invalidUser: '',\n      loading: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleChange\",\n    value: function handleChange(field, e) {\n      var fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n    /** Validations */\n\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true; //Email\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n        var lastAtPos = fields[\"email\"].lastIndexOf('@');\n        var lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Please enter valid email\";\n        }\n      }\n\n      if (!fields[\"email\"]) {\n        formIsValid = false;\n        errors[\"email\"] = \"Please enter email\";\n      } //Password\n\n\n      if (!fields[\"password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"Please enter password\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.auth.isAuthenticated) {\n        this.setState({\n          loading: ''\n        });\n        this.props.history.push('/dashboard');\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (nextProps.auth.isAuthenticated) {\n        this.setState({\n          loading: ''\n        });\n        this.props.history.push('/dashboard');\n      } //if(nextProps.errors.msg == \"Invalid email or password. Please try again\") {\n\n\n      setTimeout(function () {\n        console.log(\"1\");\n\n        _this2.setState({\n          loading: '',\n          invalidUser: nextProps.errors.msg\n        });\n      }, 2000); //}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          showLogo = _this$props.showLogo,\n          onLogoClick = _this$props.onLogoClick;\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"login-bg\",\n        style: {\n          height: '100vh',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ReactTitle, {\n        title: \"Mobile Expert:: Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        lg: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"loginform\",\n        onSubmit: this.handleSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, showLogo && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo200Image,\n        className: \"rounded\",\n        style: {\n          width: 150,\n          cursor: 'pointer'\n        },\n        alt: \"logo\",\n        onClick: onLogoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, this.state.invalidUser), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"exampleEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Email\",\n        onChange: this.handleChange.bind(this, \"email\"),\n        name: \"email\",\n        value: this.state.fields[\"email\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, this.state.errors[\"email\"])), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"exampleEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        onChange: this.handleChange.bind(this, \"password\"),\n        value: this.state.fields[\"password\"],\n        onKeyPress: this.handleSubmitEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        className: \"cst-login-btn border-0 mt-4 btn btn-secondary btn-lg btn-block\",\n        block: true,\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }, \"Login  \", /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/forgotpassword',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, \"Forgot Password?\")))))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nLogin.defaultProps = {\n  showLogo: true\n};\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser\n})(Login);","map":{"version":3,"sources":["/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/Login.js"],"names":["logo200Image","React","Redirect","Link","Button","Form","FormGroup","Input","Label","Card","Col","Row","connect","loginUser","PropTypes","ReactTitle","Login","props","handleSubmitEnter","event","key","preventDefault","handleValidation","user","email","state","fields","password","handleSubmit","setState","loading","invalidUser","errors","field","e","target","value","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","auth","isAuthenticated","history","push","nextProps","setTimeout","console","log","msg","showLogo","onLogoClick","height","justifyContent","alignItems","bind","width","cursor","color","handleChange","display","Component","defaultProps","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import logo200Image from 'assets/img/logo/prana-logo.jpg';\nimport React from 'react';\nimport  { Redirect,Link } from 'react-router-dom';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Card, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport PropTypes from 'prop-types';\nimport {ReactTitle} from 'react-meta-tags';\n// import Loading from 'assets/img/loader.gif';\n\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {},\n      invalidUser:'',\n      loading: ''\n    }\n  }\n  \n  handleChange(field, e){    \t\t\n    let fields = this.state.fields;\n    fields[field] = e.target.value;        \n    this.setState({fields});\n  }\n\n  /** Validations */\n  handleValidation(){\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //Email\n   \n    if(typeof fields[\"email\"] !== \"undefined\"){\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Please enter valid email\";\n      }\n    }\n    if(!fields[\"email\"]){\n      formIsValid = false;\n      errors[\"email\"] = \"Please enter email\";\n    }\n    //Password\n    if(!fields[\"password\"]){\n      formIsValid = false;\n      errors[\"password\"] = \"Please enter password\";\n    }\n    this.setState({errors: errors});\n    return formIsValid;\n  }\n\thandleSubmitEnter = event => {\n\t\tif(event.key == 'Enter'){\n\t\t\tevent.preventDefault();\n\t\t\tif(this.handleValidation()){\n\t\t\t  const user = {\n\t\t\t\temail: this.state.fields['email'],\n\t\t\t\tpassword: this.state.fields['password']\n\t\t\t  }\n\t\t\t  this.props.loginUser(user);\n\t\t\t}\n\t\t}\n    \n\t};\n  handleSubmit = event => {\n    event.preventDefault();\n    if(this.handleValidation()){\n      this.setState({loading:1,invalidUser:''});\n      const user = {\n        email: this.state.fields['email'],\n        password: this.state.fields['password']\n      }\n      this.props.loginUser(user);\n    }\n  };\n  componentDidMount() {\n    if(this.props.auth.isAuthenticated) {\n      this.setState({loading:''});\n        this.props.history.push('/dashboard');\n    }\n  };\n  componentWillReceiveProps(nextProps) {\n   if(nextProps.auth.isAuthenticated) {\n    this.setState({loading:''});\n        this.props.history.push('/dashboard')\n    }\n     //if(nextProps.errors.msg == \"Invalid email or password. Please try again\") {\n      setTimeout(() => {\n        console.log(\"1\")\n        this.setState({\n          loading:'',\n          invalidUser: nextProps.errors.msg\n        });\n      }, 2000);\n    //}\n  }\n  render() {\n    const {\n      showLogo,\n      onLogoClick,\n    } = this.props;\n    \n    return (\n     \n    \n      <Row className=\"login-bg\"\n        style={{\n          height: '100vh',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n         <ReactTitle title=\"Mobile Expert:: Login\"/>\n        <Col md={6} lg={4}>\n          <Card body>\n         \n            <Form name=\"loginform\" onSubmit= {this.handleSubmit.bind(this)}>\n              {showLogo && (\n                <div className=\"text-center pb-4\">\n                  <img\n                    src={logo200Image}\n                    className=\"rounded\"\n                    style={{ width: 150,  cursor: 'pointer' }}\n                    alt=\"logo\"\n                    onClick={onLogoClick}\n                  />\n                </div>\n              )}\n              <span className=\"error\" style={{color: 'red'}}>{this.state.invalidUser}</span>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Email</Label>\n                <Input\n                  type=\"text\"                 \n                  placeholder=\"Email\"\n                  onChange={this.handleChange.bind(this, \"email\")}\n                  name=\"email\"\n                  value={this.state.fields[\"email\"]}\n                />\n                <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"email\"]}</span>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Password</Label>\n                <Input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  onChange={this.handleChange.bind(this, \"password\")} \n                  value={this.state.fields[\"password\"]} onKeyPress={this.handleSubmitEnter}\n                />\n                <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"password\"]}</span>\n              </FormGroup>\n              <Button\n                size=\"lg\"\n                className=\"cst-login-btn border-0 mt-4 btn btn-secondary btn-lg btn-block\"\n                block\n                onClick={this.handleSubmit}>\n                Login  <div  style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div \">\n                  {/*                <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div> */}\n                  <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n                  </div>\n              </Button>\n              <br></br>\n              <div className=\"text-center pt-1\">\n                <h6>  \n                <Link to={'/forgotpassword'}>Forgot Password?</Link>         \n                    {/*<a href=\"/forgotpassword\">*/}\n                      \n                    {/*</a>*/}\n                </h6>\n              </div>\n            </Form>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nLogin.defaultProps = {\n  showLogo: true\n};\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport  default connect(mapStateToProps, { loginUser })(Login);\n"]},"metadata":{},"sourceType":"module"}