{"ast":null,"code":"import _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/Children/viewChildTodos.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport Page from 'components/Page';\nimport { Card, CardBody, Row, CardHeader, Label } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { MdAdd, MdEdit, MdDelete } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport Workbook from 'react-xlsx-workbook';\nimport moment from \"moment\";\nimport ParentIcon from 'assets/img/parents.png';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar ViewChildTodos = /*#__PURE__*/function (_React$Component) {\n  _inherits(ViewChildTodos, _React$Component);\n\n  function ViewChildTodos() {\n    var _this;\n\n    _classCallCheck(this, ViewChildTodos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewChildTodos).call(this));\n    _this.state = {\n      child_todos: [],\n      child_todos_data: [],\n      totalDataSize: 0,\n      sizePerPage: 10,\n      currentPage: 1,\n      sortName: '',\n      sortOrder: '',\n      children: [],\n      searchText: '',\n      start_date: null\n    };\n    _this.onPageChange = _this.onPageChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSizePerPageList = _this.onSizePerPageList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSortChange = _this.onSortChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSearchChange = _this.onSearchChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderShowsTotal = _this.renderShowsTotal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ViewChildTodos, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n    }\n  }, {\n    key: \"renderShowsTotal\",\n    value: function renderShowsTotal(start, to, paginationShowsTotal) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, \"Showing rows \", start, \" to \", to, \" of \", paginationShowsTotal);\n    }\n  }, {\n    key: \"onSizePerPageList\",\n    value: function onSizePerPageList(sizePerPage) {\n      var page = 1;\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(page, sizePerPage) {\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText);\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(sortName, sortOrder) {\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText);\n    }\n  }, {\n    key: \"onSearchChange\",\n    value: function onSearchChange(searchText, colInfos, multiColumnSearch) {\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else {\n        searchText = '';\n      }\n\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText);\n    }\n  }, {\n    key: \"updateProvidersList\",\n    value: function updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText) {\n      var _this2 = this;\n\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else if (this.state.searchText && this.state.searchText !== \"\") {\n        searchText = this.state.searchText;\n      } else {\n        searchText = '';\n      }\n\n      var tablefilterdata = {\n        page: page,\n        sizeperpage: sizePerPage,\n        sortname: sortName,\n        sortorder: sortOrder,\n        serchtext: searchText,\n        defaultSearchText: searchText\n      };\n      axios.post(AppConstants.API + '/child/getChildTodosStatus/' + this.props.data, tablefilterdata).then(function (res) {\n        var child_data = [];\n\n        if (res.data.Status === 'Success') {\n          // console.log(res.data,\"sortname\",sortName,\"sortorder\",sortOrder)\n          // if(res.data.data[0]){\n          //     child_data = res.data.data[0].todos_data\n          // }\n          console.log(\"res.data.data\", res.data.data);\n\n          _this2.setState({\n            children: res.data.data,\n            currentPage: page,\n            sizePerPage: sizePerPage,\n            sortName: sortName,\n            sortOrder: sortOrder,\n            serchtext: searchText,\n            defaultSearchText: searchText\n          });\n        }\n      });\n      axios.post(AppConstants.API + '/child/getChildTodosStatusCount/' + this.props.data, tablefilterdata).then(function (res) {\n        if (res.data.Status === 'Success') {\n          _this2.setState({\n            totalDataSize: res.data.data,\n            serchText: searchText,\n            defaultSearchText: searchText\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(cell, row) {\n      // console.log(\"celllllllllllllll166\",cell)\n      if (cell != 0) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"mr-1 badge badge-success  p-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }\n        }, \"Complete\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"mr-1 badge badge-warning p-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }\n        }, \"Pending\");\n      }\n    }\n  }, {\n    key: \"handleResource\",\n    value: function handleResource(cell, row) {\n      var _this3 = this;\n\n      // console.log(row.resourcesData)\n      var selectedValue = []; // cell.map((prgs,i)=>{\n\n      row.resourcesData.forEach(function (option) {\n        console.log(option); // if(prgs == option._id){\n        //   if(prgs == option._id){\n\n        var item = {};\n        item[\"name\"] = option.title;\n        item[\"prg_id\"] = option._id;\n        selectedValue.push(item); //   } \n        // }\n      }); //   })\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 3\n        }\n      }, selectedValue.map(function (prg, i) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"mr-1 badge badge-dark adjest-badge\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 38\n          }\n        }, prg.name, /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 101\n          }\n        }));\n      }));\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        start_date: date //end_date :date\n\n      });\n    } // createCustomInsertButton = (onClick) => {\n    //     return (\n    //       <span> &nbsp; <Link to={\"/addprogram\"} className=\"btn btn-warning\" title=\"Add Program\"><MdAdd />Add Program</Link>&nbsp;&nbsp;{this.state.programs.length>0?\n    //         <Workbook filename=\"ExportProgram.xlsx\" element={<span className=\"btn btn-secondary editbtn\" title=\"Export Program\">Export Program</span>}>\n    //           <Workbook.Sheet data={this.state.programs} name=\"Sheet A\">\n    //           <Workbook.Column label=\"Title\" value=\"title\"/>\n    //           <Workbook.Column label=\"Status\" value=\"status\"/>\n    //           </Workbook.Sheet>\n    //         </Workbook>\n    //         :\"\"}</span>\n    //     );\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = {\n        insertText: \"New\",\n        deleteText: 'Delete',\n        saveText: 'Save',\n        closeText: 'Close',\n        insertBtn: this.createCustomInsertButton,\n        page: this.state.currentPage,\n        // which page you want to show as default\n        sizePerPageList: [5, 10, 20, 50],\n        // you can change the dropdown list for size per page\n        sizePerPage: this.state.sizePerPage,\n        // which size per page you want to locate as default\n        pageStartIndex: 1,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        paginationShowsTotal: this.renderShowsTotal,\n        //this.renderShowsTotal- Accept bool or function\n        // paginationShowsTotal : this.state.child_todos.length,\n        paginationPosition: 'bottom',\n        // default is bottom, top and both is all available\n        onPageChange: this.onPageChange,\n        onSizePerPageList: this.onSizePerPageList,\n        onSortChange: this.onSortChange,\n        onSearchChange: this.onSearchChange,\n        insertModal: this.createCustomModal\n      };\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"mx-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"pt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"examplePassword\",\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 74\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: ParentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 82\n        }\n      }), \" Habits list\"))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(BootstrapTable, {\n        data: this.state.children,\n        remote: true,\n        search: true,\n        pagination: true,\n        fetchInfo: {\n          dataTotalSize: this.state.totalDataSize\n        },\n        multiColumnSearch: true,\n        options: options //  insertRow\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"todo_id\",\n        isKey: true,\n        searchable: false,\n        dataSort: true,\n        hidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 37\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"title\",\n        dataSort: true,\n        width: '15%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 37\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"program\",\n        dataSort: true,\n        width: '15%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 37\n        }\n      }, \"Program\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"startDate\",\n        dataSort: true,\n        width: '15%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 37\n        }\n      }, \"Start Date\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"endDate\",\n        dataSort: true,\n        width: '15%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 37\n        }\n      }, \"End Date\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"resourcesData\",\n        dataFormat: this.handleResource.bind(this),\n        dataSort: true,\n        width: '10%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 37\n        }\n      }, \"Resources\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"pendingData\",\n        width: '10%',\n        dataSort: true,\n        dataFormat: this.handleStatus.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 37\n        }\n      }, \"Status\"))))));\n    }\n  }]);\n\n  return ViewChildTodos;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(ViewChildTodos);","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/Children/viewChildTodos.js"],"names":["React","Link","AppConstants","ReactTitle","Page","Card","CardBody","Row","CardHeader","Label","BootstrapTable","TableHeaderColumn","MdAdd","MdEdit","MdDelete","connect","swal","axios","Workbook","moment","ParentIcon","DatePicker","ViewChildTodos","state","child_todos","child_todos_data","totalDataSize","sizePerPage","currentPage","sortName","sortOrder","children","searchText","start_date","onPageChange","bind","onSizePerPageList","onSortChange","onSearchChange","renderShowsTotal","handleChange","updateProvidersList","start","to","paginationShowsTotal","page","defaultSearchText","colInfos","multiColumnSearch","tablefilterdata","sizeperpage","sortname","sortorder","serchtext","post","API","props","data","then","res","child_data","Status","console","log","setState","serchText","cell","row","selectedValue","resourcesData","forEach","option","item","title","_id","push","map","prg","i","name","date","options","insertText","deleteText","saveText","closeText","insertBtn","createCustomInsertButton","sizePerPageList","pageStartIndex","paginationSize","paginationPosition","insertModal","createCustomModal","dataTotalSize","handleResource","handleStatus","Component","mapStateToProps","auth","errors"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,EAA6BC,UAA7B,EAAwCC,KAAxC,QAAoD,YAApD;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,gBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;IACMC,c;;;AACF,4BAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAG,EADL;AAETC,MAAAA,gBAAgB,EAAG,EAFV;AAGTC,MAAAA,aAAa,EAAE,CAHN;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,WAAW,EAAE,CALJ;AAMTC,MAAAA,QAAQ,EAAE,EAND;AAOTC,MAAAA,SAAS,EAAE,EAPF;AAQTC,MAAAA,QAAQ,EAAC,EARA;AASTC,MAAAA,UAAU,EAAE,EATH;AAUTC,MAAAA,UAAU,EAAG;AAVJ,KAAb;AAYA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,uDAAzB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AACA,UAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBH,IAApB,uDAAtB;AACA,UAAKI,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBJ,IAAtB,uDAAxB;AACA,UAAKK,YAAL,GAAoB,MAAKA,YAAL,CAAkBL,IAAlB,uDAApB;AAnBS;AAsBZ;;;;wCACkB;AACf,WAAKM,mBAAL,CAAyB,KAAKlB,KAAL,CAAWK,WAApC,EAAiD,KAAKL,KAAL,CAAWI,WAA5D,EAAyE,KAAKJ,KAAL,CAAWM,QAApF,EAA8F,KAAKN,KAAL,CAAWO,SAAzG,EAAoH,KAAKP,KAAL,CAAWS,UAA/H;AACH;;;qCACgBU,K,EAAOC,E,EAAIC,oB,EAAsB;AAC9C,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBF,KADlB,UAC+BC,EAD/B,UACyCC,oBADzC,CADA;AAKH;;;sCACiBjB,W,EAAa;AAC3B,UAAIkB,IAAI,GAAG,CAAX;AACA,WAAKJ,mBAAL,CAAyBI,IAAzB,EAA+BlB,WAA/B,EAA4C,KAAKJ,KAAL,CAAWM,QAAvD,EAAiE,KAAKN,KAAL,CAAWO,SAA5E,EAAuF,KAAKP,KAAL,CAAWS,UAAlG;AACD;;;iCACYa,I,EAAMlB,W,EAAa;AAC9B,WAAKc,mBAAL,CAAyBI,IAAzB,EAA+BlB,WAA/B,EAA4C,KAAKJ,KAAL,CAAWM,QAAvD,EAAiE,KAAKN,KAAL,CAAWO,SAA5E,EAAuF,KAAKP,KAAL,CAAWuB,iBAAlG;AACD;;;iCACYjB,Q,EAAUC,S,EAAW;AAC9B,UAAIe,IAAI,GAAG,CAAX;AACA,WAAKJ,mBAAL,CAAyBI,IAAzB,EAA+B,KAAKtB,KAAL,CAAWI,WAA1C,EAAuDE,QAAvD,EAAiEC,SAAjE,EAA4E,KAAKP,KAAL,CAAWS,UAAvF;AACH;;;mCACcA,U,EAAYe,Q,EAAUC,iB,EAAmB;AACtD,UAAGhB,UAAU,IAAIA,UAAU,KAAK,EAAhC,EAAoC;AACpCA,QAAAA,UAAU,GAAGA,UAAb;AACC,OAFD,MAEO;AACPA,QAAAA,UAAU,GAAG,EAAb;AACC;;AACA,UAAIa,IAAI,GAAG,CAAX;AACA,WAAKJ,mBAAL,CAAyBI,IAAzB,EAA+B,KAAKtB,KAAL,CAAWI,WAA1C,EAAuD,KAAKJ,KAAL,CAAWM,QAAlE,EAA4E,KAAKN,KAAL,CAAWO,SAAvF,EAAkGE,UAAlG;AACF;;;wCACmBa,I,EAAMlB,W,EAAaE,Q,EAAUC,S,EAAWE,U,EAAW;AAAA;;AACrE,UAAGA,UAAU,IAAIA,UAAU,KAAK,EAAhC,EAAoC;AAClCA,QAAAA,UAAU,GAAGA,UAAb;AACD,OAFD,MAEM,IAAG,KAAKT,KAAL,CAAWS,UAAX,IAAyB,KAAKT,KAAL,CAAWS,UAAX,KAA0B,EAAtD,EAA0D;AAC9DA,QAAAA,UAAU,GAAG,KAAKT,KAAL,CAAWS,UAAxB;AACD,OAFK,MAEA;AACJA,QAAAA,UAAU,GAAG,EAAb;AACD;;AACD,UAAIiB,eAAe,GAAG;AACpBJ,QAAAA,IAAI,EAAEA,IADc;AAEpBK,QAAAA,WAAW,EAAEvB,WAFO;AAGpBwB,QAAAA,QAAQ,EAAEtB,QAHU;AAIpBuB,QAAAA,SAAS,EAAEtB,SAJS;AAKpBuB,QAAAA,SAAS,EAAErB,UALS;AAMpBc,QAAAA,iBAAiB,EAAEd;AANC,OAAtB;AASAf,MAAAA,KAAK,CAACqC,IAAN,CAAWpD,YAAY,CAACqD,GAAb,GAAiB,6BAAjB,GAAgD,KAAKC,KAAL,CAAWC,IAAtE,EAA4ER,eAA5E,EAA6FS,IAA7F,CAAkG,UAAAC,GAAG,EAAI;AACrG,YAAIC,UAAU,GAAG,EAAjB;;AACA,YAAID,GAAG,CAACF,IAAJ,CAASI,MAAT,KAAoB,SAAxB,EAAmC;AAC/B;AACA;AACA;AACA;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BJ,GAAG,CAACF,IAAJ,CAASA,IAArC;;AACc,UAAA,MAAI,CAACO,QAAL,CAAc;AACZjC,YAAAA,QAAQ,EAAE4B,GAAG,CAACF,IAAJ,CAASA,IADP;AAEZ7B,YAAAA,WAAW,EAAEiB,IAFD;AAGZlB,YAAAA,WAAW,EAAEA,WAHD;AAIZE,YAAAA,QAAQ,EAAEA,QAJE;AAKZC,YAAAA,SAAS,EAAEA,SALC;AAMZuB,YAAAA,SAAS,EAAErB,UANC;AAOZc,YAAAA,iBAAiB,EAAEd;AAPP,WAAd;AAUD;AACF,OAnBH;AAoBAf,MAAAA,KAAK,CAACqC,IAAN,CAAWpD,YAAY,CAACqD,GAAb,GAAiB,kCAAjB,GAAoD,KAAKC,KAAL,CAAWC,IAA1E,EAAgFR,eAAhF,EAAiGS,IAAjG,CAAsG,UAAAC,GAAG,EAAI;AAC3G,YAAIA,GAAG,CAACF,IAAJ,CAASI,MAAT,KAAoB,SAAxB,EAAmC;AACjC,UAAA,MAAI,CAACG,QAAL,CAAc;AACZtC,YAAAA,aAAa,EAAEiC,GAAG,CAACF,IAAJ,CAASA,IADZ;AAEVQ,YAAAA,SAAS,EAAEjC,UAFD;AAGVc,YAAAA,iBAAiB,EAAEd;AAHT,WAAd;AAKD;AACF,OARD;AASD;;;iCAEUkC,I,EAAMC,G,EAAI;AACnB;AACA,UAAGD,IAAI,IAAE,CAAT,EAAW;AACP,4BAAQ;AAAM,UAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AACH,OAFD,MAEK;AACD,4BAAQ;AAAO,UAAA,SAAS,EAAC,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AACH;AACJ;;;mCACcA,I,EAAKC,G,EAAI;AAAA;;AACtB;AACA,UAAIC,aAAa,GAAG,EAApB,CAFsB,CAGtB;;AACID,MAAAA,GAAG,CAACE,aAAJ,CAAkBC,OAAlB,CAA0B,UAAAC,MAAM,EAAI;AAChCT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ,EADgC,CAEhC;AACA;;AACI,YAAIC,IAAI,GAAE,EAAV;AACAA,QAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeD,MAAM,CAACE,KAAtB;AACAD,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiBD,MAAM,CAACG,GAAxB;AACAN,QAAAA,aAAa,CAACO,IAAd,CAAmBH,IAAnB,EAP4B,CAQhC;AACA;AACF,OAVF,EAJkB,CAe5B;;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQJ,aAAa,CAACQ,GAAd,CAAkB,UAACC,GAAD,EAAKC,CAAL;AAAA,4BAAS;AAAM,UAAA,SAAS,EAAC,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsDD,GAAG,CAACE,IAA1D,eAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/D,CAAT;AAAA,OAAlB,CAAR,CADF;AAGK;;;iCACYC,I,EAAM;AACf,WAAKhB,QAAL,CAAc;AACZ/B,QAAAA,UAAU,EAAE+C,IADA,CAEZ;;AAFY,OAAd;AAIH,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BACQ;AACJ,UAAMC,OAAO,GAAG;AAEZC,QAAAA,UAAU,EAAE,KAFA;AAIZC,QAAAA,UAAU,EAAE,QAJA;AAMZC,QAAAA,QAAQ,EAAE,MANE;AAQZC,QAAAA,SAAS,EAAE,OARC;AAUZC,QAAAA,SAAS,EAAE,KAAKC,wBAVJ;AAYZ1C,QAAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWK,WAZL;AAYmB;AAE/B4D,QAAAA,eAAe,EAAE,CAAE,CAAF,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAdL;AAcuB;AAEnC7D,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI,WAhBZ;AAgB0B;AAEtC8D,QAAAA,cAAc,EAAE,CAlBJ;AAkBO;AAEnBC,QAAAA,cAAc,EAAE,CApBJ;AAoBQ;AAEpB9C,QAAAA,oBAAoB,EAAE,KAAKL,gBAtBf;AAsBkC;AAE9C;AAEAoD,QAAAA,kBAAkB,EAAE,QA1BR;AA0BmB;AAE/BzD,QAAAA,YAAY,EAAE,KAAKA,YA5BP;AA8BZE,QAAAA,iBAAiB,EAAE,KAAKA,iBA9BZ;AAgCZC,QAAAA,YAAY,EAAE,KAAKA,YAhCP;AAkCZC,QAAAA,cAAc,EAAE,KAAKA,cAlCT;AAoCZsD,QAAAA,WAAW,EAAE,KAAKC;AApCN,OAAhB;AAuCA,0BACQ,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,gCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,iBAAX;AAA6B,QAAA,SAAS,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAQ;AAAK,QAAA,GAAG,EAAEzE,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,iBAA7C,CADJ,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA2BK,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWQ,QAAjC;AAA2C,QAAA,MAAM,EAAK,IAAtD;AACA,QAAA,MAAM,EAAE,IADR;AAEA,QAAA,UAAU,EAAE,IAFZ;AAEkB,QAAA,SAAS,EAAG;AAAE+D,UAAAA,aAAa,EAAE,KAAKvE,KAAL,CAAWG;AAA5B,SAF9B;AAGA,QAAA,iBAAiB,EAAE,IAHnB;AAIA,QAAA,OAAO,EAAEuD,OAJT,CAKD;AALC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAuC,QAAA,KAAK,EAAE,IAA9C;AAAoD,QAAA,UAAU,EAAE,KAAhE;AAAuE,QAAA,QAAQ,EAAE,IAAjF;AAAuF,QAAA,MAAM,EAAE,IAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPH,eAQG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAsC,QAAA,QAAQ,EAAE,IAAhD;AAAsD,QAAA,KAAK,EAAE,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARH,eASG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAwC,QAAA,QAAQ,EAAE,IAAlD;AAAwD,QAAA,KAAK,EAAE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATH,eAWG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAA0C,QAAA,QAAQ,EAAE,IAApD;AAA0D,QAAA,KAAK,EAAE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXH,eAYG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAwC,QAAA,QAAQ,EAAE,IAAlD;AAAwD,QAAA,KAAK,EAAE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZH,eAaG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,eAA7B;AAA6C,QAAA,UAAU,EAAE,KAAKc,cAAL,CAAoB5D,IAApB,CAAyB,IAAzB,CAAzD;AAA2F,QAAA,QAAQ,EAAE,IAArG;AAA2G,QAAA,KAAK,EAAE,KAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbH,eAcG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,KAAK,EAAE,KAAlD;AAAyD,QAAA,QAAQ,EAAE,IAAnE;AAAyE,QAAA,UAAU,EAAE,KAAK6D,YAAL,CAAkB7D,IAAlB,CAAuB,IAAvB,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdH,CA3BL,CADJ,CAJJ,CADJ,CADR;AAwDH;;;;EApPwBnC,KAAK,CAACiG,S;;AAsPnC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAC3E,KAAD;AAAA,SAAY;AAChC4E,IAAAA,IAAI,EAAE5E,KAAK,CAAC4E,IADoB;AAEhCC,IAAAA,MAAM,EAAE7E,KAAK,CAAC6E;AAFkB,GAAZ;AAAA,CAAxB;;AAIA,eAAerF,OAAO,CAACmF,eAAD,EAAkB,EAAlB,CAAP,CAA6B5E,cAA7B,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport Page from 'components/Page';\nimport { Card, CardBody, Row,CardHeader,Label} from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { MdAdd, MdEdit, MdDelete } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport Workbook from 'react-xlsx-workbook';\nimport moment from \"moment\";\nimport ParentIcon from 'assets/img/parents.png';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nclass ViewChildTodos extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            child_todos : [],\n            child_todos_data : [],\n            totalDataSize: 0,\n            sizePerPage: 10,\n            currentPage: 1,\n            sortName: '',\n            sortOrder: '',\n            children:[],\n            searchText: '',\n            start_date : null,\n        }\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onSizePerPageList = this.onSizePerPageList.bind(this);\n        this.onSortChange = this.onSortChange.bind(this);\n        this.onSearchChange = this.onSearchChange.bind(this); \n        this.renderShowsTotal = this.renderShowsTotal.bind(this); \n        this.handleChange = this.handleChange.bind(this); \n\n        \n    }\n    componentDidMount(){\n        this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n    }\n    renderShowsTotal(start, to, paginationShowsTotal) {\n        return (\n        <span >\n           Showing rows { start } to { to } of { paginationShowsTotal }\n        </span>\n        );\n    }\n    onSizePerPageList(sizePerPage) {\n        let page = 1;\n        this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n      }\n      onPageChange(page, sizePerPage) {        \n        this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText);\n      }\n      onSortChange(sortName, sortOrder) {\n          let page = 1;\n          this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText);\n      }\n      onSearchChange(searchText, colInfos, multiColumnSearch) {\n        if(searchText && searchText !== \"\") {\n        searchText = searchText;\n        }else  {  \n        searchText = '';\n        }\n         let page = 1;\n         this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText);\n      }\n      updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText){\n        if(searchText && searchText !== \"\") {\n          searchText = searchText;\n        }else if(this.state.searchText && this.state.searchText !== \"\") {\n          searchText = this.state.searchText;\n        }else {\n          searchText = '';\n        }\n        let tablefilterdata = {\n          page: page,\n          sizeperpage: sizePerPage,\n          sortname: sortName,\n          sortorder: sortOrder,\n          serchtext: searchText,\n          defaultSearchText: searchText\n    \n        };\n        axios.post(AppConstants.API+'/child/getChildTodosStatus/'+ this.props.data, tablefilterdata).then(res => {\n            var child_data = [];\n            if (res.data.Status === 'Success') {\n                // console.log(res.data,\"sortname\",sortName,\"sortorder\",sortOrder)\n                // if(res.data.data[0]){\n                //     child_data = res.data.data[0].todos_data\n                // }\nconsole.log(\"res.data.data\",res.data.data)\n              this.setState({\n                children: res.data.data,\n                currentPage: page,\n                sizePerPage: sizePerPage,\n                sortName: sortName,\n                sortOrder: sortOrder,\n                serchtext: searchText,\n                defaultSearchText: searchText\n      \n              });\n            }         \n          });\n        axios.post(AppConstants.API+'/child/getChildTodosStatusCount/'+this.props.data, tablefilterdata).then(res => {\n          if (res.data.Status === 'Success') {\n            this.setState({\n              totalDataSize: res.data.data,\n                serchText: searchText,\n                defaultSearchText: searchText\n            });\n          }         \n        });\n      }\n  \n    handleStatus(cell, row){\n        // console.log(\"celllllllllllllll166\",cell)\n        if(cell!=0){\n            return (<span className=\"mr-1 badge badge-success  p-1\">Complete</span>)\n        }else{\n            return (<span  className=\"mr-1 badge badge-warning p-1\">Pending</span>)\n        }\n    }\n    handleResource(cell,row){\n      // console.log(row.resourcesData)\n      let selectedValue = []\n      // cell.map((prgs,i)=>{\n          row.resourcesData.forEach(option => {\n              console.log(option)\n              // if(prgs == option._id){\n              //   if(prgs == option._id){\n                  var item ={}\n                  item[\"name\"] = option.title\n                  item[\"prg_id\"] = option._id\n                  selectedValue.push(item)\n              //   } \n              // }\n           })\n//   })\nreturn(\n  <span >{selectedValue.map((prg,i)=><span className=\"mr-1 badge badge-dark adjest-badge\">{prg.name}<br/></span>)}</span>\n)\n    }\n    handleChange(date) {\n        this.setState({\n          start_date: date\n          //end_date :date\n        });\n    }\n    // createCustomInsertButton = (onClick) => {\n    //     return (\n    //       <span> &nbsp; <Link to={\"/addprogram\"} className=\"btn btn-warning\" title=\"Add Program\"><MdAdd />Add Program</Link>&nbsp;&nbsp;{this.state.programs.length>0?\n    //         <Workbook filename=\"ExportProgram.xlsx\" element={<span className=\"btn btn-secondary editbtn\" title=\"Export Program\">Export Program</span>}>\n    //           <Workbook.Sheet data={this.state.programs} name=\"Sheet A\">\n    //           <Workbook.Column label=\"Title\" value=\"title\"/>\n    //           <Workbook.Column label=\"Status\" value=\"status\"/>\n    //           </Workbook.Sheet>\n    //         </Workbook>\n    //         :\"\"}</span>\n    //     );\n    // }\n    render(){\n        const options = {\n\n            insertText: \"New\",\n      \n            deleteText: 'Delete',\n      \n            saveText: 'Save',\n      \n            closeText: 'Close',\n      \n            insertBtn: this.createCustomInsertButton,\n          \n            page: this.state.currentPage,  // which page you want to show as default\n      \n            sizePerPageList: [ 5, 10, 20, 50], // you can change the dropdown list for size per page\n      \n            sizePerPage: this.state.sizePerPage,  // which size per page you want to locate as default\n      \n            pageStartIndex: 1, // where to start counting the pages\n      \n            paginationSize: 3,  // the pagination bar size.\n      \n            paginationShowsTotal: this.renderShowsTotal,  //this.renderShowsTotal- Accept bool or function\n\n            // paginationShowsTotal : this.state.child_todos.length,\n      \n            paginationPosition: 'bottom',  // default is bottom, top and both is all available\n      \n            onPageChange: this.onPageChange,\n      \n            onSizePerPageList: this.onSizePerPageList,\n      \n            onSortChange: this.onSortChange,\n      \n            onSearchChange: this.onSearchChange,\n      \n            insertModal: this.createCustomModal, \n      \n        }\n        return(\n                <Row className=\"mx-0\">\n                    <Card className=\"pt-0\">\n                        <CardHeader className=\"d-flex justify-content-between\">\n                            <Label for=\"examplePassword\" className=\"m-0\"><strong><img src={ParentIcon} /> Habits list</strong></Label>\n                        </CardHeader>\n                        <CardBody>\n                            <div>\n                            {/* <BootstrapTable data={this.state.child_todos_data}\n                            search={ true } pagination={ true } multiColumnSearch={ true } options={ options }\n                            // remote = { true } search={true} pagination={true} fetchInfo={ { dataTotalSize: this.state.totalDataSize } }multiColumnSearch={true} options={options}\n                            // insertRow\n                            > */}\n                              {/* <DatePicker\n                                name=\"start_date\"\n                                className=\"form-control\"\n                                //placeholderText=\"MM-DD-YYYY\"\n                                placeholderText={this.state.placeholderSD}\n                                //placeholderText=\"02/09/2019\"\n                                selected={this.state.start_date}\n                                selectsStart\n                                peekNextMonth\n                                showMonthDropdown\n                                showYearDropdown\n                                dropdownMode=\"select\"\n                                startDate={this.state.startDate}\n                                endDate={this.state.endDate}\n                                onChange={this.handleChange}\n                                autoComplete = \"off\"\n                                dateFormat={\"MM-dd-yyyy\"}\n                                // minDate={new Date().setFullYear(new Date().getFullYear() - 5)}   \n                                //   maxDate={new Date()}   \n                                  onKeyDown={(e) =>e.preventDefault()}\n                                className=\"form-control\" /> */}\n                                 <BootstrapTable data={this.state.children} remote = { true } \n                                 search={true} \n                                 pagination={true} fetchInfo={ { dataTotalSize: this.state.totalDataSize } }\n                                 multiColumnSearch={true} \n                                 options={options}\n                                //  insertRow\n                                >\n                                    <TableHeaderColumn dataField='todo_id' isKey={true} searchable={false} dataSort={true} hidden={true}>ID</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='title'  dataSort={true} width={'15%'}>Title</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='program'  dataSort={true} width={'15%'}>Program</TableHeaderColumn>\n                                    {/* <TableHeaderColumn dataField='resources_name' dataFormat={this.handleResource.bind(this)} dataSort={true} width={'20%'}>Resources</TableHeaderColumn> */}\n                                    <TableHeaderColumn dataField='startDate'  dataSort={true} width={'15%'} >Start Date</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='endDate'  dataSort={true} width={'15%'} >End Date</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='resourcesData' dataFormat={this.handleResource.bind(this)}   dataSort={true} width={'10%'} >Resources</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='pendingData' width={'10%'} dataSort={true} dataFormat={this.handleStatus.bind(this)}>Status</TableHeaderColumn>\n                                    {/* <TableHeaderColumn dataField='actions' width={'20%'} dataFormat={this.handleActions.bind(this)} export={false}>Actions</TableHeaderColumn> */}\n                            </BootstrapTable>\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Row>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(mapStateToProps, {})(ViewChildTodos);"]},"metadata":{},"sourceType":"module"}