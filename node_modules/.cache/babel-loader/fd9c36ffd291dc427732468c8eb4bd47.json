{"ast":null,"code":"import _defineProperty from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pradeepkumar/Downloads/meadmin/src/components/Help/addHelpSuggestion.js\";\nimport React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\n\nvar AddProgram = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddProgram, _React$Component);\n\n  function AddProgram() {\n    var _this;\n\n    _classCallCheck(this, AddProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProgram).call(this));\n    _this.state = {\n      question: \"\",\n      status: true,\n      answers: \"\",\n      loading: \"\",\n      errors: {},\n      question_error: false,\n      answers_error: false,\n      status_error: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddProgram, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      if (e.target.name == \"question\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            question_error: false\n          });\n        } else {\n          this.setState({\n            question_error: true\n          });\n        }\n      }\n\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var errors = {};\n      var formIsValid = true;\n\n      if (!this.state.answers) {\n        formIsValid = false;\n        errors[\"answers\"] = \"Please enter answers\";\n        ReactDOM.findDOMNode(this.refs.answers).focus();\n      }\n\n      if (!this.state.question) {\n        formIsValid = false;\n        errors[\"question\"] = \"Please enter question\";\n        ReactDOM.findDOMNode(this.refs.question).focus();\n      }\n\n      this.setState({\n        errors: errors,\n        question_error: true,\n        answers_error: true // status_error : true\n\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleStatusChange\",\n    value: function handleStatusChange(checked) {\n      this.setState({\n        status: checked\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var formval = {};\n\n      if (this.handleValidation()) {\n        this.setState({\n          loading: 1\n        });\n        formval = {\n          'question': this.state.question,\n          'answers': this.state.answers,\n          'status': this.state.status\n        };\n        axios.post(AppConstants.API + '/helpQues/addHelpSuggestion', formval).then(function (res) {\n          // console.log(res)\n          if (res.data.Status == \"Success\") {\n            setTimeout(function (e) {\n              _this2.props.history.push('/Allhelpsuggestions');\n            }, 2000);\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-success fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          } else {\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-danger fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          }\n        });\n      } // console.log(this.state.title,this.state.status)\n\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var element = document.getElementById(\"navItem-Help Sugesstions-0\");\n      element.classList.add(\"active\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Page, {\n        title: \"Add Help Suggestion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cst-breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/Allhelpsuggestions',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, \"All Help Suggestions\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"Add Help Suggestion\")), /*#__PURE__*/React.createElement(ReactTitle, {\n        title: \"Add Help Suggestion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"addchild\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }\n      }, \"Question\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 49\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"question\",\n        placeholder: \"Question\",\n        value: this.state.question,\n        onChange: this.handleInputChange,\n        ref: \"question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 45\n        }\n      }), this.state.question_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 82\n        }\n      }, this.state.errors[\"question\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 41\n        }\n      }, \"Answers\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 48\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"textarea\",\n        name: \"answers\",\n        placeholder: \"Answers\",\n        value: this.state.answers,\n        onChange: this.handleInputChange,\n        ref: \"answers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }\n      }), this.state.answers_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 81\n        }\n      }, this.state.errors[\"answers\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 41\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        onChange: this.handleStatusChange.bind(this),\n        checked: this.state.status,\n        uncheckedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"150px\",\n            color: \"#000\",\n            fontWeight: \"bold\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 45\n          }\n        }, \"Inactive\"),\n        checkedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"180px\",\n            fontWeight: \"bold\",\n            color: \"#000\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 45\n          }\n        }, \"Active\"),\n        onColor: \"#45b649\",\n        offColor: \"#ffd700\",\n        className: \"react-switch\",\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n        activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n        height: 20,\n        width: 48,\n        handleDiameter: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 45\n        }\n      }, \"Save    \", /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 119\n        }\n      }, \"               \", /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 232\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), \"\\xA0\", /*#__PURE__*/React.createElement(Link, {\n        to: \"/Allhelpsuggestions\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 45\n        }\n      }, \"\\xA0Cancel\"))), this.state.errMsg))))));\n    }\n  }]);\n\n  return AddProgram;\n}(React.Component);\n\nAddProgram.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(AddProgram);","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/meadmin/src/components/Help/addHelpSuggestion.js"],"names":["React","Page","axios","AppConstants","ReactTitle","Link","Row","Col","Card","CardBody","Button","Form","FormGroup","Label","Input","Loading","PropTypes","connect","ReactDOM","Switch","AddProgram","state","question","status","answers","loading","errors","question_error","answers_error","status_error","handleSubmit","bind","handleInputChange","e","target","name","value","setState","formIsValid","findDOMNode","refs","focus","checked","preventDefault","formval","handleValidation","post","API","then","res","data","Status","setTimeout","props","history","push","errMsg","msg","element","document","getElementById","classList","add","color","handleStatusChange","display","justifyContent","alignItems","height","fontSize","width","fontWeight","paddingRight","size","offset","Component","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport  { Link } from 'react-router-dom';\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n  } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\n\nclass AddProgram extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            question : \"\",\n            status : true,\n            answers:\"\",\n            loading : \"\",\n            errors : {},\n            question_error : false,\n            answers_error:false,\n            status_error : false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    handleInputChange(e){\n        if(e.target.name == \"question\"){\n            if(e.target.value != \"\"){\n                this.setState({question_error:false})\n            }else{\n                this.setState({question_error:true})\n            }\n        }\n        this.setState({[e.target.name]:e.target.value})\n    }\n    handleValidation(){\n        let errors = {};\n        let formIsValid = true;\n        if (!this.state.answers){\n            formIsValid = false;\n            errors[\"answers\"] = \"Please enter answers\";\n            ReactDOM.findDOMNode(this.refs.answers).focus();\n        }\n        if (!this.state.question){\n            formIsValid = false;\n            errors[\"question\"] = \"Please enter question\";\n            ReactDOM.findDOMNode(this.refs.question).focus();\n        }\n        \n        this.setState({\n            errors: errors,\n            question_error : true,\n            answers_error : true\n            // status_error : true\n        });\n        return formIsValid;\n    }\n    handleStatusChange(checked){\n        this.setState({status : checked})\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        let formval={}\n        if(this.handleValidation()){\n            this.setState({loading:1});\n            formval = {\n                'question': this.state.question,\n                'answers':this.state.answers,\n                'status': this.state.status,\n            }\n            axios.post(AppConstants.API+'/helpQues/addHelpSuggestion',formval)\n                .then(res => { \n                    // console.log(res)\n                    if(res.data.Status == \"Success\"){\n                        setTimeout((e) => {\n                            this.props.history.push('/Allhelpsuggestions');\n                        }, 2000);\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-success fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n                    else{\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-danger fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n            })\n        }\n        // console.log(this.state.title,this.state.status)\n    }\n    componentDidMount(){\n\n        \n        var element = document.getElementById(\"navItem-Help Sugesstions-0\");\n        element.classList.add(\"active\");\n    }\n    render(){\n        return(\n            <Page title=\"Add Help Suggestion\">\n                <ul className=\"cst-breadcrumb\">\n                    <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                    <li><Link to={'/Allhelpsuggestions'}>All Help Suggestions</Link></li>\n                    <li>Add Help Suggestion</li>\n                </ul>\n                <ReactTitle title=\"Add Help Suggestion\"/>\n                <Row>\n                    <Col xl={12} lg={12} md={12}>\n                        <Card>\n                            <CardBody>\n                                <Form name=\"addchild\" onSubmit= { this.handleSubmit }>\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                        Question<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"question\"\n                                            placeholder=\"Question\"                      \n                                            value={this.state.question}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"question\"           \n                                            />\n                                            {this.state.question_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"question\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                        Answers<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"textarea\"\n                                            name=\"answers\"\n                                            placeholder=\"Answers\"                      \n                                            value={this.state.answers}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"answers\"           \n                                            />\n                                            {this.state.answers_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"answers\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"status\" sm={2}>\n                                           Status\n                                        </Label>\n                                        <Col sm={10}>\n                                        <Switch onChange={this.handleStatusChange.bind(this)} checked={this.state.status} \n                                        uncheckedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"150px\",\n                                                color: \"#000\",\n                                                fontWeight: \"bold\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Inactive\n                                            </div>\n                                            }\n                                            checkedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"180px\",\n                                                fontWeight: \"bold\",\n                                                color: \"#000\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Active\n                                            </div>\n                                            }\n                                            onColor = \"#45b649\"\n                                            offColor = \"#ffd700\"\n                                            className=\"react-switch\"\n                                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                                            height={20}\n                                            width={48}\n                                            handleDiameter={30}\n                                        />\n                                         \n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup check row>\n                                        <Col sm={{ size: 10, offset: 2 }}>\n                                            <Button className=\"btn btn-primary\" onClick={ this.handleSubmit }>Save    <div style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div\">               <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div></div></Button>&nbsp;\n                                            <Link to={\"/Allhelpsuggestions\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link>\n                                        </Col>\n                                    </FormGroup>\n                                    {this.state.errMsg}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Page>\n        )\n    }\n}\nAddProgram.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport  default connect(mapStateToProps, {})(AddProgram);"]},"metadata":{},"sourceType":"module"}