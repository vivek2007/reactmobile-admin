{"ast":null,"code":"import _defineProperty from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/FeelingJournal/fJDataTables.js\";\nimport React from 'react';\nimport { Row, CardBody, Card, Col, FormGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Page from 'components/Page';\nimport AppConstants from 'AppConstants';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport moment from \"moment\";\nimport placeholderimg from '../../assets/img/placeholder.png';\nimport { MdDoneAll, MdQuestionAnswer } from 'react-icons/md';\nimport { FiUser, FiArrowRight } from \"react-icons/fi\";\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nvar products = [];\n\nvar BSTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(BSTable, _React$Component);\n\n  function BSTable() {\n    _classCallCheck(this, BSTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BSTable).apply(this, arguments));\n  }\n\n  _createClass(BSTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.data) {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, this.props.data.map(function (result, id) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"expend-block\",\n            isKey: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }\n          }, \"From my point of view, here is what happened today\"), /*#__PURE__*/React.createElement(\"p\", {\n            dataField: \"fieldA\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }\n          }, result.fieldA), /*#__PURE__*/React.createElement(\"h3\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }\n          }, \"The situation affected (i.e. myself, parents, friends, parole officer)\"), /*#__PURE__*/React.createElement(\"p\", {\n            dataField: \"fieldB\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }\n          }, result.fieldB), /*#__PURE__*/React.createElement(\"h3\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }\n          }, \"This situation made me feel (i.e. angry, frustrated, left out, confused)\"), /*#__PURE__*/React.createElement(\"p\", {\n            dataField: \"fieldC\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }\n          }, result.fieldC), /*#__PURE__*/React.createElement(\"h3\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }\n          }, \"Do you have any other feeling?\"), /*#__PURE__*/React.createElement(\"p\", {\n            dataField: \"fieldD\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }\n          }, result.fieldD));\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, \"?\");\n      }\n    }\n  }]);\n\n  return BSTable;\n}(React.Component);\n\nvar ExpandRow = /*#__PURE__*/function (_React$Component2) {\n  _inherits(ExpandRow, _React$Component2);\n\n  function ExpandRow(props) {\n    var _this2;\n\n    _classCallCheck(this, ExpandRow);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ExpandRow).call(this, props));\n    _this2.state = {\n      feelingJournals: [],\n      profile_image: '',\n      name: '',\n      totalDataSize: 0,\n      sizePerPage: 10,\n      currentPage: 1,\n      sortName: '',\n      sortOrder: '',\n      searchText: '',\n      start_date: new Date()\n    };\n    _this2.onPageChange = _this2.onPageChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onSizePerPageList = _this2.onSizePerPageList.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onSortChange = _this2.onSortChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onSearchChange = _this2.onSearchChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.renderShowsTotal = _this2.renderShowsTotal.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(ExpandRow, [{\n    key: \"renderShowsTotal\",\n    value: function renderShowsTotal(start, to, paginationShowsTotal) {\n      console.log(\"start\", start, \"to\", to, \"paginationShowsTotal\", paginationShowsTotal);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }, \"Showing rows \", start, \" to \", to, \" of \", paginationShowsTotal);\n    }\n  }, {\n    key: \"isExpandableRow\",\n    value: function isExpandableRow(row) {\n      if (row.feelingJournal_id) return true;else return false;\n    }\n  }, {\n    key: \"expandComponent\",\n    value: function expandComponent(row) {\n      return /*#__PURE__*/React.createElement(BSTable, {\n        data: row.expand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"onSizePerPageList\",\n    value: function onSizePerPageList(sizePerPage) {\n      var page = 1;\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, this.state.start_date);\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(page, sizePerPage) {\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText, this.state.start_date);\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(sortName, sortOrder) {\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText, this.state.start_date);\n    }\n  }, {\n    key: \"onSearchChange\",\n    value: function onSearchChange(searchText, colInfos, multiColumnSearch) {\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else {\n        searchText = '';\n      }\n\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText, this.state.start_date);\n    }\n  }, {\n    key: \"handleDate\",\n    value: function handleDate(cell, row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 8\n        }\n      }, \" \", /*#__PURE__*/React.createElement(FiUser, {\n        className: \"cs-lef\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 14\n        }\n      }), \" \", moment(row.created_date).format(\"LLL\"), \" \");\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, date);\n      this.setState({\n        start_date: date //end_date :date\n\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText, this.state.start_date);\n      var that = this; // fetch(AppConstants.API + '/child/getChildFeelingJournals/' + this.props.data).then(function (res) {\n      //     //console.log(res);\n      //     if (res.status == 200) {\n      //       return res.json();\n      //     }\n      //   })\n      //   .then(function (data) {\n      //       console.log(\"data.data\",data.data)\n      //     that.setState({\n      //       profile_image:data.data.profile_image,\n      //     })\n      //     if(data.data.feelingJournalsData.length>0){\n      //         that.addProducts(data.data.feelingJournalsData.length);\n      //       }\n      //   })\n    }\n  }, {\n    key: \"addProducts\",\n    value: function addProducts(quantity) {\n      products = [];\n      var startId = products.length;\n\n      if (this.state.thermometerAns.length != '') {\n        this.state.thermometerAns.map(function (res, i) {\n          res.feelingJournalsData.map(function (item, i) {\n            // result.map((item,index)=>{\n            var data1 = {};\n            data1[\"feelingJournal_id\"] = res._id;\n            data1[\"created_date\"] = item.created_date;\n            data1[\"expand\"] = [{\n              fieldA: item.happennd_today,\n              fieldB: item.situation_affected,\n              fieldC: item.situation_made_me_feel,\n              fieldD: item.any_other_feeling\n            }];\n            products.push(data1); // })\n          });\n        });\n      }\n\n      this.setState({\n        products: products\n      });\n    }\n  }, {\n    key: \"updateProvidersList\",\n    value: function updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText, date) {\n      var _this3 = this;\n\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else if (this.state.searchText && this.state.searchText !== \"\") {\n        searchText = this.state.searchText;\n      } else {\n        searchText = '';\n      }\n\n      console.log(\"date\", date);\n      var tablefilterdata = {\n        page: page,\n        sizeperpage: sizePerPage,\n        sortname: sortName,\n        sortorder: sortOrder,\n        serchtext: searchText,\n        defaultSearchText: searchText,\n        date: date\n      };\n      axios.post(AppConstants.API + '/child/getChildFeelingJournals/' + this.props.data, tablefilterdata).then(function (res) {\n        console.log(\"res.data.data202\", res.data.data);\n\n        if (res.data.Status === 'Success') {\n          _this3.setState({\n            thermometerAns: res.data.data,\n            currentPage: page,\n            sizePerPage: sizePerPage,\n            sortName: sortName,\n            sortOrder: sortOrder,\n            serchtext: searchText,\n            defaultSearchText: searchText\n          });\n        }\n\n        if (res.data.data.length != undefined) {\n          _this3.addProducts(res.data.data.length); // this.setState({\n          //   paginationShowsTotal: [res.data.data.length]\n          // });\n\n        }\n      });\n      axios.post(AppConstants.API + '/child/getChildFeelingJournalsCount/' + this.props.data, tablefilterdata).then(function (res) {\n        if (res.data.Status === 'Success') {\n          _this3.setState({\n            totalDataSize: res.data.data,\n            serchText: searchText,\n            defaultSearchText: searchText\n          });\n        }\n      }); // this.setState({\n      //   paginationShowsTotal: [this.state.thermometerAns.length]\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var image;\n\n      if (this.state.profile_image == '' || this.state.profile_image == undefined) {\n        image = placeholderimg;\n      } else {\n        image = this.state.profile_image;\n      }\n\n      var options = {\n        //   expandRowBgColor: 'rgb(242, 255, 163)',\n        insertText: \"New\",\n        deleteText: 'Delete',\n        saveText: 'Save',\n        closeText: 'Close',\n        insertBtn: this.createCustomInsertButton,\n        page: this.state.currentPage,\n        // which page you want to show as default\n        sizePerPageList: [5, 10, 20, 50],\n        // you can change the dropdown list for size per page\n        sizePerPage: this.state.sizePerPage,\n        // which size per page you want to locate as default\n        pageStartIndex: 1,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        // paginationShowsTotal: this.renderShowsTotal,  //this.renderShowsTotal- Accept bool or function\n        paginationPosition: 'bottom',\n        // default is bottom, top and both is all available\n        onPageChange: this.onPageChange,\n        onSizePerPageList: this.onSizePerPageList,\n        onSortChange: this.onSortChange,\n        onSearchChange: this.onSearchChange,\n        insertModal: this.createCustomModal,\n        paginationShowsTotal: this.renderShowsTotal\n      };\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"pt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, (_React$createElement = {\n        name: \"start_date\",\n        className: \"form-control\" //placeholderText=\"MM-DD-YYYY\"\n        ,\n        placeholderText: this.state.placeholderSD //placeholderText=\"02/09/2019\"\n        ,\n        selected: this.state.start_date,\n        selectsStart: true,\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        dateFormat: \"MM-dd-yyyy\" // minDate={new Date().setFullYear(new Date().getFullYear() - 5)}   \n        //   maxDate={new Date()}   \n        ,\n        onKeyDown: function onKeyDown(e) {\n          return e.preventDefault();\n        }\n      }, _defineProperty(_React$createElement, \"className\", \"form-control\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 35\n      }), _React$createElement)))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(BootstrapTable, {\n        className: \"toogle-data-tables\",\n        data: products,\n        pagination: true,\n        multiColumnSearch: true,\n        remote: true,\n        options: options,\n        expandableRow: this.isExpandableRow,\n        expandComponent: this.expandComponent,\n        fetchInfo: {\n          dataTotalSize: this.state.totalDataSize\n        },\n        expandColumnOptions: {\n          expandColumnVisible: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"feelingJournal_id\",\n        isKey: true,\n        searchable: false,\n        dataSort: true,\n        hidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 37\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"created_date\",\n        dataFormat: this.handleDate.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MdQuestionAnswer, {\n        className: \"th-lef-icn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 121\n        }\n      }), \"\\xA0 \\xA0 Feeling Journals\")))))));\n    }\n  }]);\n\n  return ExpandRow;\n}(React.Component);\n\nexport { ExpandRow as default };","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/FeelingJournal/fJDataTables.js"],"names":["React","Row","CardBody","Card","Col","FormGroup","BootstrapTable","TableHeaderColumn","Page","AppConstants","moment","placeholderimg","MdDoneAll","MdQuestionAnswer","FiUser","FiArrowRight","axios","DatePicker","products","BSTable","props","data","map","result","id","fieldA","fieldB","fieldC","fieldD","Component","ExpandRow","state","feelingJournals","profile_image","name","totalDataSize","sizePerPage","currentPage","sortName","sortOrder","searchText","start_date","Date","onPageChange","bind","onSizePerPageList","onSortChange","onSearchChange","renderShowsTotal","handleChange","start","to","paginationShowsTotal","console","log","row","feelingJournal_id","expand","page","updateProvidersList","defaultSearchText","colInfos","multiColumnSearch","cell","created_date","format","date","setState","that","quantity","startId","length","thermometerAns","res","i","feelingJournalsData","item","data1","_id","happennd_today","situation_affected","situation_made_me_feel","any_other_feeling","push","tablefilterdata","sizeperpage","sortname","sortorder","serchtext","post","API","then","Status","undefined","addProducts","serchText","image","options","insertText","deleteText","saveText","closeText","insertBtn","createCustomInsertButton","sizePerPageList","pageStartIndex","paginationSize","paginationPosition","insertModal","createCustomModal","placeholderSD","startDate","endDate","e","preventDefault","isExpandableRow","expandComponent","dataTotalSize","expandColumnVisible","handleDate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Row,\n  CardBody,\n  Card, \n  Col,\n  FormGroup,\n} from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Page from 'components/Page';\nimport AppConstants from 'AppConstants';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport moment from \"moment\";\nimport placeholderimg from '../../assets/img/placeholder.png';\nimport { MdDoneAll, MdQuestionAnswer} from 'react-icons/md';\nimport { FiUser, FiArrowRight } from \"react-icons/fi\";\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar products = [];\nclass BSTable extends React.Component {\n  render() {\n    if (this.props.data) {\n        return(\n            <React.Fragment>\n                {this.props.data.map((result,id)=>{\n                return (\n                    <div className=\"expend-block\" isKey={ true }>\n                        <h3>From my point of view, here is what happened today</h3>\n                        <p  dataField='fieldA'>{result.fieldA}</p> \n                        <h3>The situation affected (i.e. myself, parents, friends, parole officer)</h3>\n                        <p  dataField='fieldB'>{result.fieldB}</p> \n                        <h3>This situation made me feel (i.e. angry, frustrated, left out, confused)</h3>\n                        <p  dataField='fieldC'>{result.fieldC}</p> \n                        <h3>Do you have any other feeling?</h3>\n                        <p  dataField='fieldD'>{result.fieldD}</p> \n                    </div>\n                    )})}\n            </React.Fragment>)\n    } else {\n      return (<p>?</p>);\n    }\n  }\n}\n\nexport default class ExpandRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        feelingJournals:[],\n        profile_image:'',\n        name:'',\n        totalDataSize: 0,\n        sizePerPage: 10,\n        currentPage: 1,\n        sortName: '',\n        sortOrder: '',\n        searchText: '',\n        start_date:new Date()\n    }\n    this.onPageChange = this.onPageChange.bind(this);\n    this.onSizePerPageList = this.onSizePerPageList.bind(this);\n    this.onSortChange = this.onSortChange.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this); \n    this.renderShowsTotal = this.renderShowsTotal.bind(this); \n    this.handleChange = this.handleChange.bind(this); \n    \n  }\n\n  renderShowsTotal(start, to, paginationShowsTotal) {\n    console.log(\"start\",start,\"to\",to,\"paginationShowsTotal\",paginationShowsTotal)\n    return (\n    <span >\n       Showing rows { start } to { to } of { paginationShowsTotal }\n    </span>\n    );\n}\n  \n  isExpandableRow(row) {\n    if (row.feelingJournal_id) return true;\n    else return false;\n  }\n  expandComponent(row) {\n    return (\n      <BSTable data={ row.expand } />\n    );\n  }\n  onSizePerPageList(sizePerPage) {\n    let page = 1;\n     this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,this.state.start_date);\n  }\n  onPageChange(page, sizePerPage) {\n     this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText,this.state.start_date);\n  }\n  onSortChange(sortName, sortOrder) { \n      let page = 1;\n       this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText,this.state.start_date);\n  }\n  onSearchChange(searchText, colInfos, multiColumnSearch) {\n    if(searchText && searchText !== \"\") {\n    searchText = searchText;\n    }else  {  \n    searchText = '';\n    }\n      let page = 1;\n       this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText,this.state.start_date);\n  }\n  \n  handleDate(cell,row){\n    return(\n       <div> <FiUser className=\"cs-lef\" /> {moment(row.created_date).format(\"LLL\") } </div>\n    )\n }\n handleChange(date) {\n  let page = 1;\n  this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,date);\n  this.setState({\n    start_date: date\n    //end_date :date\n  });\n  \n\n}\n  componentDidMount(){\n    this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText,this.state.start_date);\n    const that = this;\n    // fetch(AppConstants.API + '/child/getChildFeelingJournals/' + this.props.data).then(function (res) {\n    //     //console.log(res);\n    //     if (res.status == 200) {\n    //       return res.json();\n    //     }\n    //   })\n    //   .then(function (data) {\n    //       console.log(\"data.data\",data.data)\n    //     that.setState({\n    //       profile_image:data.data.profile_image,\n    //     })\n    //     if(data.data.feelingJournalsData.length>0){\n    //         that.addProducts(data.data.feelingJournalsData.length);\n    //       }\n    //   })\n  }\n\n  addProducts(quantity) {\n    products = [];\n    const startId = products.length;\n    if(this.state.thermometerAns.length !='') {\n      this.state.thermometerAns.map((res,i)=>{\n        res.feelingJournalsData.map((item,i)=>{\n          // result.map((item,index)=>{\n            var data1 = {}\n              data1[\"feelingJournal_id\"]=res._id\n              data1[\"created_date\"]=item.created_date\n              data1[\"expand\"]=[\n                  {\n                      fieldA:item.happennd_today,\n                      fieldB: item.situation_affected,\n                      fieldC:item.situation_made_me_feel ,\n                      fieldD: item.any_other_feeling\n                  }\n              ]\n              products.push(data1)\n          // })\n        })\n      })\n    }\n    this.setState({products:products})\n  }\n\n  updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText,date){\n    if(searchText && searchText !== \"\") {\n      searchText = searchText;\n    }else if(this.state.searchText && this.state.searchText !== \"\") {\n      searchText = this.state.searchText;\n    }else {\n      searchText = '';\n    }\n    console.log(\"date\",date)\n    let tablefilterdata = {\n      page: page,\n      sizeperpage: sizePerPage,\n      sortname: sortName,\n      sortorder: sortOrder,\n      serchtext: searchText,\n      defaultSearchText: searchText,\n      date:date\n    };\n    axios.post(AppConstants.API+ '/child/getChildFeelingJournals/' + this.props.data, tablefilterdata).then(res => {\n      console.log(\"res.data.data202\",res.data.data)\n        if (res.data.Status === 'Success') {\n          this.setState({\n            thermometerAns: res.data.data,\n            currentPage: page,\n            sizePerPage: sizePerPage,\n            sortName: sortName,\n            sortOrder: sortOrder,\n            serchtext: searchText,\n            defaultSearchText: searchText\n  \n          });\n        }    \n        if(res.data.data.length!=undefined){\n            this.addProducts(res.data.data.length);\n            // this.setState({\n            //   paginationShowsTotal: [res.data.data.length]\n            // });\n        }     \n      });\n    axios.post(AppConstants.API+'/child/getChildFeelingJournalsCount/' + this.props.data, tablefilterdata).then(res => {\n      if (res.data.Status === 'Success') {\n        this.setState({\n          totalDataSize: res.data.data,\n            serchText: searchText,\n            defaultSearchText: searchText\n        });\n      }         \n    });\n    // this.setState({\n    //   paginationShowsTotal: [this.state.thermometerAns.length]\n    // });\n  }\n  render() {\n    let image;\n    if (this.state.profile_image == '' || this.state.profile_image == undefined) {\n        image = placeholderimg;\n    }\n    else {\n        image =  this.state.profile_image\n    }\n    const options = {\n    //   expandRowBgColor: 'rgb(242, 255, 163)',\n    insertText: \"New\",\n      \n    deleteText: 'Delete',\n\n    saveText: 'Save',\n\n    closeText: 'Close',\n\n    insertBtn: this.createCustomInsertButton,\n  \n    page: this.state.currentPage,  // which page you want to show as default\n\n    sizePerPageList: [ 5, 10, 20, 50], // you can change the dropdown list for size per page\n\n    sizePerPage: this.state.sizePerPage,  // which size per page you want to locate as default\n\n    pageStartIndex: 1, // where to start counting the pages\n\n    paginationSize: 3,  // the pagination bar size.\n\n    // paginationShowsTotal: this.renderShowsTotal,  //this.renderShowsTotal- Accept bool or function\n\n    paginationPosition: 'bottom',  // default is bottom, top and both is all available\n\n    onPageChange: this.onPageChange,\n\n    onSizePerPageList: this.onSizePerPageList,\n\n    onSortChange: this.onSortChange,\n\n    onSearchChange: this.onSearchChange,\n\n    insertModal: this.createCustomModal, \n\n    paginationShowsTotal: this.renderShowsTotal\n\n    };\n        return (\n            \n                    <Row>\n                      <Col xl={12} lg={12} md={12}>\n                        <Card className=\"pt-0\">\n                            <CardBody>\n                                <div className=\"row\">\n                                  <div className=\"card-body float-right\">\n                                  <DatePicker\n                                  name=\"start_date\"\n                                  className=\"form-control\"\n                                  //placeholderText=\"MM-DD-YYYY\"\n                                  placeholderText={this.state.placeholderSD}\n                                  //placeholderText=\"02/09/2019\"\n                                  selected={this.state.start_date}\n                                  selectsStart\n                                  peekNextMonth\n                                  showMonthDropdown\n                                  showYearDropdown\n                                  dropdownMode=\"select\"\n                                  startDate={this.state.startDate}\n                                  endDate={this.state.endDate}\n                                  onChange={this.handleChange}\n                                  autoComplete = \"off\"\n                                  dateFormat={\"MM-dd-yyyy\"}\n                                  // minDate={new Date().setFullYear(new Date().getFullYear() - 5)}   \n                                  //   maxDate={new Date()}   \n                                    onKeyDown={(e) =>e.preventDefault()}\n                                  className=\"form-control\" />\n                                </div>\n                                  </div>\n                              \n                                  \n                                <div>\n                                {/* <BootstrapTable data={this.state.children} remote = { true } \n                                 search={true} \n                                 pagination={true} fetchInfo={ { dataTotalSize: this.state.totalDataSize } }\n                                 multiColumnSearch={true} \n                                 options={options}\n                                //  insertRow\n                                >  */}\n                                <BootstrapTable className=\"toogle-data-tables\" data={products} \n                                pagination={ true } multiColumnSearch={ true } remote = { true } \n                                options={ options }\n                                expandableRow={ this.isExpandableRow }\n                                expandComponent={ this.expandComponent }\n                                fetchInfo={ { dataTotalSize: this.state.totalDataSize } }\n                                expandColumnOptions={ { expandColumnVisible: true } }>\n                                    <TableHeaderColumn dataField='feelingJournal_id' isKey={true} searchable={false} dataSort={true} hidden={true}>ID</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='created_date' dataFormat={this.handleDate.bind(this)}><MdQuestionAnswer className=\"th-lef-icn\" />&nbsp; &nbsp; Feeling Journals</TableHeaderColumn>\n                                </BootstrapTable>\n                                </div>\n                            </CardBody>\n                        </Card>\n                        </Col>\n                    </Row>\n             \n              )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}