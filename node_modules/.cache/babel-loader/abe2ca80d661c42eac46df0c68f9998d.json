{"ast":null,"code":"import _regeneratorRuntime from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GET_ERRORS, SET_CURRENT_USER, GET_USER, UPDATE_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport AppConstants from 'AppConstants';\nimport axios from 'axios';\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    console.log(\"user\", user);\n    axios.post(AppConstants.API + \"/users/login\", user).then(function (res) {\n      console.log(\"user111\", res);\n\n      if (res.data.Status != 'Failed') {\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data\n        });\n      } else {\n        var token = res.data.token;\n        localStorage.setItem('jwtToken', token);\n        setAuthToken(token);\n        var decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n      }\n    });\n    /* .catch(err => {\n        console.log(err);\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }); \n    });*/\n  };\n};\nexport var getProfile = function getProfile(id, history) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //console.log(id);\n              fetch(AppConstants.API + '/users/profile/' + id).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                // console.log(\" User Details \", data.data);\n                if (data.Status == \"Failed\") {\n                  dispatch({\n                    type: GET_ERRORS,\n                    payload: data.msg\n                  });\n                } else {\n                  // console.log(data.user);\n                  dispatch({\n                    type: GET_USER,\n                    payload: data.data\n                  });\n                }\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var updateProfile = function updateProfile(formData, config, history) {\n  return function (dispatch) {\n    axios.post(AppConstants.API + '/users/updateAdminprofile', formData, config).then(function (res) {\n      if (res.data.status == 'success') {\n        var update_data = res.data;\n        dispatch(updateCurrentUser(update_data));\n        history.push(AppConstants.STAGADMIN + '/viewadminprofile');\n      } else {\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data.msg\n        });\n      }\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport var logoutUser = function logoutUser(history) {\n  return function (dispatch) {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    window.location.href = '/login'; //history.push('/');\n  };\n}; //Update admin details\n\nexport var updateCurrentUser = function updateCurrentUser(update_data) {\n  //console.log(update_data);\n  return {\n    type: UPDATE_USER,\n    payload: update_data\n  };\n};","map":{"version":3,"sources":["/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/actions/authentication.js"],"names":["GET_ERRORS","SET_CURRENT_USER","GET_USER","UPDATE_USER","setAuthToken","jwt_decode","AppConstants","axios","loginUser","user","dispatch","console","log","post","API","then","res","data","Status","type","payload","token","localStorage","setItem","decoded","setCurrentUser","getProfile","id","history","fetch","response","json","msg","updateProfile","formData","config","status","update_data","updateCurrentUser","push","STAGADMIN","logoutUser","removeItem","window","location","href"],"mappings":"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","sourcesContent":["import { GET_ERRORS, SET_CURRENT_USER,GET_USER,UPDATE_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport AppConstants from 'AppConstants';\nimport axios from 'axios';\n\nexport const loginUser = (user) => dispatch => {\n    console.log(\"user\",user)\n    axios.post(AppConstants.API+\"/users/login\", user)\n            .then(res => {\n                console.log(\"user111\",res)\n                if(res.data.Status != 'Failed' ){\n                    dispatch({\n                        type: GET_ERRORS,\n                        payload: res.data\n                    }); \n                }else{\n                    const { token } = res.data;\n                    localStorage.setItem('jwtToken', token);\n                    setAuthToken(token);\n                    const decoded = jwt_decode(token);\n                    dispatch(setCurrentUser(decoded));\n                }\n            })\n            /* .catch(err => {\n                console.log(err);\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                }); \n            });*/\n}\n\nexport const getProfile = (id,history )=> async dispatch =>\n{\n   //console.log(id);\n    fetch(AppConstants.API+'/users/profile/'+id).then(response => response.json())\n    .then(data => {\n     // console.log(\" User Details \", data.data);\n        if(data.Status == \"Failed\" )\n        {\n            dispatch({\n                type: GET_ERRORS,\n                payload: data.msg\n            });\n        }\n        else\n        {\n           // console.log(data.user);\n            dispatch({\n                type: GET_USER,\n                payload: data.data\n            });\n        }\t  \n    });\n};\n\nexport const updateProfile = (formData,config,history) => dispatch => {\n    axios.post(AppConstants.API+'/users/updateAdminprofile', formData,config).then(res => \n    {\n        if(res.data.status == 'success'){\n            const update_data = res.data;\n            dispatch(updateCurrentUser(update_data));              \n            history.push(AppConstants.STAGADMIN+'/viewadminprofile')\n        }else\n        {\n            dispatch({\n                type: GET_ERRORS,\n                payload: res.data.msg\n            });\n        }       \n       \n    });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    window.location.href = '/login'\n    //history.push('/');\n}\n\n//Update admin details\nexport const updateCurrentUser = update_data => {\n\t//console.log(update_data);\n    return {\n        type: UPDATE_USER,\n        payload: update_data\n    }\n}"]},"metadata":{},"sourceType":"module"}