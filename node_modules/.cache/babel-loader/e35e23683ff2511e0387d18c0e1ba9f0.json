{"ast":null,"code":"import _defineProperty from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/ThermometerQues/thermoQues.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport Page from 'components/Page';\nimport { Card, CardBody, Row, UncontrolledTooltip } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { MdRemoveRedEye, MdAdd, MdEdit, MdDelete } from 'react-icons/md';\nimport swal from 'sweetalert';\nimport { connect } from 'react-redux';\nimport Workbook from 'react-xlsx-workbook';\n\nvar ThermoQues = /*#__PURE__*/function (_React$Component) {\n  _inherits(ThermoQues, _React$Component);\n\n  function ThermoQues() {\n    var _this;\n\n    _classCallCheck(this, ThermoQues);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThermoQues).call(this));\n\n    _this.createCustomInsertButton = function (onClick) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/addthermoques\",\n        className: \"btn btn-warning\",\n        title: \"Add Question\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MdAdd, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 94\n        }\n      }), \"Add Question\"), \"\\xA0\\xA0\", _this.state.questions.length > 0 ? /*#__PURE__*/React.createElement(Workbook, {\n        filename: \"ExportQuestions.xlsx\",\n        element: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"btn btn-secondary editbtn\",\n          title: \"Export Questions\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 72\n          }\n        }, \"Export Questions\"),\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Workbook.Sheet, {\n        data: _this.state.questions,\n        name: \"Sheet A\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Workbook.Column, {\n        label: \"City\",\n        value: \"city\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Workbook.Column, {\n        label: \"Zipcode\",\n        value: \"zipcode\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Workbook.Column, {\n        label: \"Status\",\n        value: \"status\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }))) : \"\");\n    };\n\n    _this.deleteQuestion = function (del_id) {\n      return function (e) {\n        var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n        e.preventDefault();\n        swal({\n          title: \"Are you sure?\",\n          text: \"You want to delete this question?\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true\n        }).then(function (willDelete) {\n          if (willDelete) {\n            swal(\"Question has been deleted!\", {\n              icon: \"success\"\n            });\n            axios.post(AppConstants.API + '/thermometerQues/deleteThermoQues/' + del_id).then(function (res) {\n              console.log(res);\n\n              if (res.data.Status == \"Success\") {\n                _this.setState({\n                  errMsg: res.data.msg\n                });\n\n                setTimeout(function () {\n                  _this.setState({\n                    errMsg: false\n                  });\n                }, 1000);\n                fetch(AppConstants.API + '/thermometerQues/getAllThermoQuestions').then(function (res) {\n                  if (res.status == \"200\") {\n                    return res.json();\n                  }\n                }).then(function (data) {\n                  if (data.Status == \"Success\") {\n                    that.setState({\n                      questions: data.data\n                    });\n                  }\n                });\n              } else {\n                _this.setState({\n                  errMsg: res.data.msg\n                });\n              }\n            });\n          }\n        });\n      };\n    };\n\n    _this.state = {\n      questions: []\n    };\n    return _this;\n  }\n\n  _createClass(ThermoQues, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(AppConstants.API + \"/thermometerQues/getAllThermoQuestions\").then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (data) {\n        if (data.Status == \"Success\") {\n          _this2.setState({\n            questions: data.data\n          });\n        }\n      });\n      var element = document.getElementById(\"navItem-Students-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Parents-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Mentors-2\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Cms-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Programs-3\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Events-1\");\n      element.classList.remove(\"active\");\n\n      if (!this.props.auth.user.user_type) {\n        element = document.getElementById(\"navItem-Admins-0\");\n        element.classList.remove(\"active\");\n      }\n\n      var element = document.getElementById(\"navItem-dashboard-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Resources-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Languages-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Thermometer Questions-0\");\n      element.classList.add(\"active\");\n      var element = document.getElementById(\"navItem-Feeling Journals-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Parent TO-DOS-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Student TO-DOS-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Mentor TO-DOS-2\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help Sugesstions-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-App Feedback-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Event Feedback-1\");\n      element.classList.remove(\"active\");\n    }\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(cell, row) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, row.status == false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mr-1 badge badge-warning p-1 cst-inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 38\n        }\n      }, \"Inactive\") : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mr-1 badge badge-success  p-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 116\n        }\n      }, \"Active\"));\n    }\n  }, {\n    key: \"handleActions\",\n    value: function handleActions(cell, row) {\n      var _React$createElement;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ca-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"tooltip-\".concat(row._id),\n        style: {\n          'fontSize': 12\n        },\n        to: \"/editQuestion/\" + row._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MdEdit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 58\n        }\n      }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: \"top\",\n        target: \"tooltip-\".concat(row._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, \"Edit Question \"), \"\\xA0\")), /*#__PURE__*/React.createElement(\"span\", (_React$createElement = {\n        id: \"tooltipdel-\".concat(row._id),\n        onClick: this.deleteQuestion(row._id),\n        className: \"text-muted\"\n      }, _defineProperty(_React$createElement, \"className\", \"bg-danger cst-icon\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }), _React$createElement), /*#__PURE__*/React.createElement(MdDelete, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 156\n        }\n      }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: \"top\",\n        target: \"tooltipdel-\".concat(row._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 167\n        }\n      }, \"Delete Question \")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = {\n        insertText: \"New\",\n        deleteText: 'Delete',\n        saveText: 'Save',\n        closeText: 'Close',\n        insertBtn: this.createCustomInsertButton,\n        page: this.state.currentPage,\n        // which page you want to show as default\n        sizePerPageList: [5, 10, 20, 50],\n        // you can change the dropdown list for size per page\n        sizePerPage: this.state.sizePerPage,\n        // which size per page you want to locate as default\n        pageStartIndex: 1,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        // paginationShowsTotal: this.this.renderShowsTotal,  //this.renderShowsTotal- Accept bool or function\n        paginationShowsTotal: this.state.questions.length,\n        paginationPosition: 'bottom',\n        // default is bottom, top and both is all available\n        onPageChange: this.onPageChange,\n        onSizePerPageList: this.onSizePerPageList,\n        onSortChange: this.onSortChange,\n        onSearchChange: this.onSearchChange,\n        insertModal: this.createCustomModal\n      };\n      return /*#__PURE__*/React.createElement(Page, {\n        title: \"Thermometer Questions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ReactTitle, {\n        title: \"Thermometer Questions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cst-breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, \"Dashboard\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, \"Thermometer Questions\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(BootstrapTable, {\n        data: this.state.questions,\n        search: true,\n        pagination: true,\n        multiColumnSearch: true,\n        options: options,\n        insertRow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"_id\",\n        isKey: true,\n        searchable: false,\n        dataSort: true,\n        hidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }, \"Child ID\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"ques\",\n        dataSort: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }, \"Question\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        width: '20%',\n        dataSort: true,\n        dataFormat: this.handleStatus.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"actions\",\n        width: '20%',\n        dataFormat: this.handleActions.bind(this),\n        export: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, \"Actions\")))))));\n    }\n  }]);\n\n  return ThermoQues;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(ThermoQues);","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/ThermometerQues/thermoQues.js"],"names":["React","Link","axios","AppConstants","ReactTitle","Page","Card","CardBody","Row","UncontrolledTooltip","BootstrapTable","TableHeaderColumn","MdRemoveRedEye","MdAdd","MdEdit","MdDelete","swal","connect","Workbook","ThermoQues","createCustomInsertButton","onClick","state","questions","length","deleteQuestion","del_id","e","that","preventDefault","title","text","icon","buttons","dangerMode","then","willDelete","post","API","res","console","log","data","Status","setState","errMsg","msg","setTimeout","fetch","status","json","element","document","getElementById","classList","remove","props","auth","user","user_type","add","cell","row","_id","options","insertText","deleteText","saveText","closeText","insertBtn","page","currentPage","sizePerPageList","sizePerPage","pageStartIndex","paginationSize","paginationShowsTotal","paginationPosition","onPageChange","onSizePerPageList","onSortChange","onSearchChange","insertModal","createCustomModal","handleStatus","bind","handleActions","Component","mapStateToProps","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport Page from 'components/Page';\nimport { Card, CardBody, Row, UncontrolledTooltip} from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { MdRemoveRedEye, MdAdd, MdEdit, MdDelete } from 'react-icons/md';\nimport swal from 'sweetalert';\nimport { connect } from 'react-redux';\nimport Workbook from 'react-xlsx-workbook';\nclass ThermoQues extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            questions : []\n        } \n    }\n    componentDidMount(){\n        fetch(AppConstants.API+\"/thermometerQues/getAllThermoQuestions\").then(res => {\n            if(res.status == 200){\n                return res.json()\n            }\n        }).then(data=>{\n            if(data.Status == \"Success\"){\n                this.setState({questions:data.data})\n            }\n        })\n        var element = document.getElementById(\"navItem-Students-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Parents-1\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Mentors-2\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Cms-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Programs-3\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Events-1\");\n        element.classList.remove(\"active\");\n        if(!this.props.auth.user.user_type){\n          element = document.getElementById(\"navItem-Admins-0\");\n          element.classList.remove(\"active\");\n        }\n        var element = document.getElementById(\"navItem-dashboard-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Resources-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Languages-1\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Thermometer Questions-0\");\n        element.classList.add(\"active\");\n        var element = document.getElementById(\"navItem-Feeling Journals-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Parent TO-DOS-1\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Student TO-DOS-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Mentor TO-DOS-2\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Help Sugesstions-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Help-1\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-App Feedback-0\");\n        element.classList.remove(\"active\");\n        var element = document.getElementById(\"navItem-Event Feedback-1\");\n        element.classList.remove(\"active\");\n    }\n    createCustomInsertButton = (onClick) => {\n        return (\n            <span>\n                <Link to={\"/addthermoques\"} className=\"btn btn-warning\" title=\"Add Question\"><MdAdd />\n                    Add Question\n                </Link>&nbsp;&nbsp;\n                {this.state.questions.length>0?\n                    <Workbook filename=\"ExportQuestions.xlsx\" element={<span className=\"btn btn-secondary editbtn\" title=\"Export Questions\">Export Questions</span>}>\n                        <Workbook.Sheet data={this.state.questions} name=\"Sheet A\">\n                        <Workbook.Column label=\"City\" value=\"city\"/>\n                        <Workbook.Column label=\"Zipcode\" value=\"zipcode\"/>\n                        <Workbook.Column label=\"Status\" value=\"status\"/>\n                        </Workbook.Sheet>\n                    </Workbook>\n                :\"\"}\n            </span>\n        );\n    }\n    handleStatus(cell,row){\n        return(\n            <span>\n              {row.status == false ? <span className=\"mr-1 badge badge-warning p-1 cst-inactive\">Inactive</span> : <span className=\"mr-1 badge badge-success  p-1\">Active</span>}\n            </span>\n          )\n    }\n    deleteQuestion=(del_id)=>e=>{\n        const that = this;\n        e.preventDefault();\n        swal({\n            title: \"Are you sure?\",\n            text: \"You want to delete this question?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,   \n        })\n        .then((willDelete) => {\n          if (willDelete) {\n            swal(\"Question has been deleted!\", {\n            icon: \"success\",\n            });\n           \n            axios.post(AppConstants.API+'/thermometerQues/deleteThermoQues/'+del_id)\n            .then(res => {  \n                console.log(res) \n                if(res.data.Status == \"Success\"){                           \n                    this.setState({\n                    errMsg: res.data.msg\n                    });\n                    setTimeout(() => {\n                    this.setState({\n                        errMsg: false,\n                    });\n                    }, 1000);\n                    fetch(AppConstants.API+'/thermometerQues/getAllThermoQuestions').then(res=>{\n                        if(res.status == \"200\"){\n                            return res.json();\n                        }\n                        })\n                        .then(function(data) {\n                        if(data.Status == \"Success\"){\n                            that.setState({questions:data.data})\n                        }\n                    })\n                }\n                else{\n                    this.setState({\n                    errMsg: res.data.msg\n                    });\n                }\n            });  \n          }\n        });\n    }  \n    handleActions(cell,row){\n        return <div className=\"ca-controls\">\n                    <Link id={`${\"tooltip-\"}${row._id}`} style={{ 'fontSize': 12 }} to={\"/editQuestion/\" + row._id} >\n                        <button className=\"btn btn-info\"><MdEdit/>\n                        <UncontrolledTooltip placement=\"top\" target={`${\"tooltip-\"}${row._id}`}>Edit Question </UncontrolledTooltip>&nbsp;</button>\n                    </Link>\n                    <span id={`${\"tooltipdel-\"}${row._id}`} onClick={ this.deleteQuestion(row._id) } className=\"text-muted\" className=\"bg-danger cst-icon\"><MdDelete/><UncontrolledTooltip placement=\"top\" target={`${\"tooltipdel-\"}${row._id}`}>Delete Question </UncontrolledTooltip></span>\n              </div>;\n    }  \n    render(){\n        const options = {\n\n            insertText: \"New\",\n      \n            deleteText: 'Delete',\n      \n            saveText: 'Save',\n      \n            closeText: 'Close',\n      \n            insertBtn: this.createCustomInsertButton,\n          \n            page: this.state.currentPage,  // which page you want to show as default\n      \n            sizePerPageList: [ 5, 10, 20, 50], // you can change the dropdown list for size per page\n      \n            sizePerPage: this.state.sizePerPage,  // which size per page you want to locate as default\n      \n            pageStartIndex: 1, // where to start counting the pages\n      \n            paginationSize: 3,  // the pagination bar size.\n      \n            // paginationShowsTotal: this.this.renderShowsTotal,  //this.renderShowsTotal- Accept bool or function\n            paginationShowsTotal : this.state.questions.length,\n      \n            paginationPosition: 'bottom',  // default is bottom, top and both is all available\n      \n            onPageChange: this.onPageChange,\n      \n            onSizePerPageList: this.onSizePerPageList,\n      \n            onSortChange: this.onSortChange,\n      \n            onSearchChange: this.onSearchChange,\n      \n            insertModal: this.createCustomModal, \n                  \n          };\n        return(\n            <Page title=\"Thermometer Questions\">\n            <ReactTitle title=\"Thermometer Questions\"/>\n            <ul className=\"cst-breadcrumb\">\n              <li><Link to={'/dashboard'}>Dashboard</Link> </li>\n              <li>Thermometer Questions</li>\n            </ul>\n            <Row>\n                <Card>\n                    <CardBody>\n                        <div>\n                        <BootstrapTable data={this.state.questions}\n                        search={ true } pagination={ true } multiColumnSearch={ true } options={ options }\n                        insertRow\n                        >\n                            <TableHeaderColumn dataField='_id' isKey={true} searchable={false} dataSort={true} hidden={true}>Child ID</TableHeaderColumn>\n                            <TableHeaderColumn dataField='ques'  dataSort={true}>Question</TableHeaderColumn>\n                            <TableHeaderColumn dataField='status' width={'20%'} dataSort={true} dataFormat={this.handleStatus.bind(this)}>Status</TableHeaderColumn>\n                            <TableHeaderColumn dataField='actions' width={'20%'} dataFormat={this.handleActions.bind(this)} export={false}>Actions</TableHeaderColumn>\n                            </BootstrapTable>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(mapStateToProps, {})(ThermoQues);"]},"metadata":{},"sourceType":"module"}