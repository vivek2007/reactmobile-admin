{"ast":null,"code":"import _defineProperty from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pradeepkumar/Downloads/meadmin/src/components/Resources/editResource.js\";\nimport React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Alert, Card, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Switch from \"react-switch\";\nimport ReactDOM from 'react-dom';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport CKEditor from \"react-ckeditor-component\";\nvar prg1 = [];\n\nvar EditResource = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditResource, _React$Component);\n\n  function EditResource() {\n    var _this;\n\n    _classCallCheck(this, EditResource);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditResource).call(this));\n    _this.state = {\n      title: \"\",\n      description: \"\",\n      document: \"\",\n      status: true,\n      loading: \"\",\n      errors: {},\n      programs: [],\n      seletedprogram: [{}],\n      title_error: false,\n      description_error: false,\n      status_error: false,\n      prog_error: false,\n      audio: \"\",\n      video: \"\",\n      thumbnail: \"\",\n      media: \"\",\n      content: '',\n      prev_thumbnail: \"\",\n      file_type: '',\n      audiolink: '',\n      options: [{\n        value: 'Student',\n        text: 'Client',\n        isChecked: false\n      }, // { value: 'parent', text: 'Parent',isChecked: false },\n      {\n        value: 'Mentor',\n        text: 'Mentor',\n        isChecked: false\n      }],\n      usertype_error: false,\n      thumbnali_error: false,\n      video_error: false,\n      audio_error: false,\n      old_audio: \"\",\n      old_document: \"\"\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRemove = _this.onRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFileChange = _this.handleFileChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFileChange1 = _this.handleFileChange1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleThumbnail = _this.handleThumbnail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUsertpe = _this.handleUsertpe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditResource, [{\n    key: \"onChange\",\n    value: function onChange(evt) {\n      var newContent = evt.editor.getData();\n      this.setState({\n        content: newContent\n      });\n\n      if (newContent) {\n        this.setState({\n          description_error: false\n        });\n      }\n    }\n  }, {\n    key: \"handleThumbnail\",\n    value: function handleThumbnail(e) {\n      this.setState({\n        thumbnail: e.target.files[0],\n        thumbnail_error: false\n      });\n    }\n  }, {\n    key: \"handleStatusChange\",\n    value: function handleStatusChange(checked) {\n      this.setState({\n        status: checked\n      });\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(selectedList, selectedItem) {\n      this.setState({\n        selectedValue: selectedList\n      });\n\n      if (selectedList) {\n        this.setState({\n          prog_error: false\n        });\n      }\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(selectedList, removedItem) {\n      console.log(\"selectedList\", selectedList);\n\n      if (selectedList == \"\") {\n        this.setState({\n          prog_error: true\n        });\n      }\n    }\n  }, {\n    key: \"handleFileChange\",\n    value: function handleFileChange(e) {\n      this.setState({\n        document: e.target.files[0],\n        document_error: false\n      });\n    }\n  }, {\n    key: \"handleFileChange1\",\n    value: function handleFileChange1(e) {\n      this.setState({\n        audio: e.target.files[0],\n        audio_error: false\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      if (e.target.name == 'file_type' && e.target.value == 'audio') {\n        this.setState({\n          video: \"\",\n          document: \"\",\n          old_document: ''\n        });\n      }\n\n      if (e.target.name == 'file_type' && e.target.value == 'video') {\n        this.setState({\n          audio: \"\",\n          document: \"\",\n          audiolink: \"\",\n          old_document: \"\",\n          old_audio: \"\"\n        });\n      }\n\n      if (e.target.name == 'file_type' && e.target.value == 'document') {\n        this.setState({\n          audio: \"\",\n          video: \"\",\n          audiolink: \"\",\n          old_audio: \"\"\n        });\n      }\n\n      if (e.target.name == \"title\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            title_error: false\n          });\n        }\n      } // if(e.target.name == \"video\"){\n      //     if(e.target.value != \"\"){\n      //         this.setState({video_error:false})\n      //     }\n      // }\n      // if(e.target.name == \"audiolink\"){\n      //     if(e.target.value != \"\"){\n      //         this.setState({audio_error:false})\n      //     }\n      // }\n      // if(e.target.name == \"media\"){\n      //     if(e.target.value != \"\"){\n      //         this.setState({media_error:false})\n      //     }\n      //     if(e.target.value == \"audio\"){\n      //         this.setState({video_error:false,document_error:false})\n      //     }else if(e.target.value == \"video\"){\n      //         this.setState({audio_error:false,document_error:false})\n      //     }else{\n      //         this.setState({audio_error:false,video_error:false})\n      //     }\n      // }\n\n\n      if (e.target.name == \"description\") {\n        // if(e.target.value !=\"\"){\n        this.setState({\n          description_error: false\n        }); // }else{\n        //     this.setState({description_error:true});\n        // }\n      }\n\n      this.setState(_defineProperty({}, e.target.name, e.target.value)); // if(this.state.media)\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var errors = {};\n      var formIsValid = true;\n\n      if (this.state.audio && this.state.audiolink && this.state.audio !== \"undefined\") {\n        formIsValid = false;\n        errors[\"audio\"] = \"Please add audio link or upload audio file\"; // ReactDOM.findDOMNode(this.refs.video).focus();\n      }\n\n      if (!this.state.document && !this.state.video && !this.state.audio && !this.state.audiolink) {\n        formIsValid = false;\n        errors[\"note_color\"] = \"Please upload atleast one media file (Ex: audio | video | document).\";\n      }\n\n      if (this.state.document) {\n        if (this.state.document.type) {\n          if (this.state.document != '' && this.state.document != undefined && this.state.document.type != \"application/pdf\" && this.state.document.type != \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\") {\n            formIsValid = false;\n            errors[\"document\"] = \"Please upload pdf or document\"; // ReactDOM.findDOMNode(this.refs.document1).focus();\n          }\n        }\n      }\n\n      if (this.state.audio) {\n        if (this.state.audio.type) {\n          console.log(this.state.audio.type);\n\n          if (this.state.audio != '' && this.state.audio != undefined && this.state.audio.type != \"audio/mp3\") {\n            formIsValid = false;\n            errors[\"audio\"] = \"Please upload mp3 file\"; // ReactDOM.findDOMNode(this.refs.document1).focus();\n          }\n        }\n      }\n\n      if (this.state.thumbnail && this.state.thumbnail.name && !this.state.thumbnail.name.match(/.(jpg|jpeg|png)$/i)) {\n        formIsValid = false;\n        errors[\"thumbnail\"] = \"Please select valid image (Ex: jpg | jpeg | png )\"; // ReactDOM.findDOMNode(this.refs.thumbnail).focus();\n      }\n\n      if (this.state.selectedValue.length == 0) {\n        formIsValid = false;\n        errors[\"seletedprogram\"] = \"Please select program\";\n      }\n\n      if (!this.state.content) {\n        formIsValid = false;\n        errors[\"description\"] = \"Please enter description\"; // ReactDOM.findDOMNode(this.refs.description).focus();\n      } // var user_tye = []\n      // this.state.options.map((option,i)=>{\n      //     if(option.isChecked == true){\n      //         user_tye.push(option.value)\n      //     }\n      // })\n      // if(user_tye.length == 0){\n      //     formIsValid = false;\n      //     errors[\"usertype\"] = \"Please select user type\";\n      //     // ReactDOM.findDOMNode(this.refs.usertype).focus();\n      // }\n\n\n      if (!this.state.title) {\n        formIsValid = false;\n        errors[\"title\"] = \"Please enter title\"; // ReactDOM.findDOMNode(this.refs.title).focus();\n      }\n\n      this.setState({\n        errors: errors,\n        title_error: true,\n        status_error: true,\n        description_error: true,\n        prog_error: true,\n        usertype_error: true,\n        thumbnail_error: true,\n        document_error: true,\n        video_error: true,\n        audio_error: true,\n        media_error: true\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var user_tye = [];\n      this.state.options.map(function (option, i) {\n        if (option.isChecked == true) {\n          user_tye.push(option.value);\n        }\n      });\n\n      if (this.handleValidation()) {\n        this.setState({\n          loading: 1\n        });\n        var formData = new FormData();\n        var prgs = [];\n        this.state.selectedValue.map(function (prg, index) {\n          prgs.push(prg.prg_id);\n        });\n        var config = {\n          headers: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        formData.append('title', this.state.title);\n        formData.append('description', this.state.content);\n        formData.append('status', this.state.status);\n        formData.append('program', JSON.stringify(prgs));\n        formData.append('thumbnail', this.state.thumbnail);\n        formData.append('prev_thumbnail', this.state.prev_thumbnail); // formData.append('media', this.state.media);\n        // formData.append('userType', JSON.stringify(user_tye));\n\n        formData.append('audio', this.state.audio);\n        formData.append('old_audio', this.state.old_audio);\n        formData.append('audiolink', this.state.audiolink);\n        formData.append('video', this.state.video);\n        formData.append('document', this.state.document);\n        formData.append('old_document', this.state.old_document);\n        formData.append('file_type', this.state.file_type);\n        axios.post(AppConstants.API + '/resource/updateResource/' + this.props.match.params.id, formData, config).then(function (res) {\n          if (res.data.Status == \"Success\") {\n            setTimeout(function (e) {\n              _this2.props.history.push('/resources');\n            }, 2000);\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-success fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          } else {\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-danger fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var element = document.getElementById(\"navItem-Resources-0\");\n      element.classList.add(\"active\");\n      prg1 = [];\n      fetch(AppConstants.API + '/programs/getAllactiveprograms').then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        result.data.map(function (res, i) {\n          var prg = {};\n          prg[\"name\"] = res.title;\n          prg[\"prg_id\"] = res._id;\n          prg1.push(prg);\n        });\n\n        _this3.setState({\n          programs: prg1\n        });\n      });\n      fetch(AppConstants.API + '/resource/getIdBasedResource/' + this.props.match.params.id).then(function (res) {\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        var options = _this3.state.options;\n        result.data[0].user_type.map(function (user, index) {\n          _this3.state.options.forEach(function (option) {\n            console.log(option.value, \"option.value\", user);\n            if (option.value === user) option.isChecked = true;\n          });\n        });\n        console.log(\"result.data[0].audio\", result.data[0].audio);\n        console.log(\" result.data[0].programs\", result.data[0].programs);\n\n        _this3.setState({\n          title: result.data[0].title,\n          status: result.data[0].status,\n          content: result.data[0].description,\n          selectedValue: result.data[0].programs,\n          media: result.data[0].media_type,\n          thumbnail: result.data[0].thumbnail,\n          prev_thumbnail: result.data[0].thumbnail,\n          audio: result.data[0].audio,\n          old_audio: result.data[0].audio,\n          old_document: result.data[0].document,\n          document: result.data[0].document,\n          video: result.data[0].video,\n          options: options,\n          audiolink: result.data[0].audio_link,\n          file_type: result.data[0].file_type\n        });\n      });\n    }\n  }, {\n    key: \"handleUsertpe\",\n    value: function handleUsertpe(event) {\n      var options = this.state.options;\n      options.forEach(function (option) {\n        if (option.value === event.target.value) option.isChecked = event.target.checked;\n      });\n      this.setState({\n        options: options,\n        usertype_error: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.state.options);\n      var checkboxItems = this.state.options.map(function (planet) {\n        return /*#__PURE__*/React.createElement(Label, {\n          className: \"mx-3\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"checkbox\",\n          name: \"usertype\",\n          onChange: _this4.handleUsertpe,\n          value: planet.value,\n          checked: planet.isChecked,\n          ref: \"usertype\",\n          class: \"form-control\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 206\n          }\n        }, planet.text));\n      });\n      return /*#__PURE__*/React.createElement(Page, {\n        className: \"cms-edit\",\n        title: \"Edit Resource\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cst-breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }\n      }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/resources',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }\n      }, \"All Resources\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, \"Edit Resource\")), /*#__PURE__*/React.createElement(ReactTitle, {\n        title: \"Edit Resource\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"editresource\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 41\n        }\n      }, \"Title\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 49\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        ref: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 45\n        }\n      }), this.state.title_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 79\n        }\n      }, this.state.errors[\"title\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"Description\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 41\n        }\n      }, \"Description\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 56\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(CKEditor, {\n        activeClass: \"editor12\",\n        content: this.state.content,\n        events: {\n          \"blur\": this.onBlur,\n          \"afterPaste\": this.afterPaste,\n          \"change\": this.onChange\n        },\n        ref: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 46\n        }\n      }), this.state.description_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 85\n        }\n      }, this.state.errors[\"description\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"program\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 41\n        }\n      }, \"Program  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 54\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Multiselect, {\n        options: this.state.programs // Options to display in the dropdown\n        ,\n        selectedValues: this.state.selectedValue // Preselected value to persist in dropdown\n        ,\n        onSelect: this.onSelect // Function will trigger on select event\n        ,\n        onRemove: this.onRemove // Function will trigger on remove event\n        ,\n        displayValue: \"name\" // Property name to display in the dropdown options\n        ,\n        placeholder: \"Program\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 45\n        }\n      })), this.state.prog_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 78\n        }\n      }, this.state.errors[\"seletedprogram\"]) : '')), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"thumbnail\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 41\n        }\n      }, \"Thumbnail\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 41\n        }\n      }, this.state.prev_thumbnail && this.state.prev_thumbnail !== \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 116\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.prev_thumbnail,\n        style: {\n          width: 100,\n          height: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 121\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 194\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 200\n        }\n      })) : \"\", /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        name: \"thumbnail\",\n        placeholder: \"Upload Audio file\" // value={this.state.thumbnail}\n        ,\n        onChange: this.handleThumbnail,\n        ref: \"thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        sm: 2,\n        for: \"Eligibility requirements needed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 41\n        }\n      }, \"File Type\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"form-check-label \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"file_type\",\n        type: \"radio\",\n        className: \"form-check-input\",\n        value: \"audio\",\n        checked: this.state.file_type == 'audio',\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 45\n        }\n      }), \"Audio \")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"form-check-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"file_type\",\n        type: \"radio\",\n        className: \"form-check-input\",\n        value: \"video\",\n        checked: this.state.file_type == 'video',\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 45\n        }\n      }), \"Video\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"form-check-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"file_type\",\n        type: \"radio\",\n        className: \"form-check-input\",\n        value: \"document\",\n        checked: this.state.file_type == 'document',\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 45\n        }\n      }), \"Document\"))))), this.state.file_type == 'audio' ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"audio\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 49\n        }\n      }, \"Audio File\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        name: \"audio\" // placeholder=\"Upload Audio file\"                      \n        // value={this.state.audio}\n        ,\n        onChange: this.handleFileChange1 // ref =\"audio\"           \n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 53\n        }\n      }), console.log(this.state.old_audio), this.state.old_audio !== \"undefined\" && this.state.old_audio ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 118\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.state.old_audio,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 123\n        }\n      }, this.state.old_audio), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 196\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 202\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 219\n        }\n      }), this.state.audio_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 87\n        }\n      }, this.state.errors[\"audio\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"audio\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 45\n        }\n      }, \"Audio Link\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"audiolink\",\n        placeholder: \"Audio link\",\n        value: this.state.audiolink,\n        onChange: this.handleInputChange,\n        ref: \"audiolink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 49\n        }\n      })))) : \"\", this.state.file_type == 'video' ? /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"video\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 41\n        }\n      }, \"Video Link\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"video\",\n        placeholder: \"Video Link\",\n        value: this.state.video,\n        onChange: this.handleInputChange,\n        ref: \"video\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 45\n        }\n      }))) : '', this.state.file_type == 'document' ? /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 41\n        }\n      }, \"Upload Document\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 41\n        }\n      }, this.state.old_document && this.state.old_document !== \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 112\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.state.old_document,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 117\n        }\n      }, this.state.old_document), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 196\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 202\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 219\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        name: \"document\",\n        placeholder: \"Upload Pdf document\" //value={this.state.document}\n        ,\n        onChange: this.handleFileChange,\n        ref: \"document1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 45\n        }\n      }), this.state.document_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 82\n        }\n      }, this.state.errors[\"document\"]) : \"\")) : '', /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 41\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        onChange: this.handleStatusChange.bind(this),\n        checked: this.state.status,\n        uncheckedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"150px\",\n            color: \"#000\",\n            fontWeight: \"bold\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 45\n          }\n        }, \"Inactive\"),\n        checkedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"180px\",\n            fontWeight: \"bold\",\n            color: \"#000\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 45\n          }\n        }, \"Active\"),\n        onColor: \"#45b649\",\n        offColor: \"#ffd700\",\n        className: \"react-switch\",\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n        activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n        height: 20,\n        width: 48,\n        handleDiameter: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 37\n        }\n      }, \"\\xA0\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 41\n        }\n      }, this.state.errors[\"note_color\"] ? /*#__PURE__*/React.createElement(Alert, {\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 77\n        }\n      }, \"Note: \", this.state.errors[\"note_color\"]) : /*#__PURE__*/React.createElement(Alert, {\n        color: \"warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 148\n        }\n      }, \"Note: Please upload atleast one media file.\"))), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 45\n        }\n      }, \"Update    \", /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 121\n        }\n      }, \"               \", /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 234\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), \"\\xA0\", /*#__PURE__*/React.createElement(Link, {\n        to: \"/resources\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 45\n        }\n      }, \"\\xA0Cancel\"))), this.state.errMsg))))));\n    }\n  }]);\n\n  return EditResource;\n}(React.Component);\n\nEditResource.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(EditResource);","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/meadmin/src/components/Resources/editResource.js"],"names":["React","Page","axios","AppConstants","ReactTitle","Link","Row","Col","Alert","Card","CardBody","Button","Form","FormGroup","Label","Input","Loading","PropTypes","connect","Switch","ReactDOM","Multiselect","CKEditor","prg1","EditResource","state","title","description","document","status","loading","errors","programs","seletedprogram","title_error","description_error","status_error","prog_error","audio","video","thumbnail","media","content","prev_thumbnail","file_type","audiolink","options","value","text","isChecked","usertype_error","thumbnali_error","video_error","audio_error","old_audio","old_document","handleSubmit","bind","handleInputChange","onSelect","onRemove","handleFileChange","handleFileChange1","handleThumbnail","onChange","handleUsertpe","evt","newContent","editor","getData","setState","e","target","files","thumbnail_error","checked","selectedList","selectedItem","selectedValue","removedItem","console","log","document_error","name","formIsValid","type","undefined","match","length","media_error","preventDefault","user_tye","map","option","i","push","handleValidation","formData","FormData","prgs","prg","index","prg_id","config","headers","append","JSON","stringify","post","API","props","params","id","then","res","data","Status","setTimeout","history","errMsg","msg","element","getElementById","classList","add","fetch","json","result","_id","user_type","user","forEach","media_type","audio_link","event","checkboxItems","planet","color","onBlur","afterPaste","width","height","handleStatusChange","display","justifyContent","alignItems","fontSize","fontWeight","paddingRight","size","offset","Component","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport  { Link } from 'react-router-dom';\nimport {\n    Row,\n    Col,Alert,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n  } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Switch from \"react-switch\";\nimport ReactDOM from 'react-dom';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport CKEditor from \"react-ckeditor-component\";\nvar prg1 = []\nclass EditResource extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            title : \"\",\n            description : \"\",\n            document : \"\",\n            status : true,\n            loading : \"\",\n            errors : {},\n            programs:[],\n            seletedprogram : [{}],\n            title_error : false,\n            description_error : false,\n            status_error : false,\n            prog_error:false,\n            audio : \"\",\n            video : \"\",\n            thumbnail : \"\",\n            media : \"\",\n            content : '',\n            prev_thumbnail : \"\",\n            file_type:'',\n            audiolink : '',\n            options : [\n                { value: 'Student', text: 'Client',isChecked: false },\n                // { value: 'parent', text: 'Parent',isChecked: false },\n                { value: 'Mentor', text: 'Mentor',isChecked: false },\n              ],\n            usertype_error : false,\n            thumbnali_error : false,\n            video_error : false,\n            audio_error : false,\n            old_audio : \"\",\n            old_document : \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.onRemove = this.onRemove.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handleFileChange1 = this.handleFileChange1.bind(this);\n        this.handleThumbnail = this.handleThumbnail.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.handleUsertpe = this.handleUsertpe.bind(this);\n    }\n    onChange(evt){\n        var newContent = evt.editor.getData();\n        this.setState({\n          content: newContent\n        })\n        if (newContent) {\n          this.setState({description_error:false})\n        }\n    }\n    handleThumbnail(e){\n        this.setState({thumbnail:e.target.files[0],thumbnail_error:false})\n    }\n    handleStatusChange(checked){\n        this.setState({status : checked})\n    }\n    onSelect(selectedList, selectedItem) {\n        this.setState({\n          selectedValue: selectedList\n        });\n        if(selectedList){\n            this.setState({prog_error:false})\n        }\n    }\n    onRemove(selectedList, removedItem) {\n        console.log(\"selectedList\",selectedList)\n        if(selectedList == \"\"){\n          this.setState({prog_error:true})\n        }\n    }\n    handleFileChange(e){\n        this.setState({document:e.target.files[0],document_error:false})\n    }\n    handleFileChange1(e){\n        this.setState({audio:e.target.files[0],audio_error:false})\n    }\n    \n    handleInputChange(e){\n        if(e.target.name == 'file_type' && e.target.value == 'audio'){\n            this.setState({ video : \"\",document : \"\",old_document:''})\n        }\n        if(e.target.name == 'file_type' && e.target.value == 'video'){\n            this.setState({ audio : \"\",document : \"\", audiolink : \"\",old_document:\"\",old_audio:\"\"})\n        }\n        if(e.target.name == 'file_type' && e.target.value == 'document'){\n            this.setState({ audio : \"\",video : \"\", audiolink : \"\",old_audio:\"\"})\n        }\n        if(e.target.name == \"title\"){\n            if(e.target.value != \"\"){\n                this.setState({title_error:false})\n            }\n        }\n        \n        // if(e.target.name == \"video\"){\n        //     if(e.target.value != \"\"){\n        //         this.setState({video_error:false})\n        //     }\n        // }\n        // if(e.target.name == \"audiolink\"){\n        //     if(e.target.value != \"\"){\n        //         this.setState({audio_error:false})\n        //     }\n        // }\n        // if(e.target.name == \"media\"){\n        //     if(e.target.value != \"\"){\n        //         this.setState({media_error:false})\n        //     }\n        //     if(e.target.value == \"audio\"){\n        //         this.setState({video_error:false,document_error:false})\n        //     }else if(e.target.value == \"video\"){\n        //         this.setState({audio_error:false,document_error:false})\n        //     }else{\n        //         this.setState({audio_error:false,video_error:false})\n        //     }\n        // }\n        if(e.target.name == \"description\"){\n            // if(e.target.value !=\"\"){\n                this.setState({description_error:false});\n            // }else{\n            //     this.setState({description_error:true});\n            // }\n        }\n        this.setState({[e.target.name]:e.target.value})\n        // if(this.state.media)\n    }\n    handleValidation(){\n        let errors = {};\n        let formIsValid = true;\n        \n        if(this.state.audio  && this.state.audiolink && this.state.audio !==\"undefined\"){\n            formIsValid = false;\n            errors[\"audio\"] = \"Please add audio link or upload audio file\";\n            // ReactDOM.findDOMNode(this.refs.video).focus();\n        }\n        if(!this.state.document && !this.state.video && !this.state.audio && !this.state.audiolink){\n            formIsValid = false;\n            errors[\"note_color\"] = \"Please upload atleast one media file (Ex: audio | video | document).\";\n        }\n        if(this.state.document){\n            if(this.state.document.type){\n                if(this.state.document != '' && this.state.document != undefined && (this.state.document.type != \"application/pdf\" && this.state.document.type != \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")){\n                    formIsValid = false;\n                    errors[\"document\"] = \"Please upload pdf or document\";\n                    // ReactDOM.findDOMNode(this.refs.document1).focus();\n                }\n            }\n        }\n        \n        if(this.state.audio){   \n            if(this.state.audio.type){\n                console.log(this.state.audio.type)\n                if(this.state.audio != '' && this.state.audio != undefined && (this.state.audio.type != \"audio/mp3\")){\n                    formIsValid = false;\n                    errors[\"audio\"] = \"Please upload mp3 file\";\n                    // ReactDOM.findDOMNode(this.refs.document1).focus();\n                }\n            }\n        }   \n        if(this.state.thumbnail && this.state.thumbnail.name && !this.state.thumbnail.name.match(/.(jpg|jpeg|png)$/i)){\n            formIsValid = false;\n            errors[\"thumbnail\"] = \"Please select valid image (Ex: jpg | jpeg | png )\";\n            // ReactDOM.findDOMNode(this.refs.thumbnail).focus();\n        }\n        if(this.state.selectedValue.length==0){\n            formIsValid = false;\n            errors[\"seletedprogram\"] = \"Please select program\";\n        }\n        if(!this.state.content){\n            formIsValid = false;\n            errors[\"description\"] = \"Please enter description\";\n            // ReactDOM.findDOMNode(this.refs.description).focus();\n        }\n        // var user_tye = []\n        // this.state.options.map((option,i)=>{\n        //     if(option.isChecked == true){\n        //         user_tye.push(option.value)\n        //     }\n        // })\n        // if(user_tye.length == 0){\n        //     formIsValid = false;\n        //     errors[\"usertype\"] = \"Please select user type\";\n        //     // ReactDOM.findDOMNode(this.refs.usertype).focus();\n        // }\n        if (!this.state.title){\n            formIsValid = false;\n            errors[\"title\"] = \"Please enter title\";\n            // ReactDOM.findDOMNode(this.refs.title).focus();\n        }\n        this.setState({\n            errors: errors,\n            title_error : true,\n            status_error : true,\n            description_error: true,\n            prog_error:true,\n            usertype_error: true,\n            thumbnail_error:true,\n            document_error:true,\n            video_error : true,\n            audio_error : true,\n            media_error:true\n        });\n        return formIsValid;\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        var user_tye = []\n        this.state.options.map((option,i)=>{\n            if(option.isChecked == true){\n                user_tye.push(option.value)\n            }\n        })\n        if(this.handleValidation()){\n            this.setState({loading:1});\n            let formData = new FormData();\n            var prgs = []\n            this.state.selectedValue.map((prg,index)=>{\n                prgs.push(prg.prg_id)\n            })\n            const config = {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                }\n            };\n            formData.append('title', this.state.title);\n            formData.append('description', this.state.content);\n            formData.append('status', this.state.status);\n            formData.append('program', JSON.stringify(prgs));\n            formData.append('thumbnail', this.state.thumbnail);\n            formData.append('prev_thumbnail', this.state.prev_thumbnail);\n            // formData.append('media', this.state.media);\n            // formData.append('userType', JSON.stringify(user_tye));\n            formData.append('audio', this.state.audio);\n            formData.append('old_audio', this.state.old_audio);\n            formData.append('audiolink', this.state.audiolink);\n            formData.append('video', this.state.video);\n            formData.append('document',this.state.document)\n            formData.append('old_document', this.state.old_document);\n                \n            formData.append('file_type', this.state.file_type);\n\n            axios.post(AppConstants.API+'/resource/updateResource/' + this.props.match.params.id,formData,config)\n                .then(res => { \n                    if(res.data.Status == \"Success\"){\n                        setTimeout((e) => {\n                            this.props.history.push('/resources');\n                        }, 2000);\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-success fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n                    else{\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-danger fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n            })\n    }\n    }\n    componentDidMount(){\n        var element = document.getElementById(\"navItem-Resources-0\");\n        element.classList.add(\"active\");\n        prg1 = [];\n        fetch(AppConstants.API+'/programs/getAllactiveprograms').then(res=>{\n            if(res.status == 200){\n                return res.json();\n            }\n          }).then(result=>{\n            result.data.map((res,i)=>{\n              var prg = {}\n              prg[\"name\"] = res.title\n              prg[\"prg_id\"] = res._id\n              prg1.push(prg)\n            })\n            this.setState({programs:prg1})\n        })\n        fetch(AppConstants.API+'/resource/getIdBasedResource/' + this.props.match.params.id).then(res=>{\n            if(res.status == 200){\n                return res.json();\n            }\n        }).then(result=>{\n            let options = this.state.options\n            result.data[0].user_type.map((user,index)=>{\n                this.state.options.forEach(option => {\n                    console.log(option.value,\"option.value\",user)\n                    if (option.value === user)\n                     option.isChecked =  true\n                 })\n            })\n           console.log(\"result.data[0].audio\",result.data[0].audio)\n           console.log( \" result.data[0].programs\",result.data[0].programs)\n            this.setState({title:result.data[0].title,status:result.data[0].status,content:result.data[0].description,selectedValue : result.data[0].programs,media:result.data[0].media_type,thumbnail:result.data[0].thumbnail,prev_thumbnail:result.data[0].thumbnail,audio:result.data[0].audio,old_audio:result.data[0].audio,old_document:result.data[0].document,document : result.data[0].document,video:result.data[0].video,options:options,audiolink:result.data[0].audio_link,\n            file_type:result.data[0].file_type})\n        })     \n    }\n    handleUsertpe(event){\n        let options = this.state.options\n        options.forEach(option => {\n           if (option.value === event.target.value)\n            option.isChecked =  event.target.checked\n        })\n        this.setState({options: options,usertype_error:false});\n    }\n    render(){\n        console.log(this.state.options)\n        const checkboxItems = this.state.options.map(planet => {\n            return (<Label className=\"mx-3\"><Input type=\"checkbox\" name=\"usertype\" onChange={this.handleUsertpe} value={planet.value} checked={planet.isChecked} ref=\"usertype\" class=\"form-control\"></Input><span>{planet.text}</span></Label>);\n        });\n        return(\n            <Page className=\"cms-edit\" title=\"Edit Resource\">\n                <ul className=\"cst-breadcrumb\">\n                    <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                    <li><Link to={'/resources'}>All Resources</Link></li>\n                    <li>Edit Resource</li>\n                </ul>\n                <ReactTitle title=\"Edit Resource\"/>\n                <Row>\n                    <Col xl={12} lg={12} md={12}>\n                        <Card>\n                            <CardBody>\n                                <Form name=\"editresource\" onSubmit= { this.handleSubmit }>\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                           Title<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"Title\"                      \n                                            value={this.state.title}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"title\"           \n                                            />\n                                            {this.state.title_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"title\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n\n                                    {/* <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                           User type<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input type=\"checkbox\"\n                                                checked={this.state.isStudent}\n                                                onChange={this.onChangeStudent}\n                                                className=\"form-check-input\"\n                                            />\n                                            Student &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                            <Input type=\"checkbox\"\n                                                checked={this.state.isStudent}\n                                                onChange={this.onChangeStudent}\n                                                className=\"form-check-input\"\n                                            />\n                                            Parent\n                                        </Col>\n                                    </FormGroup> */}\n                                     {/* <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                           User type<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div className=\"ml-2\">{checkboxItems}</div>\n                                        {this.state.usertype_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"usertype\"]}</span>:\"\"}\n                                        \n                                        </Col>\n                                    </FormGroup> */}\n                                        \n                                    <FormGroup row>\n                                        <Label for=\"Description\" sm={2}>\n                                            Description<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                          \n                                             <CKEditor activeClass=\"editor12\" content={this.state.content} events={{\n                                                \"blur\": this.onBlur,\n                                                \"afterPaste\": this.afterPaste,\n                                                \"change\": this.onChange\n                                                }}\n                                                ref =\"description\"\n                                                />\n                                            {this.state.description_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"description\"]}</span>:\"\"}\n                                        </Col> \n                                    </FormGroup>\n\n                                    <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                            Program  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div>\n                                            <Multiselect\n                                            options={this.state.programs} // Options to display in the dropdown\n                                            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                                            onSelect={this.onSelect} // Function will trigger on select event\n                                            onRemove={this.onRemove} // Function will trigger on remove event\n                                            displayValue=\"name\" // Property name to display in the dropdown options\n                                            placeholder=\"Program\"\n                                            />\n                                            </div>\n                                            {this.state.prog_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"seletedprogram\"]}</span> :''}\n                                        </Col>\n                                    </FormGroup>\n                                                \n                                    <FormGroup row>\n                                        <Label for=\"thumbnail\" sm={2}>\n                                           Thumbnail\n                                        </Label>\n                                        <Col sm={10}>\n                                        {(this.state.prev_thumbnail && this.state.prev_thumbnail!==\"undefined\") ? (<div><img src={this.state.prev_thumbnail} style={{width: 100, height: 100}} /><br /><br /></div>) : \"\"}\n                                            <Input\n                                            type=\"file\"\n                                            name=\"thumbnail\"\n                                            placeholder=\"Upload Audio file\"                      \n                                            // value={this.state.thumbnail}\n                                            onChange={ this.handleThumbnail }   \n                                            ref =\"thumbnail\"           \n                                            />\n                                            {/* {this.state.thumbnail_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"thumbnail\"]}</span>:\"\"} */}\n                                        </Col>\n                                    </FormGroup>\n                                    {/* <FormGroup row>\n                                        <Label for=\"media\" sm={2}>\n                                            Media <span>*</span>\n                                        </Label>\n                                        <Col lg={10} >\n                                            <div className=\"d-flex justify-content-left\">\n                                                <FormGroup check className=\"mr-3\">\n                                                <Label check>\n                                                    <Input type=\"radio\"  name=\"media\" value=\"document\" \n                                                        checked={this.state.media=='document' } ref =\"media\"  \n                                                        onChange={ this.handleInputChange }/>Document\n                                                </Label>\n                                                </FormGroup>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input type=\"radio\"  name=\"media\" value=\"audio\" ref =\"media\" \n                                                            checked={this.state.media=='audio'}\n                                                            onChange={ this.handleInputChange }/>Audio&nbsp;&nbsp;\n                                                    </Label>\n                                                </FormGroup>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input type=\"radio\"  name=\"media\" value=\"video\" ref =\"media\" \n                                                            checked={this.state.media=='video'}\n                                                            onChange={ this.handleInputChange }/>Video\n                                                    </Label>\n                                                </FormGroup>\n                                           </div>\n                                           {this.state.media_error == true  ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"media\"]}</span> : \"\"}\n                                        </Col>\n                                    </FormGroup> */}\n                                    {/* {this.state.media == \"audio\" ?  */}\n                      \n                                    <FormGroup row>\n                                        <Label sm={2} for=\"Eligibility requirements needed\" >\n                                        File Type\n                                        </Label>\n                                        <Col sm={10}>\n                                            <div className=\"form-check-inline\">\n                                            <div className=\"form-check p-0\">\n                                            <Label className=\"form-check-label \">\n                                            <Input name=\"file_type\" type=\"radio\" className=\"form-check-input\" value=\"audio\" checked={this.state.file_type == 'audio'}\n                                            onChange={this.handleInputChange} />\n                                            Audio </Label>\n                                            </div>\n\n                                            <div className=\"form-check\">\n                                            <Label className=\"form-check-label\">\n                                            <Input name=\"file_type\" type=\"radio\" className=\"form-check-input\"\n                                            value=\"video\" checked={this.state.file_type == 'video'} onChange={this.handleInputChange} />Video</Label>\n                                            </div>\n\n                                            <div className=\"form-check\">\n                                            <Label className=\"form-check-label\">\n                                            <Input name=\"file_type\" type=\"radio\" className=\"form-check-input\"\n                                            value=\"document\" checked={this.state.file_type == 'document'} onChange={this.handleInputChange} />Document</Label>\n                                            </div>\n                                            </div>\n                                        </Col>\n                                    \n                                    </FormGroup>\n                                    {this.state.file_type == 'audio' ? \n                                        <div>\n                                            <FormGroup row>\n                                                <Label for=\"audio\" sm={2}>\n                                                Audio File\n                                                </Label>\n                                                <Col sm={10}>\n                                                    <Input\n                                                    type=\"file\"\n                                                    name=\"audio\"\n                                                    // placeholder=\"Upload Audio file\"                      \n                                                    // value={this.state.audio}\n                                                    onChange={ this.handleFileChange1 }   \n                                                    // ref =\"audio\"           \n                                                    />\n                                                    {console.log(this.state.old_audio)}\n                                                    {(this.state.old_audio!==\"undefined\" && this.state.old_audio) ? (<div><a href={this.state.old_audio} target=\"_blank\">{this.state.old_audio}</a><br /><br /></div>) : (<div></div>)}\n                                                    {this.state.audio_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"audio\"]}</span>:\"\"}\n                                                </Col>\n                                            </FormGroup> \n                                            <FormGroup row>\n                                            <Label for=\"audio\" sm={2}>\n                                            Audio Link\n                                            </Label>\n                                            <Col sm={10}>\n                                                <Input\n                                                type=\"text\"\n                                                name=\"audiolink\"\n                                                placeholder=\"Audio link\"                      \n                                                value={this.state.audiolink}\n                                                onChange={ this.handleInputChange }   \n                                                ref =\"audiolink\"           \n                                                />\n                                            </Col>\n                                        </FormGroup> \n                                    </div>\n                                :\"\"}\n                                \n                           \n                                    {/* : this.state.media == \"video\" ?  */}\n                                    {this.state.file_type == 'video' ? \n\n                                    <FormGroup row>\n                                        <Label for=\"video\" sm={2}>\n                                            Video Link\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"video\"\n                                            placeholder=\"Video Link\"                      \n                                            value={this.state.video}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"video\"           \n                                            />\n                                            {/* {this.state.video_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"video\"]}</span>:\"\"} */}\n                                        </Col>\n                                    </FormGroup> \n                                    :''}\n                                    {/* : this.state.media == \"document\" ? */}\n                                    {this.state.file_type == 'document' ? \n                                        <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                            Upload Document\n                                        </Label>\n                                        <Col sm={10}>\n                                        {(this.state.old_document && this.state.old_document!==\"undefined\") ? (<div><a href={this.state.old_document} target=\"_blank\">{this.state.old_document}</a><br /><br /></div>) : (<div></div>)}\n                                            <Input\n                                            type=\"file\"\n                                            name=\"document\"\n                                            placeholder=\"Upload Pdf document\"                      \n                                            //value={this.state.document}\n                                            onChange={ this.handleFileChange }  \n                                            ref = \"document1\"   \n                                            />\n                                            {this.state.document_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"document\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup> \n                                   :''}\n                                   {/* : \"\"} */}\n                                    {/* <FormGroup row>\n                                        <Label for=\"audio\" sm={2}>\n                                           Audio File<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"file\"\n                                            name=\"audio\"\n                                            placeholder=\"Upload Audio file\"                      \n                                            value={this.state.audio}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"audio\"           \n                                            />\n                                          \n                                        </Col>\n                                    </FormGroup> */}\n                                    {/* <FormGroup row>\n                                        <Label for=\"video\" sm={2}>\n                                            Video Link<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"video\"\n                                            placeholder=\"Video Link\"                      \n                                            value={this.state.video}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"video\"           \n                                            />\n                                            {/* {this.state.video_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"video\"]}</span>:\"\"} */}\n                                        {/* </Col>\n                                    </FormGroup> */} \n                                    <FormGroup row>\n                                        <Label for=\"status\" sm={2}>\n                                           Status\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Switch onChange={this.handleStatusChange.bind(this)} checked={this.state.status} \n                                           uncheckedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"150px\",\n                                                color: \"#000\",\n                                                fontWeight: \"bold\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Inactive\n                                            </div>\n                                            }\n                                            checkedIcon={\n                                            <div\n                                                style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"100%\",\n                                                fontSize: 15,\n                                                width:\"180px\",\n                                                fontWeight: \"bold\",\n                                                color: \"#000\",\n                                                paddingRight: 2\n                                                }}\n                                            >\n                                                Active\n                                            </div>\n                                            }\n                                            onColor = \"#45b649\"\n                                            offColor = \"#ffd700\"\n                                            className=\"react-switch\"\n                                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                                            height={20}\n                                            width={48}\n                                            handleDiameter={30}\n                                            />\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                    <Label for=\"status\" sm={2}>\n                                           &nbsp;\n                                        </Label>\n                                        <Col sm={10}>\n                                         {this.state.errors[\"note_color\"] ? <Alert color=\"danger\" >Note: {this.state.errors[\"note_color\"]}</Alert>:<Alert color=\"warning\">Note: Please upload atleast one media file.</Alert>}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup check row>\n                                        <Col sm={{ size: 10, offset: 2 }}>\n                                            <Button className=\"btn btn-primary\" onClick={ this.handleSubmit }>Update    <div style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div\">               <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div></div></Button>&nbsp;\n                                            <Link to={\"/resources\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link>\n                                        </Col>\n                                    </FormGroup>\n                                    {this.state.errMsg}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Page>\n        )\n    }\n}\nEditResource.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport  default connect(mapStateToProps, {})(EditResource);"]},"metadata":{},"sourceType":"module"}