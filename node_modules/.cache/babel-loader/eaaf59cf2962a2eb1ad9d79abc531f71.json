{"ast":null,"code":"import _classCallCheck from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/setChildpassword.js\";\nimport logo200Image from 'assets/img/logo/prana-logo.jpg';\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Card, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\n\nvar SetChildPassword = /*#__PURE__*/function (_React$Component) {\n  _inherits(SetChildPassword, _React$Component);\n\n  _createClass(SetChildPassword, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }\n      }, \"SetChildPassword\");\n    }\n  }]);\n\n  function SetChildPassword(props) {\n    var _this;\n\n    _classCallCheck(this, SetChildPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SetChildPassword).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      console.log(\"sfdsffd\", AppConstants.API); //console.log(process.env.REACT_APP_API_URL+'/users/login');\n\n      event.preventDefault();\n\n      if (_this.handleValidation()) {\n        var setadminpwd = {\n          id: _this.props.match.params.id,\n          password: _this.state.fields['password']\n        }; //axios.post('/users/setadminpassword',setadminpwd)\n\n        axios.post(AppConstants.API + '/child/setChildPassword', setadminpwd).then(function (res) {\n          console.log(res);\n\n          if (res.data.Status == \"Success\") {\n            setTimeout(function () {\n              window.location.href = '/';\n            }, 2000);\n\n            _this.setState({\n              errMsg: res.data.msg\n            });\n          } else {\n            _this.setState({\n              errMsg: res.data.msg\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      fields: {},\n      errors: {},\n      invalidUser: '',\n      errMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(SetChildPassword, [{\n    key: \"handleChange\",\n    value: function handleChange(field, e) {\n      var fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n    /** Validations */\n\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true; //Email\n\n      if (!fields[\"password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"Please enter password\";\n      }\n\n      if (!fields[\"cnfpassword\"]) {\n        formIsValid = false;\n        errors[\"cnfpassword\"] = \"Please enter confirm password\";\n      } else if (fields[\"password\"] != fields[\"cnfpassword\"]) {\n        formIsValid = false;\n        errors[\"cnfpassword\"] = \"Confirm password does not match\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(\"test\", this.props.match.params.id);\n      var _this$props = this.props,\n          showLogo = _this$props.showLogo,\n          onLogoClick = _this$props.onLogoClick;\n      return /*#__PURE__*/React.createElement(Row, {\n        style: {\n          height: '100vh',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        lg: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        body: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"setpwdform\",\n        onSubmit: this.handleSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, showLogo && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo200Image,\n        className: \"rounded\",\n        style: {\n          width: 150,\n          cursor: 'pointer'\n        },\n        alt: \"logo\",\n        onClick: onLogoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, this.state.errMsg), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"Password *\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleChange.bind(this, \"password\"),\n        name: \"password\",\n        value: this.state.fields[\"password\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, this.state.errors[\"password\"])), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"Confirm Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, \"Confirm Password *\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        onChange: this.handleChange.bind(this, \"cnfpassword\"),\n        name: \"cnfpassword\",\n        value: this.state.fields[\"cnfpassword\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, this.state.errors[\"cnfpassword\"])), /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        className: \"cst-login-btn border-0 mt-4 btn btn-secondary btn-lg btn-block btn btn-secondary btn-lg btn-block\",\n        block: true,\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return SetChildPassword;\n}(React.Component);\n\nSetChildPassword.defaultProps = {\n  showLogo: true\n};\nSetChildPassword.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(SetChildPassword);","map":{"version":3,"sources":["/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/setChildpassword.js"],"names":["logo200Image","React","Button","Form","FormGroup","Input","Label","Card","Col","Row","connect","PropTypes","axios","AppConstants","SetChildPassword","props","handleSubmit","event","console","log","API","preventDefault","handleValidation","setadminpwd","id","match","params","password","state","fields","post","then","res","data","Status","setTimeout","window","location","href","setState","errMsg","msg","errors","invalidUser","field","e","target","value","formIsValid","showLogo","onLogoClick","height","justifyContent","alignItems","bind","width","cursor","color","handleChange","Component","defaultProps","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import logo200Image from 'assets/img/logo/prana-logo.jpg';\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Card, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nclass SetChildPassword extends React.Component{\n    render(){\n        return(\n            <div>SetChildPassword</div>\n        )\n    }constructor(props){\n        super(props);\n        this.state = {\n          fields: {},\n          errors: {},\n          invalidUser:'',\n          errMsg:''\n        }\n      }\n      \n      handleChange(field, e){    \t\t\n        let fields = this.state.fields;\n        fields[field] = e.target.value;        \n        this.setState({fields});\n      }\n    \n      /** Validations */\n      handleValidation(){\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n    \n        //Email\n        if(!fields[\"password\"]){\n          formIsValid = false;\n          errors[\"password\"] = \"Please enter password\";\n        }\n        if(!fields[\"cnfpassword\"]){\n          formIsValid = false;\n          errors[\"cnfpassword\"] = \"Please enter confirm password\";\n        }\n        else if(fields[\"password\"] != fields[\"cnfpassword\"]){\n          formIsValid = false;\n          errors[\"cnfpassword\"] = \"Confirm password does not match\";\n        }\n        \n    \n        this.setState({errors: errors});\n        return formIsValid;\n      }\n      handleSubmit = event => {\n        console.log(\"sfdsffd\",AppConstants.API)\n        //console.log(process.env.REACT_APP_API_URL+'/users/login');\n        event.preventDefault();\n        if(this.handleValidation()){\n          const setadminpwd = {\n            id:this.props.match.params.id,\n            password: this.state.fields['password']\n          }      \n          //axios.post('/users/setadminpassword',setadminpwd)\n          axios.post(AppConstants.API+'/child/setChildPassword',setadminpwd) \n            .then(res => {   \n              console.log(res);   \n             if(res.data.Status == \"Success\"){\n              setTimeout(function()\n              {\n                window.location.href = '/';\n              }, 2000);              \n              this.setState({\n                errMsg: res.data.msg\n              });\n            }\n            else{\n              this.setState({\n                errMsg: res.data.msg\n              });\n            } \n          });   \n        }\n      };\n    \n    \n      \n      \n      render() {\n        //console.log(\"test\", this.props.match.params.id);\n        const {\n          showLogo,\n          onLogoClick,\n        } = this.props;\n        \n        return (\n          <Row\n            style={{\n              height: '100vh',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Col md={6} lg={4}>\n              <Card body>\n             \n                <Form name=\"setpwdform\" onSubmit= {this.handleSubmit.bind(this)}>\n                  {showLogo && (\n                    <div className=\"text-center pb-4\">\n                      <img\n                    src={logo200Image}\n                    className=\"rounded\"\n                    style={{ width: 150,  cursor: 'pointer' }}\n                    alt=\"logo\"\n                    onClick={onLogoClick}\n                  />\n                    </div>\n                  )}\n                  <span className=\"error\" style={{color: 'red'}}>{this.state.errMsg}</span>\n                  <FormGroup>\n                    <Label for=\"password\">Password *</Label>\n                    <Input\n                      type=\"password\"                 \n                      placeholder=\"Password\"\n                      onChange={this.handleChange.bind(this, \"password\")}\n                      name=\"password\"\n                      value={this.state.fields[\"password\"]}\n                    />\n                    <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"password\"]}</span>\n                  </FormGroup> \n                  <FormGroup>\n                    <Label for=\"Confirm Password\">Confirm Password *</Label>\n                    <Input\n                      type=\"password\"                 \n                      placeholder=\"Confirm Password\"\n                      onChange={this.handleChange.bind(this, \"cnfpassword\")}\n                      name=\"cnfpassword\"\n                      value={this.state.fields[\"cnfpassword\"]}\n                    />\n                    <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"cnfpassword\"]}</span>\n                  </FormGroup>                      \n                  <Button\n                    size=\"lg\"\n                    className=\"cst-login-btn border-0 mt-4 btn btn-secondary btn-lg btn-block btn btn-secondary btn-lg btn-block\"\n                    block\n                    onClick={this.handleSubmit}>\n                    Submit\n                  </Button>                         \n                </Form>\n              </Card>\n            </Col>\n          </Row>\n        );\n      }\n    }\n    SetChildPassword.defaultProps = {\n      showLogo: true\n    };\n    SetChildPassword.propTypes = {\n      auth: PropTypes.object.isRequired,\n      errors: PropTypes.object.isRequired\n    };\n    const mapStateToProps = (state) => ({\n      auth: state.auth,\n      errors: state.errors\n    });\nexport default connect(mapStateToProps, {})(SetChildPassword);"]},"metadata":{},"sourceType":"module"}