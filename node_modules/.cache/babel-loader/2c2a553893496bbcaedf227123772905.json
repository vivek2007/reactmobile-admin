{"ast":null,"code":"import _defineProperty from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pradeepkumar/Downloads/meadmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pradeepkumar/Downloads/meadmin/src/components/Layout/Sidebar.js\";\n//import logo200Image from 'assets/img/logo/logo_200.png';\nimport logo200Image from 'assets/img/logo/logo.png';\nimport sidebarBgImage from 'assets/img/sidebar/sidebar-1.jpg'; //import SourceLink from 'components/SourceLink';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { MdPlayArrow, MdKeyboardArrowDown } from 'react-icons/md';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Collapse, Nav, Navbar, NavItem, NavLink as BSNavLink } from 'reactstrap';\nimport bn from 'utils/bemnames';\nvar allItems = [{\n  to: '/stores',\n  name: 'Stores',\n  exact: true,\n  Icon: MdPlayArrow\n}, //{ to: '/Allparents', name: 'Parents', exact: true, Icon: MdPlayArrow },\n{\n  to: '/brands',\n  name: \"Brands\",\n  exact: true,\n  Icon: MdPlayArrow\n}, {\n  to: '/services',\n  name: \"Services\",\n  exact: true,\n  Icon: MdPlayArrow\n}, {\n  to: '/devices',\n  name: \"Devices\",\n  exact: true,\n  Icon: MdPlayArrow\n}];\nvar navItems = [{\n  to: '/dashboard',\n  name: 'dashboard',\n  exact: true,\n  Icon: MdPlayArrow\n}]; // const allTodos = [\n//   //{ to:'/allParentTodos',name:\"Parent Habits\",exact:true,Icon:MdPlayArrow},\n//   { to:'/allMentorTodos',name:\"Mentor Habits\",exact:true,Icon:MdPlayArrow},\n// ]\n\nvar bem = bn.create('sidebar');\n\nvar Sidebar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props)); //console.log(this.props.auth.user.user_type);\n\n    _this.handleClick = function (name) {\n      return function () {\n        _this.setState(function (prevState) {\n          var isOpen = prevState[\"isOpen\".concat(name)];\n          return _defineProperty({}, \"isOpen\".concat(name), !isOpen);\n        });\n      };\n    };\n\n    _this.state = {\n      isOpenComponents: true,\n      isOpenContents: true,\n      isOpenPages: false\n    };\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var ActiveSideBar;\n      ActiveSideBar = /*#__PURE__*/React.createElement(Nav, {\n        vertical: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, navItems.map(function (_ref2, index) {\n        var to = _ref2.to,\n            name = _ref2.name,\n            exact = _ref2.exact,\n            Icon = _ref2.Icon,\n            Class = _ref2.Class;\n        return /*#__PURE__*/React.createElement(NavItem, {\n          key: index,\n          className: bem.e('nav-item'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(BSNavLink, {\n          id: \"navItem-\".concat(name, \"-\").concat(index),\n          className: Class,\n          tag: NavLink,\n          to: to,\n          activeClassName: \"active\",\n          exact: exact,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: bem.e('nav-item-icon'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }\n        }, name)));\n      }), allItems.map(function (_ref3, index) {\n        var to = _ref3.to,\n            name = _ref3.name,\n            exact = _ref3.exact,\n            Icon = _ref3.Icon,\n            Class = _ref3.Class;\n        return /*#__PURE__*/React.createElement(NavItem, {\n          key: index,\n          className: bem.e('nav-item'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(BSNavLink, {\n          id: \"navItem-\".concat(name, \"-\").concat(index),\n          className: Class,\n          tag: NavLink,\n          to: to,\n          activeClassName: \"active\",\n          exact: exact,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: bem.e('nav-item-icon'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, name)));\n      }));\n      return /*#__PURE__*/React.createElement(\"aside\", {\n        className: bem.b(),\n        \"data-image\": sidebarBgImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: bem.e('content'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/dashboard\",\n        className: \"navbar-brand d-flex text-muted\",\n        title: \"Dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo200Image,\n        width: \"160\",\n        height: \"\",\n        className: \"pr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }))), ActiveSideBar)));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component); //export default Sidebar;\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(Sidebar);","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/meadmin/src/components/Layout/Sidebar.js"],"names":["logo200Image","sidebarBgImage","React","connect","PerfectScrollbar","MdPlayArrow","MdKeyboardArrowDown","Link","NavLink","Collapse","Nav","Navbar","NavItem","BSNavLink","bn","allItems","to","name","exact","Icon","navItems","bem","create","Sidebar","props","handleClick","setState","prevState","isOpen","state","isOpenComponents","isOpenContents","isOpenPages","ActiveSideBar","map","index","Class","e","b","Component","mapStateToProps","auth","errors"],"mappings":"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","sourcesContent":["//import logo200Image from 'assets/img/logo/logo_200.png';\nimport logo200Image from 'assets/img/logo/logo.png';\nimport sidebarBgImage from 'assets/img/sidebar/sidebar-1.jpg';\n//import SourceLink from 'components/SourceLink';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport {\n  MdPlayArrow,\n  MdKeyboardArrowDown,\n} from 'react-icons/md';\nimport { Link,NavLink } from 'react-router-dom';\n\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink as BSNavLink,\n} from 'reactstrap';\nimport bn from 'utils/bemnames';\n\n\n\nconst allItems =[\n  { to: '/stores', name: 'Stores', exact: true, Icon: MdPlayArrow },\n  //{ to: '/Allparents', name: 'Parents', exact: true, Icon: MdPlayArrow },\n  { to:'/brands',name:\"Brands\",exact:true,Icon:MdPlayArrow},\n  { to:'/services',name:\"Services\",exact:true,Icon:MdPlayArrow},\n  { to:'/devices',name:\"Devices\",exact:true,Icon:MdPlayArrow}\n  \n]\n\nconst navItems = [\n  { to: '/dashboard', name: 'dashboard', exact: true, Icon: MdPlayArrow },  \n];\n\n\n// const allTodos = [\n//   //{ to:'/allParentTodos',name:\"Parent Habits\",exact:true,Icon:MdPlayArrow},\n//   { to:'/allMentorTodos',name:\"Mentor Habits\",exact:true,Icon:MdPlayArrow},\n// ]\nconst bem = bn.create('sidebar');\n\nclass Sidebar extends React.Component {\n\t constructor(props){\n    super(props);\n    //console.log(this.props.auth.user.user_type);\n  this.state = {\n    isOpenComponents: true,\n    isOpenContents: true,\n    isOpenPages: false, \n  };\n}\n\n  handleClick = name => () => {\n    this.setState(prevState => {\n      const isOpen = prevState[`isOpen${name}`];\n\n      return {\n        [`isOpen${name}`]: !isOpen,\n      };\n    });\n  };\n\n  render() {\n    let ActiveSideBar;\n    ActiveSideBar=  <Nav vertical>\n    {navItems.map(({ to, name, exact, Icon, Class }, index) => (\n      <NavItem key={index} className={bem.e('nav-item')}>\n        <BSNavLink\n          id={`navItem-${name}-${index}`}\n          className={Class}\n          tag={NavLink}\n          to={to}\n          activeClassName=\"active\"\n          exact={exact}>\n          <Icon className={bem.e('nav-item-icon')} />\n          <span className=\"\">{name}</span>\n        </BSNavLink>\n      </NavItem>\n    ))}\n   \n    \n    {/* <Collapse isOpen={this.state.isOpenContents}> */}\n      {allItems.map(({ to, name, exact, Icon, Class }, index) => (\n        <NavItem key={index} className={bem.e('nav-item')}>\n          <BSNavLink\n            id={`navItem-${name}-${index}`}\n            className={Class}\n            tag={NavLink}\n            to={to}\n            activeClassName=\"active\"\n            exact={exact}>\n            <Icon className={bem.e('nav-item-icon')} />\n            <span className=\"\">{name}</span>\n          </BSNavLink>\n        </NavItem>\n      ))}\n    {/* </Collapse> */}\n    {/* <NavItem\n        className={bem.e('nav-item')}\n        onClick={this.handleClick('TodosPages')}>\n        <BSNavLink className={bem.e('nav-item-collapse')}>\n          <div className=\"d-flex\">\n            <MdPlayArrow className={bem.e('nav-item-icon')} />\n            <span className=\"\">Habits</span>\n          </div>\n          <MdKeyboardArrowDown\n            className={bem.e('nav-item-icon')}\n            style={{\n              padding: 0,\n              transform: this.state.isOpenTodosPages\n                ? 'rotate(0deg)'\n                : 'rotate(-90deg)',\n              transitionDuration: '0.3s',\n              transitionProperty: 'transform',\n            }}\n          />\n        </BSNavLink>\n      </NavItem>\n       */}\n    {/* <Collapse isOpen={this.state.isOpenTodosPages}>\n      {allTodos.map(({ to, name, exact, Icon, Class }, index) => (\n        <NavItem key={index} className={bem.e('nav-item')}>\n          <BSNavLink\n            id={`navItem-${name}-${index}`}\n            className={Class}\n            tag={NavLink}\n            to={to}\n            activeClassName=\"active\"\n            exact={exact}>\n            <Icon className={bem.e('nav-item-icon')} />\n            <span className=\"\">{name}</span>\n          </BSNavLink>\n        </NavItem>\n      ))}\n    </Collapse> */}\n\n    {/* <Collapse isOpen={this.state.isOpenContents}> */}\n      {/* {allAfterTodo.map(({ to, name, exact, Icon, Class }, index) => (\n        <NavItem key={index} className={bem.e('nav-item')}>\n          <BSNavLink\n            id={`navItem-${name}-${index}`}\n            className={Class}\n            tag={NavLink}\n            to={to}\n            activeClassName=\"active\"\n            exact={exact}>\n            <Icon className={bem.e('nav-item-icon')} />\n            <span className=\"\">{name}</span>\n          </BSNavLink>\n        </NavItem>\n      ))} */}\n    {/* </Collapse> */}\n           \n\n    {/* <NavItem\n        className={bem.e('nav-item')}\n        onClick={this.handleClick('HelpPages')}>\n        <BSNavLink className={bem.e('nav-item-collapse')}>\n          <div className=\"d-flex\">\n          \n            <MdPlayArrow className={bem.e('nav-item-icon')} />\n            <span className=\"\">Help</span>\n          </div>\n          <MdKeyboardArrowDown\n            className={bem.e('nav-item-icon')}\n            style={{\n              padding: 0,\n              transform: this.state.isOpenHelpPages\n                ? 'rotate(0deg)'\n                : 'rotate(-90deg)',\n              transitionDuration: '0.3s',\n              transitionProperty: 'transform',\n            }}\n          />\n        </BSNavLink>\n      </NavItem> */}\n    {/* <Collapse isOpen={this.state.isOpenHelpPages}>\n      {allHelp.map(({ to, name, exact, Icon, Class }, index) => (\n        <NavItem key={index} className={bem.e('nav-item')}>\n          <BSNavLink\n            id={`navItem-${name}-${index}`}\n            className={Class}\n            tag={NavLink}\n            to={to}\n            activeClassName=\"active\"\n            exact={exact}>\n            <Icon className={bem.e('nav-item-icon')} />\n            <span className=\"\">{name}</span>\n          </BSNavLink>\n        </NavItem>\n      ))}\n    </Collapse> */}\n\n\n    {/* <Collapse isOpen={this.state.isOpenContents}>\n            {allAfterHelp.map(({ to, name, exact, Icon, Class }, index) => (\n              <NavItem key={index} className={bem.e('nav-item')}>\n                <BSNavLink\n                  id={`navItem-${name}-${index}`}\n                  className={Class}\n                  tag={NavLink}\n                  to={to}\n                  activeClassName=\"active\"\n                  exact={exact}>\n                  <Icon className={bem.e('nav-item-icon')} />\n                  <span className=\"\">{name}</span>\n                </BSNavLink>\n              </NavItem>\n            ))}\n          </Collapse>\n\n          {!this.props.auth.user.user_type ?  <Collapse isOpen={this.state.isOpenContents}>\n      {navAdmin.map(({ to, name, exact, Icon, Class }, index) => (\n        <NavItem key={index} className={bem.e('nav-item')}>\n          <BSNavLink\n            id={`navItem-${name}-${index}`}\n            className={Class}\n            tag={NavLink}\n            to={to}\n            activeClassName=\"active\"\n            exact={exact}>\n            <Icon className={bem.e('nav-item-icon')} />\n            <span className=\"\">{name}</span>\n          </BSNavLink>\n        </NavItem>\n      ))}\n    </Collapse>:\"\"} */}\n\n    {/* <Collapse isOpen={this.state.isOpenContents}>\n            {allAfterCms.map(({ to, name, exact, Icon, Class }, index) => (\n              <NavItem key={index} className={bem.e('nav-item')} style={{'display':'none'}}>\n                <BSNavLink\n                  id={`navItem-${name}-${index}`}\n                  className={Class}\n                  tag={NavLink}\n                  to={to}\n                  activeClassName=\"active\"\n                  exact={exact}>\n                  <Icon className={bem.e('nav-item-icon')} />\n                  <span className=\"\">{name}</span>\n                </BSNavLink>\n              </NavItem>\n            ))}\n          </Collapse> */}\n    \n     </Nav>\n\t  \n    return (\n      <aside className={bem.b()}\n       data-image={sidebarBgImage}\n       >\n        \n        <div className={bem.e('content')}>\n        <PerfectScrollbar>\n          <Navbar>\n            {/* <SourceLink className=\"navbar-brand d-flex\"> */}\n            <Link to={\"/dashboard\"} className=\"navbar-brand d-flex text-muted\" title=\"Dashboard\">\n              <img\n                src={logo200Image}\n                width=\"160\"\n                height=\"\"\n                className=\"pr-2\"\n                alt=\"\"\n              />\n                </Link>\n              \n            {/* </SourceLink> */}\n          </Navbar>\n          \n\n           \n            { /* <Collapse isOpen={this.state.isOpenComponents}>\n              {navComponents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}>\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse>\n            \n            <Collapse isOpen={this.state.isOpenComponents}>\n              {navComponents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}>\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse>\n\n            <Collapse isOpen={this.state.isOpenContents}>\n              {navContents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}>\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse>\n            <Collapse isOpen={this.state.isOpenContents}>\n              {navContents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}>\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse>\n\n            {/* <NavItem\n              className={bem.e('nav-item')}\n              onClick={this.handleClick('Pages')}>\n              <BSNavLink className={bem.e('nav-item-collapse')}>\n                <div className=\"d-flex\">\n                  <MdPages className={bem.e('nav-item-icon')} />\n                  <span className=\"\">Pages</span>\n                </div>\n                <MdKeyboardArrowDown\n                  className={bem.e('nav-item-icon')}\n                  style={{\n                    padding: 0,\n                    transform: this.state.isOpenPages\n                      ? 'rotate(0deg)'\n                      : 'rotate(-90deg)',\n                    transitionDuration: '0.3s',\n                    transitionProperty: 'transform',\n                  }}\n                />\n              </BSNavLink>\n            </NavItem> */}\n            {ActiveSideBar}\n            {/* <Collapse isOpen={this.state.isOpenPages}>\n              {pageContents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}>\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse> */}\n          {/* </Nav> */}\n          \n          </PerfectScrollbar>\n        </div>\n        \n      </aside>\n    );\n  }\n}\n\n//export default Sidebar;\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport  default connect(mapStateToProps, {})(Sidebar);\n\n"]},"metadata":{},"sourceType":"module"}