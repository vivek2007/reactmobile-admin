{"ast":null,"code":"import _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/Help/helps.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport Page from 'components/Page';\nimport { Card, CardBody, Row, UncontrolledTooltip } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { MdRemoveRedEye } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Workbook from 'react-xlsx-workbook';\nimport Loader from 'react-loader';\nvar data1 = [];\n\nvar HelpQuestions = /*#__PURE__*/function (_React$Component) {\n  _inherits(HelpQuestions, _React$Component);\n\n  function HelpQuestions() {\n    var _this;\n\n    _classCallCheck(this, HelpQuestions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HelpQuestions).call(this));\n\n    _this.toggleSwitch = function (e) {\n      _this.setState(function (prevState) {\n        return {\n          switched: !prevState.switched\n        };\n      });\n    };\n\n    _this.createCustomInsertButton = function (onClick) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.state = {\n      helps: [],\n      totalDataSize: 0,\n      sizePerPage: 10,\n      currentPage: 1,\n      sortName: '',\n      sortOrder: '',\n      searchText: '',\n      page_loader: false\n    };\n    _this.onPageChange = _this.onPageChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSizePerPageList = _this.onSizePerPageList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSortChange = _this.onSortChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSearchChange = _this.onSearchChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderShowsTotal = _this.renderShowsTotal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HelpQuestions, [{\n    key: \"renderShowsTotal\",\n    value: function renderShowsTotal(start, to, paginationShowsTotal) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, \"Showing rows \", start, \" to \", to, \" of \", paginationShowsTotal);\n    }\n  }, {\n    key: \"onSizePerPageList\",\n    value: function onSizePerPageList(sizePerPage) {\n      var page = 1;\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(page, sizePerPage) {\n      this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText);\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(sortName, sortOrder) {\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText);\n    }\n  }, {\n    key: \"onSearchChange\",\n    value: function onSearchChange(searchText, colInfos, multiColumnSearch) {\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else {\n        searchText = '';\n      }\n\n      var page = 1;\n      this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      data1 = [];\n      this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n      var element = document.getElementById(\"navItem-Clients-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Mentors-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Cms-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Programs-2\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Events-1\");\n      element.classList.remove(\"active\");\n\n      if (!this.props.auth.user.user_type) {\n        element = document.getElementById(\"navItem-Admins-0\");\n        element.classList.remove(\"active\");\n      }\n\n      var element = document.getElementById(\"navItem-dashboard-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Resources-0\");\n      element.classList.remove(\"active\"); // var element = document.getElementById(\"navItem-Client Habits-0\");\n      // element.classList.remove(\"active\");\n\n      var element = document.getElementById(\"navItem-Habits-3\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help Sugesstions-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help-1\");\n      element.classList.add(\"active\");\n    }\n  }, {\n    key: \"handleActions\",\n    value: function handleActions(cell, row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ca-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"tooltipview-\".concat(row._id),\n        style: {\n          'fontSize': 12\n        },\n        to: \"/viewhelp/\" + row._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MdRemoveRedEye, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n        placement: \"top\",\n        target: \"tooltipview-\".concat(row._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"View Help\"))));\n    }\n  }, {\n    key: \"handleName\",\n    value: function handleName(cell, row) {\n      if (row.user_type == 'parent' || row.user_type == 'Parent') {\n        return /*#__PURE__*/React.createElement(Link, {\n          style: {\n            'paddingTop': 0,\n            'paddingBottom': 0\n          },\n          to: \"/viewParent/\" + row.parent_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        }, row.name);\n      } else if (row.user_type == 'mentor' || row.user_type == 'Mentor') {\n        return /*#__PURE__*/React.createElement(Link, {\n          style: {\n            'paddingTop': 0,\n            'paddingBottom': 0\n          },\n          to: \"/viewMentor/\" + row.mentor_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }\n        }, row.name);\n      } else {\n        return /*#__PURE__*/React.createElement(Link, {\n          style: {\n            'paddingTop': 0,\n            'paddingBottom': 0\n          },\n          to: \"/viewChild/\" + row.child_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        }, row.name);\n      }\n    }\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(cell, row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ca-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, row.status == false && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          'paddingTop': 0,\n          'paddingBottom': 0\n        },\n        className: \"mr-1 badge badge-warning p-1\",\n        title: \"Resend Invite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, \"Inactive\"), row.status == true && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          'paddingTop': 0,\n          'paddingBottom': 0\n        },\n        className: \"mr-1 badge badge-success  p-1\",\n        title: \"Resend Invite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, \"Active\"));\n    }\n  }, {\n    key: \"updateProvidersList\",\n    value: function updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText) {\n      var _this2 = this;\n\n      if (searchText && searchText !== \"\") {\n        searchText = searchText;\n      } else if (this.state.searchText && this.state.searchText !== \"\") {\n        searchText = this.state.searchText;\n      } else {\n        searchText = '';\n      }\n\n      var tablefilterdata = {\n        page: page,\n        sizeperpage: sizePerPage,\n        sortname: sortName,\n        sortorder: sortOrder,\n        serchtext: searchText,\n        defaultSearchText: searchText\n      };\n      axios.post(AppConstants.API + '/helpQues/getAllHelps', tablefilterdata).then(function (res) {\n        if (res.data.Status === 'Success') {\n          // if(res.data.data.length>0){\n          //     {res.data.data.map((help, i) => {\n          //         var obj={};\n          //         obj['_id'] = help._id;\n          //         obj['question'] = help.question;\n          //         obj['helpdate'] = help.helpdate;\n          //         if(help.child_id){\n          //             obj['user_id'] = help.child_id;\n          //         }else if(help.parent_id){\n          //             obj['user_id'] = help.parent_id;\n          //         }else{\n          //             obj['user_id'] = help.mentor_id;\n          //         }\n          //         if(help.child_name){\n          //             obj['name'] = help.child_name; \n          //         }else if(help.parent_name){\n          //             obj['name'] = help.parent_name; \n          //         }\n          //         else{\n          //             obj['name'] = help.mentor_name; \n          //         }\n          //         if(help.childuser_type){\n          //             obj['user_type'] = help.childuser_type;\n          //         }else if(help.parent_usertype){\n          //             obj['user_type'] = help.parent_usertype;\n          //         }\n          //         else{\n          //             obj['user_type'] = help.mentor_type; \n          //         }\n          //         data1.push(obj);\n          //         })\n          //     }\n          //     this.setState({helps:data1})\n          // }\n          _this2.setState({\n            helps: res.data.data,\n            //totalDataSize: res.data.total_records,\n            currentPage: page,\n            sizePerPage: sizePerPage,\n            sortName: sortName,\n            sortOrder: sortOrder,\n            serchtext: searchText,\n            defaultSearchText: searchText,\n            page_loader: true\n          });\n        }\n      });\n      axios.post(AppConstants.API + '/helpQues/getAllhelpCount', tablefilterdata).then(function (res) {\n        if (res.data.Status === 'Success') {\n          _this2.setState({\n            totalDataSize: res.data.data,\n            serchText: searchText,\n            defaultSearchText: searchText\n          });\n        }\n      });\n      this.setState({\n        paginationShowsTotal: [this.state.helps.length]\n      });\n    }\n  }, {\n    key: \"handleDescription\",\n    value: function handleDescription(cell, row) {\n      console.log(\"row\", row.user_type);\n\n      if (row.user_type) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 18\n          }\n        }, \" \", row.user_type == 'Student' ? 'Client' : '');\n      } //  <div dangerouslySetInnerHTML={{__html: row.description}} />;\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.hepls);\n      var options = {\n        insertText: \"New\",\n        deleteText: 'Delete',\n        saveText: 'Save',\n        closeText: 'Close',\n        insertBtn: this.createCustomInsertButton,\n        page: this.state.currentPage,\n        // which page you want to show as default\n        sizePerPageList: [5, 10, 20, 50],\n        // you can change the dropdown list for size per page\n        sizePerPage: this.state.sizePerPage,\n        // which size per page you want to locate as default\n        pageStartIndex: 1,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        paginationShowsTotal: this.renderShowsTotal,\n        //this.renderShowsTotal- Accept bool or function\n        // paginationShowsTotal : this.state.helps.length,\n        paginationPosition: 'bottom',\n        // default is bottom, top and both is all available\n        onPageChange: this.onPageChange,\n        onSizePerPageList: this.onSizePerPageList,\n        onSortChange: this.onSortChange,\n        onSearchChange: this.onSearchChange,\n        insertModal: this.createCustomModal\n      };\n      return /*#__PURE__*/React.createElement(Loader, {\n        loaded: this.state.page_loader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Page, {\n        title: \"Help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ReactTitle, {\n        title: \"Help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cst-breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }, \"Dashboard\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }, \"Help\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(BootstrapTable, {\n        data: this.state.helps,\n        remote: true,\n        search: true,\n        pagination: true,\n        fetchInfo: {\n          dataTotalSize: this.state.totalDataSize\n        },\n        multiColumnSearch: true,\n        options: options,\n        insertRow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"_id\",\n        isKey: true,\n        searchable: false,\n        dataSort: true,\n        hidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 37\n        }\n      }, \"Help ID\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"question\",\n        dataSort: true,\n        width: '30%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 37\n        }\n      }, \"Question\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"user_type\",\n        dataSort: true,\n        dataFormat: this.handleDescription.bind(this),\n        width: '10%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 37\n        }\n      }, \"User Type\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        dataFormat: this.handleName.bind(this),\n        dataSort: true,\n        width: '15%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 37\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"helpdate\",\n        dataSort: true,\n        width: '13%',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }\n      }, \"Created Date\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n        dataField: \"actions\",\n        width: '10%',\n        dataFormat: this.handleActions.bind(this),\n        export: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 37\n        }\n      }, \"Actions\"))))))));\n    }\n  }]);\n\n  return HelpQuestions;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(HelpQuestions);","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/Help/helps.js"],"names":["React","Link","AppConstants","ReactTitle","Page","Card","CardBody","Row","UncontrolledTooltip","BootstrapTable","TableHeaderColumn","MdRemoveRedEye","connect","axios","Workbook","Loader","data1","HelpQuestions","toggleSwitch","e","setState","prevState","switched","createCustomInsertButton","onClick","state","helps","totalDataSize","sizePerPage","currentPage","sortName","sortOrder","searchText","page_loader","onPageChange","bind","onSizePerPageList","onSortChange","onSearchChange","renderShowsTotal","start","to","paginationShowsTotal","page","updateProvidersList","defaultSearchText","colInfos","multiColumnSearch","element","document","getElementById","classList","remove","props","auth","user","user_type","add","cell","row","_id","parent_id","name","mentor_id","child_id","status","tablefilterdata","sizeperpage","sortname","sortorder","serchtext","post","API","then","res","data","Status","serchText","length","console","log","hepls","options","insertText","deleteText","saveText","closeText","insertBtn","sizePerPageList","pageStartIndex","paginationSize","paginationPosition","insertModal","createCustomModal","dataTotalSize","handleDescription","handleName","handleActions","Component","mapStateToProps","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport Page from 'components/Page';\nimport { Card, CardBody, Row,UncontrolledTooltip} from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { MdRemoveRedEye } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Workbook from 'react-xlsx-workbook';\nimport Loader from 'react-loader';\nlet data1 = [];\nclass HelpQuestions extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            helps : [],\n            totalDataSize: 0,\n            sizePerPage: 10,\n            currentPage: 1,\n            sortName: '',\n            sortOrder: '',\n            searchText: '',\n            page_loader : false,\n        }\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onSizePerPageList = this.onSizePerPageList.bind(this);\n        this.onSortChange = this.onSortChange.bind(this);\n        this.onSearchChange = this.onSearchChange.bind(this); \n        this.renderShowsTotal = this.renderShowsTotal.bind(this); \n    }\n    renderShowsTotal(start, to, paginationShowsTotal) {\n        return (\n        <span>\n           Showing rows { start } to { to } of { paginationShowsTotal }\n        </span>\n        );\n    }\n    onSizePerPageList(sizePerPage) {\n        let page = 1;\n        this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n    }\n    onPageChange(page, sizePerPage) {\n        this.updateProvidersList(page, sizePerPage, this.state.sortName, this.state.sortOrder, this.state.defaultSearchText);\n    }\n    onSortChange(sortName, sortOrder) {  \n        let page = 1;\n        this.updateProvidersList(page, this.state.sizePerPage, sortName, sortOrder, this.state.searchText);\n    }\n    onSearchChange(searchText, colInfos, multiColumnSearch) {\n        if(searchText && searchText !== \"\") {\n        searchText = searchText;\n        }else  {  \n        searchText = '';\n        }\n        let page = 1;\n        this.updateProvidersList(page, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, searchText);\n    }\n    componentDidMount(){\n        data1 = [];\n        this.updateProvidersList(this.state.currentPage, this.state.sizePerPage, this.state.sortName, this.state.sortOrder, this.state.searchText);\n        var element = document.getElementById(\"navItem-Clients-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Mentors-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Cms-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Programs-2\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Events-1\");\n      element.classList.remove(\"active\");\n      if(!this.props.auth.user.user_type){\n        element = document.getElementById(\"navItem-Admins-0\");\n        element.classList.remove(\"active\");\n      }\n      var element = document.getElementById(\"navItem-dashboard-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Resources-0\");\n      element.classList.remove(\"active\");\n      // var element = document.getElementById(\"navItem-Client Habits-0\");\n      // element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Habits-3\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help-1\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help Sugesstions-0\");\n      element.classList.remove(\"active\");\n      var element = document.getElementById(\"navItem-Help-1\");\n      element.classList.add(\"active\");\n    }\n    \n    handleActions(cell, row){\n        return (\n        <div className=\"ca-controls\">\n            <Link id={`${\"tooltipview-\"}${row._id}`} style={{ 'fontSize': 12 }} to={\"/viewhelp/\" + row._id}>\n                <button className=\"btn btn-success\">\n                    <MdRemoveRedEye />\n                    <UncontrolledTooltip placement=\"top\"target={`${\"tooltipview-\"}${row._id}`}>\n                        View Help \n                    </UncontrolledTooltip>\n                </button>\n            </Link>\n        </div>\n        );\n    }\n    toggleSwitch = (e) => {\n        this.setState(prevState => {\n          return {\n            switched: !prevState.switched\n          };\n        });\n      };\n      handleName(cell,row){\n        if(row.user_type == 'parent' || row.user_type == 'Parent'){\n            return(\n                <Link style={{'paddingTop': 0,\n                'paddingBottom': 0}}  to={\"/viewParent/\" + row.parent_id}>\n                  {row.name}\n                </Link>\n              )\n        }else if(row.user_type == 'mentor' || row.user_type == 'Mentor'){\n            return(\n                <Link style={{'paddingTop': 0,\n                'paddingBottom': 0}}  to={\"/viewMentor/\" + row.mentor_id}>\n                  {row.name}\n                </Link>\n              )\n        }else{\n            return(\n                <Link style={{'paddingTop': 0,\n                'paddingBottom': 0}}  to={\"/viewChild/\" + row.child_id}>\n                  {row.name}\n                </Link>\n              ) \n        }\n       \n    }\n    handleStatus(cell, row){\n        return (<div className=\"ca-controls\">\n        {(row.status == false) && \n        <span style={{'paddingTop': 0,\n          'paddingBottom': 0}} className=\"mr-1 badge badge-warning p-1\" title=\"Resend Invite\">Inactive</span>\n        }\n        {(row.status == true) && \n        <span style={{'paddingTop': 0,\n          'paddingBottom': 0}} className=\"mr-1 badge badge-success  p-1\" title=\"Resend Invite\">Active</span>\n        }\n        </div>);  \n    }\n    updateProvidersList(page, sizePerPage, sortName, sortOrder, searchText){\n        if(searchText && searchText !== \"\") {\n          searchText = searchText;\n        }else if(this.state.searchText && this.state.searchText !== \"\") {\n          searchText = this.state.searchText;\n        }else {\n          searchText = '';\n        }\n        \n        let tablefilterdata = {\n          page: page,\n          sizeperpage: sizePerPage,\n          sortname: sortName,\n          sortorder: sortOrder,\n          serchtext: searchText,\n          defaultSearchText: searchText\n        };\n        axios.post(AppConstants.API+'/helpQues/getAllHelps', tablefilterdata).then(res => {\n            if (res.data.Status === 'Success') {\n                // if(res.data.data.length>0){\n                //     {res.data.data.map((help, i) => {\n                //         var obj={};\n                //         obj['_id'] = help._id;\n                //         obj['question'] = help.question;\n                //         obj['helpdate'] = help.helpdate;\n                //         if(help.child_id){\n                //             obj['user_id'] = help.child_id;\n                //         }else if(help.parent_id){\n                //             obj['user_id'] = help.parent_id;\n                //         }else{\n                //             obj['user_id'] = help.mentor_id;\n                //         }\n                //         if(help.child_name){\n                //             obj['name'] = help.child_name; \n                //         }else if(help.parent_name){\n                //             obj['name'] = help.parent_name; \n                //         }\n                //         else{\n                //             obj['name'] = help.mentor_name; \n                //         }\n                //         if(help.childuser_type){\n                //             obj['user_type'] = help.childuser_type;\n                //         }else if(help.parent_usertype){\n                //             obj['user_type'] = help.parent_usertype;\n                //         }\n                //         else{\n                //             obj['user_type'] = help.mentor_type; \n                //         }\n                //         data1.push(obj);\n                //         })\n                //     }\n                //     this.setState({helps:data1})\n                // }\n              this.setState({\n                helps: res.data.data,\n                //totalDataSize: res.data.total_records,\n                currentPage: page,\n                sizePerPage: sizePerPage,\n                sortName: sortName,\n                sortOrder: sortOrder,\n                serchtext: searchText,\n                defaultSearchText: searchText,\n                page_loader : true\n      \n              });\n            }         \n          });\n        axios.post(AppConstants.API+'/helpQues/getAllhelpCount', tablefilterdata).then(res => {\n          if (res.data.Status === 'Success') {\n            this.setState({\n              totalDataSize: res.data.data,\n               serchText: searchText,\n               defaultSearchText: searchText\n            });\n          }         \n        });\n        this.setState({\n          paginationShowsTotal: [this.state.helps.length]\n        });\n    }\n    handleDescription (cell, row){\n      console.log(\"row\",row.user_type)\n      if(row.user_type){\n        return   <span> { row.user_type=='Student'  ?'Client': ''}</span>\n      }\n        //  <div dangerouslySetInnerHTML={{__html: row.description}} />;\n    }\n    createCustomInsertButton = (onClick) => {\n        return (\n            <span>\n              {/* {this.state.helps.length>0?\n                <Workbook filename=\"ExportHelp.xlsx\" element={<span className=\"btn btn-secondary editbtn\" title=\"Export Help\">Export Help</span>}>\n                <Workbook.Sheet data={this.state.helps} name=\"Sheet A\">\n                <Workbook.Column label=\"Question\" value=\"question\"/>\n                <Workbook.Column label=\"Name\" value=\"name\"/>\n                <Workbook.Column label=\"User Type\" value=\"user_type\"/>\n                <Workbook.Column label=\"Created Date\" value=\"helpdate\"/>\n                </Workbook.Sheet>\n                </Workbook>\n                :\"\"} */}\n            </span>\n        );\n    }\n    render(){\n        console.log(this.state.hepls)\n        const options = {\n\n            insertText: \"New\",\n      \n            deleteText: 'Delete',\n      \n            saveText: 'Save',\n      \n            closeText: 'Close',\n      \n            insertBtn: this.createCustomInsertButton,\n          \n            page: this.state.currentPage,  // which page you want to show as default\n      \n            sizePerPageList: [ 5, 10, 20, 50], // you can change the dropdown list for size per page\n      \n            sizePerPage: this.state.sizePerPage,  // which size per page you want to locate as default\n      \n            pageStartIndex: 1, // where to start counting the pages\n      \n            paginationSize: 3,  // the pagination bar size.\n      \n            paginationShowsTotal: this.renderShowsTotal,  //this.renderShowsTotal- Accept bool or function\n            // paginationShowsTotal : this.state.helps.length,\n\n            paginationPosition: 'bottom',  // default is bottom, top and both is all available\n      \n            onPageChange: this.onPageChange,\n      \n            onSizePerPageList: this.onSizePerPageList,\n      \n            onSortChange: this.onSortChange,\n      \n            onSearchChange: this.onSearchChange,\n      \n            insertModal: this.createCustomModal, \n      \n        }\n      \n        return(\n          <Loader loaded={this.state.page_loader} > \n            <Page title=\"Help\">\n                <ReactTitle title=\"Help\"/>\n                <ul className=\"cst-breadcrumb\">\n                <li><Link to={'/dashboard'}>Dashboard</Link> </li>\n                <li>Help</li>\n                </ul>\n                <Row>\n                    <Card>\n                        <CardBody>\n                            <div>\n                            {/* <BootstrapTable data={this.state.helps}\n                            // search={ true } pagination={ true } multiColumnSearch={ true } options={ options }\n                            remote = { true } search={true} pagination={true} fetchInfo={ { dataTotalSize: this.state.totalDataSize } }multiColumnSearch={true} options={options}\n                            insertRow\n                            > */}\n                            <BootstrapTable data={this.state.helps} remote = { true } search={true} pagination={true} fetchInfo={ { dataTotalSize: this.state.totalDataSize } }multiColumnSearch={true} options={options}\n                            insertRow\n                            >\n                                    <TableHeaderColumn dataField='_id' isKey={true} searchable={false} dataSort={true} hidden={true}>Help ID</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='question' dataSort={true} width={'30%'}>Question</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='user_type' dataSort={true} dataFormat={this.handleDescription.bind(this)} width={'10%'}>User Type</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='name' dataFormat={this.handleName.bind(this)} dataSort={true} width={'15%'}>Name</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='helpdate' dataSort={true} width={'13%'}>Created Date</TableHeaderColumn>\n                                    <TableHeaderColumn dataField='actions' width={'10%'} dataFormat={this.handleActions.bind(this)} export={false}>Actions</TableHeaderColumn>\n                                </BootstrapTable>\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Row>\n            </Page></Loader>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(mapStateToProps, {})(HelpQuestions);"]},"metadata":{},"sourceType":"module"}