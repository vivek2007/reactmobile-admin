{"ast":null,"code":"import _defineProperty from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/Resources/addResource.js\";\nimport React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport { ReactTitle } from 'react-meta-tags';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Alert, Card, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport CKEditor from \"react-ckeditor-component\";\nvar prg1 = [];\n\nvar AddResource = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddResource, _React$Component);\n\n  function AddResource() {\n    var _this;\n\n    _classCallCheck(this, AddResource);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddResource).call(this));\n    _this.state = {\n      title: \"\",\n      description: \"\",\n      document: \"\",\n      status: true,\n      loading: \"\",\n      errors: {},\n      programs: [],\n      seletedprogram: [],\n      title_error: false,\n      description_error: false,\n      status_error: false,\n      prog_error: false,\n      audio: \"\",\n      video: \"\",\n      thumbnail: \"\",\n      media: \"\",\n      file_type: '',\n      content: '',\n      audiolink: '',\n      options: [{\n        value: 'Student',\n        text: 'Client',\n        isChecked: false\n      }, // { value: 'parent', text: 'Parent',isChecked: false },\n      {\n        value: 'Mentor',\n        text: 'Mentor',\n        isChecked: false\n      }],\n      usertype_error: false,\n      thumbnali_error: false,\n      video_error: false,\n      audio_error: false,\n      note_color: \"\"\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRemove = _this.onRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFileChange = _this.handleFileChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFileChange1 = _this.handleFileChange1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleThumbnail = _this.handleThumbnail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUsertpe = _this.handleUsertpe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddResource, [{\n    key: \"onChange\",\n    value: function onChange(evt) {\n      // console.log(evt)\n      var newContent = evt.editor.getData();\n      this.setState({\n        content: newContent\n      });\n\n      if (newContent) {\n        this.setState({\n          description_error: false\n        });\n      }\n    }\n  }, {\n    key: \"handleThumbnail\",\n    value: function handleThumbnail(e) {\n      this.setState({\n        thumbnail: e.target.files[0],\n        thumbnail_error: false\n      });\n    }\n  }, {\n    key: \"handleStatusChange\",\n    value: function handleStatusChange(checked) {\n      this.setState({\n        status: checked\n      });\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(selectedList, selectedItem) {\n      this.setState({\n        seletedprogram: selectedList\n      });\n\n      if (selectedList) {\n        this.setState({\n          prog_error: false\n        });\n      }\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(selectedList, removedItem) {\n      if (selectedList == \"\") {\n        this.setState({\n          prog_error: true\n        });\n      }\n    }\n  }, {\n    key: \"handleFileChange\",\n    value: function handleFileChange(e) {\n      console.log(e.target.files[0]);\n      this.setState({\n        document: e.target.files[0],\n        document_error: false\n      });\n    }\n  }, {\n    key: \"handleFileChange1\",\n    value: function handleFileChange1(e) {\n      this.setState({\n        audio: e.target.files[0],\n        audio_error: false\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      if (e.target.name == 'file_type' && e.target.value == 'audio') {\n        this.setState({\n          video: \"\",\n          document: \"\"\n        });\n      }\n\n      if (e.target.name == 'file_type' && e.target.value == 'video') {\n        this.setState({\n          audio: \"\",\n          document: \"\",\n          audiolink: \"\"\n        });\n      }\n\n      if (e.target.name == 'file_type' && e.target.value == 'document') {\n        this.setState({\n          audio: \"\",\n          video: \"\",\n          audiolink: \"\"\n        });\n      } //         file_type audio\n      //  file_type video\n      //  file_type document\n\n\n      if (e.target.name == \"title\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            title_error: false\n          });\n        }\n      }\n\n      if (e.target.name == \"video\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            video_error: false\n          });\n        }\n      }\n\n      if (e.target.name == \"audiolink\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            audio_error: false\n          });\n        }\n      }\n\n      if (e.target.name == \"description\") {\n        this.setState({\n          description_error: false\n        });\n      }\n\n      this.setState(_defineProperty({}, e.target.name, e.target.value)); // if(this.state.media)\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var errors = {};\n      var formIsValid = true;\n\n      if (this.state.audio && this.state.audiolink) {\n        console.log(\"audio or video\");\n        formIsValid = false;\n        errors[\"audio\"] = \"Please add audio link or upload audio file\"; // ReactDOM.findDOMNode(this.refs.video).focus();\n      }\n\n      if (this.state.audio != '' && this.state.audio != undefined && this.state.audio.type != \"audio/mpeg\") {\n        formIsValid = false;\n        errors[\"audio\"] = \"Please upload mp3 file\"; // ReactDOM.findDOMNode(this.refs.document1).focus();\n      }\n\n      if (this.state.document != '' && this.state.document != undefined && this.state.document.type != \"application/pdf\" && this.state.document.type != \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\") {\n        formIsValid = false;\n        errors[\"document\"] = \"Please upload pdf or document\"; // ReactDOM.findDOMNode(this.refs.document1).focus();\n      }\n\n      if (!this.state.document && !this.state.video && !this.state.audio && !this.state.audiolink) {\n        // this.setState({note_color:\"#ff0000\"})\n        formIsValid = false;\n        errors[\"note_color\"] = \"Please upload atleast one media file (Ex: audio | video | document).\";\n      }\n\n      if (this.state.thumbnail && this.state.thumbnail.name && !this.state.thumbnail.name.match(/.(jpg|jpeg|png)$/i)) {\n        formIsValid = false;\n        errors[\"thumbnail\"] = \"Please select valid image (Ex: jpg | jpeg | png )\"; // ReactDOM.findDOMNode(this.refs.thumbnail).focus();\n      }\n\n      if (this.state.seletedprogram.length == 0) {\n        formIsValid = false;\n        errors[\"seletedprogram\"] = \"Please select program\";\n      }\n\n      if (!this.state.content) {\n        formIsValid = false;\n        errors[\"description\"] = \"Please enter description\"; // ReactDOM.findDOMNode(this.refs.description).focus();\n      } // var user_tye = []\n      // this.state.options.map((option,i)=>{\n      //     console.log(option.isChecked,option.value)\n      //     if(option.isChecked == true){\n      //         user_tye.push(option.value)\n      //     }\n      // })\n      // if(user_tye.length == 0){\n      //     formIsValid = false;\n      //     errors[\"usertype\"] = \"Please select user type\";\n      //     // ReactDOM.findDOMNode(this.refs.usertype).focus();\n      // }\n\n\n      if (!this.state.title) {\n        formIsValid = false;\n        errors[\"title\"] = \"Please enter title\"; // ReactDOM.findDOMNode(this.refs.title).focus();\n      }\n\n      this.setState({\n        errors: errors,\n        title_error: true,\n        status_error: true,\n        description_error: true,\n        prog_error: true,\n        usertype_error: true,\n        thumbnail_error: true,\n        document_error: true,\n        video_error: true,\n        audio_error: true,\n        media_error: true\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var user_tye = [];\n      this.state.options.map(function (option, i) {\n        // console.log(option.isChecked,option.value)\n        if (option.isChecked == true) {\n          user_tye.push(option.value);\n        }\n      }); // console.log(this.state.seletedprogram)\n\n      var prgs = [];\n      this.state.seletedprogram.map(function (prg, index) {\n        prgs.push(prg.prg_id);\n      });\n\n      if (this.handleValidation()) {\n        this.setState({\n          loading: 1\n        });\n        var formData = new FormData();\n        var config = {\n          headers: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        formData.append('title', this.state.title);\n        formData.append('description', this.state.content);\n        formData.append('status', this.state.status);\n        formData.append('program', JSON.stringify(prgs));\n        formData.append('thumbnail', this.state.thumbnail);\n        formData.append('media', this.state.media); // formData.append('userType', JSON.stringify(user_tye));\n\n        formData.append('audio', this.state.audio);\n        formData.append('audiolink', this.state.audiolink);\n        formData.append('video', this.state.video);\n        formData.append('document', this.state.document);\n        formData.append('file_type', this.state.file_type);\n        axios.post(AppConstants.API + '/resource/addResource', formData, config).then(function (res) {\n          // console.log(res)\n          if (res.data.Status == \"Success\") {\n            setTimeout(function (e) {\n              _this2.props.history.push('/resources');\n            }, 2000);\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-success fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          } else {\n            setTimeout(function () {\n              _this2.setState({\n                loading: '',\n                errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"alert alert-danger fade show mt-3\",\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 39\n                  }\n                }, res.data.msg)\n              });\n            }, 1000);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      prg1 = [];\n      fetch(AppConstants.API + '/programs/getAllactiveprograms').then(function (res) {\n        // console.log(\"resss\",res.status);\n        if (res.status == 200) {\n          return res.json();\n        }\n      }).then(function (result) {\n        // console.log(\"result.data\",result.data);\n        result.data.map(function (res, i) {\n          var prg = {};\n          prg[\"name\"] = res.title;\n          prg[\"prg_id\"] = res._id;\n          prg1.push(prg);\n        });\n\n        _this3.setState({\n          programs: prg1\n        });\n      });\n      var element = document.getElementById(\"navItem-Resources-0\");\n      element.classList.add(\"active\");\n    }\n  }, {\n    key: \"handleUsertpe\",\n    value: function handleUsertpe(event) {\n      var options = this.state.options;\n      options.forEach(function (option) {\n        if (option.value === event.target.value) option.isChecked = event.target.checked;\n      });\n      this.setState({\n        options: options,\n        usertype_error: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      // console.log(this.state.options)\n      var checkboxItems = this.state.options.map(function (planet) {\n        return /*#__PURE__*/React.createElement(Label, {\n          className: \"mx-3\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"checkbox\",\n          name: \"usertype\",\n          onChange: _this4.handleUsertpe,\n          value: planet.value,\n          ref: \"usertype\",\n          class: \"form-control\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 179\n          }\n        }, planet.text));\n      });\n      return /*#__PURE__*/React.createElement(Page, {\n        title: \"Add Resource\",\n        className: \"cms-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cst-breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }\n      }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/resources',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }\n      }, \"All Resources\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }, \"Add Resource\")), /*#__PURE__*/React.createElement(ReactTitle, {\n        title: \"Add Resource\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"addresource\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 41\n        }\n      }, \"Title\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 49\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        ref: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 45\n        }\n      }), this.state.title_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 79\n        }\n      }, this.state.errors[\"title\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"Description\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 41\n        }\n      }, \"Description\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 56\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(CKEditor, {\n        activeClass: \"editor12\",\n        content: this.state.content,\n        events: {\n          \"blur\": this.onBlur,\n          \"afterPaste\": this.afterPaste,\n          \"change\": this.onChange\n        },\n        ref: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 46\n        }\n      }), this.state.description_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 85\n        }\n      }, this.state.errors[\"description\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"program\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 41\n        }\n      }, \"Program  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 54\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Multiselect, {\n        options: this.state.programs // Options to display in the dropdown\n        ,\n        selectedValues: this.state.selectedValue // Preselected value to persist in dropdown\n        ,\n        onSelect: this.onSelect // Function will trigger on select event\n        ,\n        onRemove: this.onRemove // Function will trigger on remove event\n        ,\n        displayValue: \"name\" // Property name to display in the dropdown options\n        ,\n        placeholder: \"Program\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 45\n        }\n      })), this.state.prog_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 78\n        }\n      }, this.state.errors[\"seletedprogram\"]) : '')), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"thumbnail\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 41\n        }\n      }, \"Thumbnail\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        name: \"thumbnail\",\n        placeholder: \"Upload Audio file\" // value={this.state.thumbnail}\n        ,\n        onChange: this.handleThumbnail,\n        ref: \"thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 45\n        }\n      }), this.state.thumbnail_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 83\n        }\n      }, this.state.errors[\"thumbnail\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        sm: 2,\n        for: \"Eligibility requirements needed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 41\n        }\n      }, \"File Type\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"form-check-label \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"file_type\",\n        type: \"radio\",\n        className: \"form-check-input\",\n        value: \"audio\",\n        checked: this.state.file_type == 'audio',\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 45\n        }\n      }), \"Audio \")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"form-check-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"file_type\",\n        type: \"radio\",\n        className: \"form-check-input\",\n        value: \"video\",\n        checked: this.state.file_type == 'video',\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 45\n        }\n      }), \"Video\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"form-check-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"file_type\",\n        type: \"radio\",\n        className: \"form-check-input\",\n        value: \"document\",\n        checked: this.state.file_type == 'document',\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 45\n        }\n      }), \"Document\"))))), this.state.file_type == 'audio' ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"audio\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 45\n        }\n      }, \"Audio Link\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"audiolink\",\n        placeholder: \"Audio link\",\n        value: this.state.audiolink,\n        onChange: this.handleInputChange,\n        ref: \"audiolink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"audio\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 45\n        }\n      }, \"Audio File\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        name: \"audio\",\n        placeholder: \"Upload Audio file\" // value={this.state.audio}\n        ,\n        onChange: this.handleFileChange1,\n        ref: \"audio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 49\n        }\n      }), this.state.audio_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 87\n        }\n      }, this.state.errors[\"audio\"]) : \"\"))) : '', this.state.file_type == 'video' ? /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"video\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 45\n        }\n      }, \"Video Link\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"video\",\n        placeholder: \"Video Link\",\n        value: this.state.video,\n        onChange: this.handleInputChange,\n        ref: \"video\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 49\n        }\n      }), this.state.video_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 83\n        }\n      }, this.state.errors[\"video\"]) : \"\")) : '', this.state.file_type == 'document' ? /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 45\n        }\n      }, \"Upload Document\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        name: \"document\",\n        placeholder: \"Upload Pdf document\" //value={this.state.document}\n        ,\n        onChange: this.handleFileChange,\n        ref: \"document1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 49\n        }\n      }), this.state.document_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 86\n        }\n      }, this.state.errors[\"document\"]) : \"\")) : '', /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 37\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        onChange: this.handleStatusChange.bind(this),\n        checked: this.state.status,\n        uncheckedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"150px\",\n            color: \"#000\",\n            fontWeight: \"bold\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 41\n          }\n        }, \"Inactive\"),\n        checkedIcon: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            fontSize: 15,\n            width: \"180px\",\n            fontWeight: \"bold\",\n            color: \"#000\",\n            paddingRight: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 41\n          }\n        }, \"Active\"),\n        onColor: \"#45b649\",\n        offColor: \"#ffd700\",\n        className: \"react-switch\",\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n        activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n        height: 20,\n        width: 48,\n        handleDiameter: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"status\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 37\n        }\n      }, \"\\xA0\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 41\n        }\n      }, this.state.errors[\"note_color\"] ? /*#__PURE__*/React.createElement(Alert, {\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 77\n        }\n      }, \"Note: \", this.state.errors[\"note_color\"]) : /*#__PURE__*/React.createElement(Alert, {\n        color: \"warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 148\n        }\n      }, \"Note: Please upload atleast one media file.\"))), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 41\n        }\n      }, \"Save    \", /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 115\n        }\n      }, \"               \", /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 228\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), \"\\xA0\", /*#__PURE__*/React.createElement(Link, {\n        to: \"/resources\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 41\n        }\n      }, \"\\xA0Cancel\"))), this.state.errMsg))))));\n    }\n  }]);\n\n  return AddResource;\n}(React.Component);\n\nAddResource.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {})(AddResource);","map":{"version":3,"sources":["/home/anil/Documents/Anil-Personal/mobileexpertAdmin/src/components/Resources/addResource.js"],"names":["React","Page","axios","AppConstants","ReactTitle","Link","Row","Col","Alert","Card","CardBody","Button","Form","FormGroup","Label","Input","Loading","PropTypes","connect","ReactDOM","Switch","Multiselect","CKEditor","prg1","AddResource","state","title","description","document","status","loading","errors","programs","seletedprogram","title_error","description_error","status_error","prog_error","audio","video","thumbnail","media","file_type","content","audiolink","options","value","text","isChecked","usertype_error","thumbnali_error","video_error","audio_error","note_color","handleSubmit","bind","handleInputChange","onSelect","onRemove","handleFileChange","handleFileChange1","handleThumbnail","onChange","handleUsertpe","evt","newContent","editor","getData","setState","e","target","files","thumbnail_error","checked","selectedList","selectedItem","removedItem","console","log","document_error","name","formIsValid","undefined","type","match","length","media_error","preventDefault","user_tye","map","option","i","push","prgs","prg","index","prg_id","handleValidation","formData","FormData","config","headers","append","JSON","stringify","post","API","then","res","data","Status","setTimeout","props","history","errMsg","msg","fetch","json","result","_id","element","getElementById","classList","add","event","forEach","checkboxItems","planet","color","onBlur","afterPaste","selectedValue","handleStatusChange","display","justifyContent","alignItems","height","fontSize","width","fontWeight","paddingRight","size","offset","Component","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport AppConstants from 'AppConstants';\nimport {ReactTitle} from 'react-meta-tags';\nimport  { Link } from 'react-router-dom';\nimport {\n    Row,\n    Col,Alert,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n  } from 'reactstrap';\nimport Loading from 'assets/img/loader.gif';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport Switch from \"react-switch\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport CKEditor from \"react-ckeditor-component\";\nvar prg1 = []\nclass AddResource extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            title : \"\",\n            description : \"\",\n            document : \"\",\n            status : true,\n            loading : \"\",\n            errors : {},\n            programs:[],\n            seletedprogram : [],\n            title_error : false,\n            description_error : false,\n            status_error : false,\n            prog_error:false,\n            audio : \"\",\n            video : \"\",\n            thumbnail : \"\",\n            media : \"\",\n            file_type:'',\n            content: '',\n            audiolink : '',\n            options : [\n                { value: 'Student', text: 'Client',isChecked: false },\n               // { value: 'parent', text: 'Parent',isChecked: false },\n                { value: 'Mentor', text: 'Mentor',isChecked: false },\n              ],\n            usertype_error : false,\n            thumbnali_error : false,\n            video_error : false,\n            audio_error : false,\n            note_color : \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.onRemove = this.onRemove.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handleFileChange1 = this.handleFileChange1.bind(this);\n        this.handleThumbnail = this.handleThumbnail.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.handleUsertpe = this.handleUsertpe.bind(this);\n    }\n    onChange(evt){\n        // console.log(evt)\n        var newContent = evt.editor.getData();\n        this.setState({\n          content: newContent\n        })\n        if (newContent) {\n          this.setState({description_error:false})\n        }\n    }\n    handleThumbnail(e){\n        this.setState({thumbnail:e.target.files[0],thumbnail_error:false})\n    }\n    handleStatusChange(checked){\n        this.setState({status : checked})\n    }\n    onSelect(selectedList, selectedItem) {\n        this.setState({\n          seletedprogram: selectedList\n        });\n        if(selectedList){\n            this.setState({prog_error:false})\n        }\n    }\n    onRemove(selectedList, removedItem) {\n        if(selectedList == \"\"){\n          this.setState({prog_error:true})\n        }\n    }\n    handleFileChange(e){\n        console.log(e.target.files[0])\n        this.setState({document:e.target.files[0],document_error:false})\n    }\n    handleFileChange1(e){\n        this.setState({audio:e.target.files[0],audio_error:false})\n    }\n    \n    handleInputChange(e){\n        if(e.target.name == 'file_type' && e.target.value == 'audio'){\n            this.setState({ video : \"\",document : \"\"})\n        }\n        if(e.target.name == 'file_type' && e.target.value == 'video'){\n            this.setState({ audio : \"\",document : \"\", audiolink : \"\"})\n        }\n        if(e.target.name == 'file_type' && e.target.value == 'document'){\n            this.setState({ audio : \"\",video : \"\", audiolink : \"\"})\n        }\n//         file_type audio\n//  file_type video\n//  file_type document\n        if(e.target.name == \"title\"){\n            if(e.target.value != \"\"){\n                this.setState({title_error:false,})\n            }\n        }\n        if(e.target.name == \"video\"){\n            if(e.target.value != \"\"){\n                this.setState({video_error:false})\n            }\n        }\n        if(e.target.name == \"audiolink\"){\n            if(e.target.value != \"\"){\n                this.setState({audio_error:false})\n            }\n        }\n      \n        if(e.target.name == \"description\"){\n            this.setState({description_error:false});\n        }\n        this.setState({[e.target.name]:e.target.value})\n        // if(this.state.media)\n    }\n    handleValidation(){\n        let errors = {};\n        let formIsValid = true;\n        if(this.state.audio  && this.state.audiolink){\n            console.log(\"audio or video\")\n            formIsValid = false;\n            errors[\"audio\"] = \"Please add audio link or upload audio file\";\n            // ReactDOM.findDOMNode(this.refs.video).focus();\n        }\n        \n        if(this.state.audio != '' && this.state.audio != undefined && (this.state.audio.type != \"audio/mpeg\")){\n            formIsValid = false;\n            errors[\"audio\"] = \"Please upload mp3 file\";\n            // ReactDOM.findDOMNode(this.refs.document1).focus();\n        }\n    \n        if(this.state.document != '' && this.state.document != undefined && (this.state.document.type != \"application/pdf\" && this.state.document.type != \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")){\n            formIsValid = false;\n            errors[\"document\"] = \"Please upload pdf or document\";\n            // ReactDOM.findDOMNode(this.refs.document1).focus();\n        }\n       \n        if(!this.state.document && !this.state.video && !this.state.audio && !this.state.audiolink){\n            // this.setState({note_color:\"#ff0000\"})\n            formIsValid = false;\n            errors[\"note_color\"] = \"Please upload atleast one media file (Ex: audio | video | document).\";\n        }\n       \n        if(this.state.thumbnail && this.state.thumbnail.name && !this.state.thumbnail.name.match(/.(jpg|jpeg|png)$/i)){\n            formIsValid = false;\n            errors[\"thumbnail\"] = \"Please select valid image (Ex: jpg | jpeg | png )\";\n            // ReactDOM.findDOMNode(this.refs.thumbnail).focus();\n        }\n        if(this.state.seletedprogram.length==0){\n            formIsValid = false;\n            errors[\"seletedprogram\"] = \"Please select program\";\n        }\n        if(!this.state.content){\n            formIsValid = false;\n            errors[\"description\"] = \"Please enter description\";\n            // ReactDOM.findDOMNode(this.refs.description).focus();\n        }\n        // var user_tye = []\n        // this.state.options.map((option,i)=>{\n        //     console.log(option.isChecked,option.value)\n        //     if(option.isChecked == true){\n        //         user_tye.push(option.value)\n        //     }\n        // })\n        // if(user_tye.length == 0){\n        //     formIsValid = false;\n        //     errors[\"usertype\"] = \"Please select user type\";\n        //     // ReactDOM.findDOMNode(this.refs.usertype).focus();\n        // }\n        if (!this.state.title){\n            formIsValid = false;\n            errors[\"title\"] = \"Please enter title\";\n            // ReactDOM.findDOMNode(this.refs.title).focus();\n        }\n        this.setState({\n            errors: errors,\n            title_error : true,\n            status_error : true,\n            description_error: true,\n            prog_error:true,\n            usertype_error: true,\n            thumbnail_error:true,\n            document_error:true,\n            video_error : true,\n            audio_error : true,\n            media_error:true\n        });\n        return formIsValid;\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        var user_tye = []\n        this.state.options.map((option,i)=>{\n            // console.log(option.isChecked,option.value)\n            if(option.isChecked == true){\n                user_tye.push(option.value)\n            }\n        })\n        // console.log(this.state.seletedprogram)\n        var prgs = []\n        this.state.seletedprogram.map((prg,index)=>{\n            prgs.push(prg.prg_id)\n        })\n        if(this.handleValidation()){\n            this.setState({loading:1});\n            let formData = new FormData();\n            const config = {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                }\n            };\n            formData.append('title', this.state.title);\n            formData.append('description', this.state.content);\n            formData.append('status', this.state.status);\n            formData.append('program', JSON.stringify(prgs));\n            formData.append('thumbnail', this.state.thumbnail);\n            formData.append('media', this.state.media);\n            // formData.append('userType', JSON.stringify(user_tye));\n            formData.append('audio', this.state.audio);\n            formData.append('audiolink', this.state.audiolink);\n            formData.append('video', this.state.video);\n            formData.append('document',this.state.document);\n            formData.append('file_type',this.state.file_type);\n            axios.post(AppConstants.API+'/resource/addResource',formData,config)\n                .then(res => { \n                    // console.log(res)\n                    if(res.data.Status == \"Success\"){\n                        setTimeout((e) => {\n                            this.props.history.push('/resources');\n                        }, 2000);\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-success fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n                    else{\n                        setTimeout(() => {\n                          this.setState({\n                            loading:'',\n                            errMsg:  (<div className=\"alert alert-danger fade show mt-3\">{res.data.msg}</div>),\n                          });\n                        }, 1000);\n                    }\n            })\n        }\n    }\n    componentDidMount(){\n        prg1 = [];\n        fetch(AppConstants.API+'/programs/getAllactiveprograms').then(res=>{\n            // console.log(\"resss\",res.status);\n            if(res.status == 200){\n                return res.json();\n            }\n          }).then(result=>{\n            // console.log(\"result.data\",result.data);\n            result.data.map((res,i)=>{\n              var prg = {}\n              prg[\"name\"] = res.title\n              prg[\"prg_id\"] = res._id\n              prg1.push(prg)\n            })\n            this.setState({programs:prg1})\n          })\n        var element = document.getElementById(\"navItem-Resources-0\");\n        element.classList.add(\"active\");\n    }\n    handleUsertpe(event){\n        let options = this.state.options\n        options.forEach(option => {\n           if (option.value === event.target.value)\n            option.isChecked =  event.target.checked\n        })\n        this.setState({options: options,usertype_error:false});\n    }\n    render(){\n        // console.log(this.state.options)\n        const checkboxItems = this.state.options.map(planet => {\n            return (<Label className=\"mx-3\"><Input type=\"checkbox\" name=\"usertype\" onChange={this.handleUsertpe} value={planet.value} ref=\"usertype\" class=\"form-control\"></Input><span>{planet.text}</span></Label>);\n        });\n        return(\n            <Page title=\"Add Resource\" className=\"cms-edit\">\n                <ul className=\"cst-breadcrumb\">\n                    <li><Link to={'/dashboard'}>Dashboard</Link></li>\n                    <li><Link to={'/resources'}>All Resources</Link></li>\n                    <li>Add Resource</li>\n                </ul>\n                <ReactTitle title=\"Add Resource\"/>\n                <Row>\n                    <Col xl={12} lg={12} md={12}>\n                        <Card>\n                            <CardBody>\n                                <Form name=\"addresource\" onSubmit= { this.handleSubmit }>\n                                    <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                           Title<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"Title\"                      \n                                            value={this.state.title}\n                                            onChange={ this.handleInputChange }   \n                                            ref =\"title\"           \n                                            />\n                                            {this.state.title_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"title\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n\n                                    {/* <FormGroup row>\n                                        <Label for=\"title\" sm={2}>\n                                           User type<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div className=\"ml-2\"> {checkboxItems}</div>\n                                        {this.state.usertype_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"usertype\"]}</span>:\"\"}\n                                        \n                                        </Col>\n                                    </FormGroup> */}\n                                        \n                                    <FormGroup row>\n                                        <Label for=\"Description\" sm={2}>\n                                            Description<span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                          \n                                             <CKEditor activeClass=\"editor12\" content={this.state.content} events={{\n                                                \"blur\": this.onBlur,\n                                                \"afterPaste\": this.afterPaste,\n                                                \"change\": this.onChange\n                                                }}\n                                                ref =\"description\"\n                                                />\n                                            {this.state.description_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"description\"]}</span>:\"\"}\n                                        </Col> \n                                    </FormGroup>\n\n                                    <FormGroup row>\n                                        <Label for=\"program\" sm={2}>\n                                            Program  <span>*</span>\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div>\n                                            <Multiselect\n                                            options={this.state.programs} // Options to display in the dropdown\n                                            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                                            onSelect={this.onSelect} // Function will trigger on select event\n                                            onRemove={this.onRemove} // Function will trigger on remove event\n                                            displayValue=\"name\" // Property name to display in the dropdown options\n                                            placeholder=\"Program\"\n                                            />\n                                            </div>\n                                            {this.state.prog_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"seletedprogram\"]}</span> :''}\n                                        </Col>\n                                    </FormGroup>\n\n                                    <FormGroup row>\n                                        <Label for=\"thumbnail\" sm={2}>\n                                           Thumbnail\n                                        </Label>\n                                        <Col sm={10}>\n                                            <Input\n                                            type=\"file\"\n                                            name=\"thumbnail\"\n                                            placeholder=\"Upload Audio file\"                      \n                                            // value={this.state.thumbnail}\n                                            onChange={ this.handleThumbnail }   \n                                            ref =\"thumbnail\"           \n                                            />\n                                            {this.state.thumbnail_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"thumbnail\"]}</span>:\"\"}\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label sm={2} for=\"Eligibility requirements needed\" >\n                                        File Type\n                                        </Label>\n                                        <Col sm={10}>\n                                        <div className=\"form-check-inline\">\n                                        <div className=\"form-check p-0\">\n                                            <Label className=\"form-check-label \">\n                                            <Input name=\"file_type\" type=\"radio\" className=\"form-check-input\" value=\"audio\" checked={this.state.file_type == 'audio'}\n                                                onChange={this.handleInputChange} />\n                                            Audio </Label>\n                                        </div>\n\n                                        <div className=\"form-check\">\n                                            <Label className=\"form-check-label\">\n                                            <Input name=\"file_type\" type=\"radio\" className=\"form-check-input\"\n                                                value=\"video\" checked={this.state.file_type == 'video'} onChange={this.handleInputChange} />Video</Label>\n                                        </div>\n\n                                        <div className=\"form-check\">\n                                            <Label className=\"form-check-label\">\n                                            <Input name=\"file_type\" type=\"radio\" className=\"form-check-input\"\n                                                value=\"document\" checked={this.state.file_type == 'document'} onChange={this.handleInputChange} />Document</Label>\n                                        </div>\n                                        </div>\n                                    </Col>\n                                    </FormGroup>\n                                    {this.state.file_type == 'audio' ? \n                                        <div>\n                                            <FormGroup row>\n                                            <Label for=\"audio\" sm={2}>\n                                                Audio Link\n                                            </Label>\n                                            <Col sm={10}>\n                                                <Input\n                                                type=\"text\"\n                                                name=\"audiolink\"\n                                                placeholder=\"Audio link\"                      \n                                                value={this.state.audiolink}\n                                                onChange={ this.handleInputChange }   \n                                                ref =\"audiolink\"           \n                                                />\n                                            </Col>\n                                        </FormGroup> \n                                        <FormGroup row>\n                                            <Label for=\"audio\" sm={2}>\n                                                Audio File\n                                            </Label>\n                                            <Col sm={10}>\n                                                <Input\n                                                type=\"file\"\n                                                name=\"audio\"\n                                                placeholder=\"Upload Audio file\"                      \n                                                // value={this.state.audio}\n                                                onChange={ this.handleFileChange1 }   \n                                                ref =\"audio\"           \n                                                />\n                                                    {this.state.audio_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"audio\"]}</span>:\"\"}\n                                            </Col>\n                                        </FormGroup> \n                                    </div>\n                                    :''}\n                                  \n                                    {this.state.file_type == 'video' ? \n                                        <FormGroup row>\n                                            <Label for=\"video\" sm={2}>\n                                                Video Link\n                                            </Label>\n                                            <Col sm={10}>\n                                                <Input\n                                                type=\"text\"\n                                                name=\"video\"\n                                                placeholder=\"Video Link\"                      \n                                                value={this.state.video}\n                                                onChange={ this.handleInputChange }   \n                                                ref =\"video\"           \n                                                />\n                                                {this.state.video_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"video\"]}</span>:\"\"}\n                                            </Col>\n                                        </FormGroup> \n                                   :''}\n                                    {this.state.file_type == 'document' ? \n                                        <FormGroup row>\n                                            <Label for=\"title\" sm={2}>\n                                                Upload Document\n                                            </Label>\n                                            <Col sm={10}>\n                                                <Input\n                                                type=\"file\"\n                                                name=\"document\"\n                                                placeholder=\"Upload Pdf document\"                      \n                                                //value={this.state.document}\n                                                onChange={ this.handleFileChange }  \n                                                ref = \"document1\"   \n                                                />\n                                                {this.state.document_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"document\"]}</span>:\"\"}\n                                            </Col>\n                                        </FormGroup> \n                                    :''}\n                                <FormGroup row>\n                                    <Label for=\"status\" sm={2}>\n                                        Status\n                                    </Label>\n                                    <Col sm={10}>\n                                        <Switch onChange={this.handleStatusChange.bind(this)} checked={this.state.status} \n                                        uncheckedIcon={\n                                        <div\n                                            style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                            height: \"100%\",\n                                            fontSize: 15,\n                                            width:\"150px\",\n                                            color: \"#000\",\n                                            fontWeight: \"bold\",\n                                            paddingRight: 2\n                                            }}\n                                        >\n                                            Inactive\n                                        </div>\n                                        }\n                                        checkedIcon={\n                                        <div\n                                            style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                            height: \"100%\",\n                                            fontSize: 15,\n                                            width:\"180px\",\n                                            fontWeight: \"bold\",\n                                            color: \"#000\",\n                                            paddingRight: 2\n                                            }}\n                                        >\n                                            Active\n                                        </div>\n                                        }\n                                        onColor = \"#45b649\"\n                                        offColor = \"#ffd700\"\n                                        className=\"react-switch\"\n                                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                                        height={20}\n                                        width={48}\n                                        handleDiameter={30}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                            \n\n                                <FormGroup row>\n                                    <Label for=\"status\" sm={2}>\n                                           &nbsp;\n                                        </Label>\n                                        <Col sm={10}>\n                                         {this.state.errors[\"note_color\"] ? <Alert color=\"danger\" >Note: {this.state.errors[\"note_color\"]}</Alert>:<Alert color=\"warning\">Note: Please upload atleast one media file.</Alert>}\n                                        </Col>\n                                    </FormGroup>\n                                   \n                                <FormGroup check row>\n                                    <Col sm={{ size: 10, offset: 2 }}>\n                                        <Button className=\"btn btn-primary\" onClick={ this.handleSubmit }>Save    <div style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div\">               <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div></div></Button>&nbsp;\n                                        <Link to={\"/resources\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link>\n                                    </Col>\n                                </FormGroup>\n                                {this.state.errMsg}\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Page>\n        )\n    }\n}\nAddResource.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport  default connect(mapStateToProps, {})(AddResource);"]},"metadata":{},"sourceType":"module"}