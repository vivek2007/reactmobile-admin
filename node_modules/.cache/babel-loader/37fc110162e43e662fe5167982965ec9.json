{"ast":null,"code":"import _defineProperty from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/nodejs/Wellness/WellnessAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/nodejs/Wellness/WellnessAdmin/src/components/CMS/editCms.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppConstants from 'AppConstants';\nimport CKEditor from \"react-ckeditor-component\";\nimport Loading from 'assets/img/loader.gif';\n\nvar EditCms = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditCms, _React$Component);\n\n  function EditCms(props) {\n    var _this;\n\n    _classCallCheck(this, EditCms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditCms).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var user_tye = [];\n\n      _this.state.options.map(function (option, i) {\n        if (option.isChecked == true) {\n          user_tye.push(option.value);\n        }\n      }); //alert('form submitted');    \n\n\n      if (_this.handleValidation()) {\n        _this.setState({\n          loading: 1\n        });\n\n        var addTCinfo = {\n          id: _this.state.id,\n          title: _this.state.title,\n          description: _this.state.content,\n          userType: JSON.stringify(user_tye)\n        };\n        axios.post(AppConstants.API + '/cms/updateCms', addTCinfo).then(function (res) {\n          if (res.data.Status == \"Success\") {\n            _this.setState({\n              loading: ''\n            });\n\n            setTimeout(function (e) {\n              _this.props.history.push('/cms');\n            }, 2000);\n\n            _this.setState({\n              errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                className: \"alert alert-success fade show mt-3\",\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 24\n                }\n              }, res.data.msg)\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                errMsg: false\n              });\n            }, 1000);\n          } else {\n            _this.setState({\n              loading: ''\n            });\n\n            _this.setState({\n              errMsg: /*#__PURE__*/React.createElement(\"div\", {\n                className: \"alert alert-danger fade show mt-3\",\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 24\n                }\n              }, res.data.msg)\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      _id: _this.props.auth.user._id,\n      id: _this.props.match.params.id,\n      title: '',\n      description: '',\n      // page_title:'',\n      url: '',\n      content: '',\n      errors: {},\n      errMsg: false,\n      title_error: false,\n      description_error: false,\n      options: [{\n        value: 'student',\n        text: 'Client',\n        isChecked: false\n      }, {\n        value: 'mentor',\n        text: 'Mentor',\n        isChecked: false\n      }]\n    }; //this.handleSubmit = this.handleSubmit.bind(this);  \n\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateContent = _this.updateContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUsertpe = _this.handleUsertpe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditCms, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      if (e.target.name == \"title\") {\n        if (e.target.value != \"\") {\n          this.setState({\n            title_error: false\n          });\n        }\n      }\n\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent(newContent) {\n      this.setState({\n        content: newContent\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(evt) {\n      var newContent = evt.editor.getData();\n      this.setState({\n        content: newContent\n      });\n\n      if (newContent) {\n        this.setState({\n          description_error: false\n        });\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(evt) {// console.log(\"onBlur event called with event info: \", evt);\n    }\n  }, {\n    key: \"afterPaste\",\n    value: function afterPaste(evt) {// console.log(\"afterPaste event called with event info: \", evt);\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var errors = {};\n      var formIsValid = true;\n\n      if (!this.state.title) {\n        formIsValid = false;\n        errors[\"title\"] = \"Please enter title\";\n      }\n\n      if (!this.state.content) {\n        formIsValid = false;\n        errors[\"description\"] = \"Please enter description\";\n      }\n\n      this.setState({\n        errors: errors,\n        title_error: true,\n        description_error: true\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var element = document.getElementById(\"navItem-Cms-0\");\n      element.classList.add(\"active\");\n      var that = this;\n      fetch(AppConstants.API + '/cms/getCms/' + this.props.match.params.id).then(function (res) {\n        if (res.status == \"200\") {\n          return res.json();\n        }\n      }).then(function (data) {\n        if (data.status == \"success\") {\n          var options = that.state.options;\n          data.data.user_type.map(function (user, index) {\n            that.state.options.forEach(function (option) {\n              console.log(option.value, \"option.value\", user);\n              if (option.value === user) option.isChecked = true;\n            });\n          });\n          that.setState({\n            title: data.data.title,\n            content: data.data.description,\n            options: options\n          });\n        } else {\n          console.log('invalid data');\n        }\n      });\n    }\n  }, {\n    key: \"handleUsertpe\",\n    value: function handleUsertpe(event) {\n      var options = this.state.options;\n      options.forEach(function (option) {\n        if (option.value === event.target.value) option.isChecked = event.target.checked;\n      });\n      console.log(\"options\", options);\n      this.setState({\n        options: options\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.auth.user;\n      var checkboxItems = this.state.options.map(function (planet) {\n        return /*#__PURE__*/React.createElement(Label, {\n          className: \"mx-3\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"checkbox\",\n          name: \"usertype\",\n          onChange: _this2.handleUsertpe,\n          value: planet.value,\n          checked: planet.isChecked,\n          ref: \"usertype\",\n          class: \"form-control\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 39\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 200\n          }\n        }, planet.text));\n      });\n      return /*#__PURE__*/React.createElement(Page, {\n        className: \"cms-edit\",\n        title: \"Edit CMS\"\n        /* breadcrumbs={[{ name: 'Add Ask Assistance', active: true }]} */\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cst-breadcrumb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, \"Home\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(Link, {\n        to: '/cms',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, \"  CMS \"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, \" Edit CMS\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        name: \"changeadminpassword\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }, \"Title \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, \" * \")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }), this.state.title_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 55\n        }\n      }, this.state.errors[\"title\"]) : \"\")), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"description\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      }, \"Description \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 31\n        }\n      }, \" * \")), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CKEditor, {\n        activeClass: \"editor12\",\n        content: this.state.content,\n        events: {\n          \"blur\": this.onBlur,\n          \"afterPaste\": this.afterPaste,\n          \"change\": this.onChange\n        },\n        config: {\n          toolbar: [{\n            name: 'document',\n            groups: ['mode', 'document', 'doctools'],\n            items: ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']\n          }, {\n            name: 'clipboard',\n            groups: ['clipboard', 'undo'],\n            items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n          }, {\n            name: 'editing',\n            groups: ['find', 'selection', 'spellchecker'],\n            items: ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt']\n          }, {\n            name: 'forms',\n            items: ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField']\n          }, {\n            name: 'basicstyles',\n            groups: ['basicstyles', 'cleanup'],\n            items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'CopyFormatting', 'RemoveFormat']\n          }, {\n            name: 'paragraph',\n            groups: ['list', 'indent', 'blocks', 'align', 'bidi'],\n            items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language']\n          }, {\n            name: 'links',\n            items: ['Link', 'Unlink', 'Anchor']\n          }, {\n            name: 'styles',\n            items: ['Styles', 'Format', 'Font', 'FontSize']\n          }, {\n            name: 'colors',\n            items: ['TextColor', 'BGColor']\n          }, {\n            name: 'tools',\n            items: ['Maximize', 'ShowBlocks']\n          }, {\n            name: 'others',\n            items: ['-']\n          }, {\n            name: 'about',\n            items: ['About']\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }), this.state.description_error == true ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 61\n        }\n      }, this.state.errors[\"description\"]) : \"\")), this.state.title == \"Privacy Policy\" ? /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 60\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"title\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      }, \"User type\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      }, checkboxItems))) : '', /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }\n      }, \"Update\", /*#__PURE__*/React.createElement(\"div\", {\n        disabled: !this.state.zipcode,\n        style: this.state.loading ? {} : {\n          display: 'none'\n        },\n        className: \"image-fill w-25 loader-div \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 23\n        }\n      }, \"               \", /*#__PURE__*/React.createElement(\"div\", {\n        class: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 168\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 5\n        }\n      }, \"Loading...\"))))), \"\\xA0\", /*#__PURE__*/React.createElement(Link, {\n        to: \"/cms\",\n        className: \"btn btn-danger\",\n        title: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }, \"\\xA0Cancel\"))), this.state.errMsg))))));\n    }\n  }]);\n\n  return EditCms;\n}(React.Component);\n\nEditCms.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n}; //export default ChangepasswordPage;\n\n\nexport default connect(mapStateToProps, {})(EditCms);","map":{"version":3,"sources":["/var/www/nodejs/Wellness/WellnessAdmin/src/components/CMS/editCms.js"],"names":["React","Link","Row","Col","Card","CardBody","Form","FormGroup","Label","Input","Button","Page","axios","PropTypes","connect","AppConstants","CKEditor","Loading","EditCms","props","handleSubmit","event","preventDefault","user_tye","state","options","map","option","i","isChecked","push","value","handleValidation","setState","loading","addTCinfo","id","title","description","content","userType","JSON","stringify","post","API","then","res","data","Status","setTimeout","e","history","errMsg","msg","_id","auth","user","match","params","url","errors","title_error","description_error","text","handleInputChange","bind","updateContent","onChange","handleUsertpe","target","name","newContent","evt","editor","getData","formIsValid","element","document","getElementById","classList","add","that","fetch","status","json","user_type","index","forEach","console","log","checked","checkboxItems","planet","color","onBlur","afterPaste","toolbar","groups","items","size","offset","zipcode","display","Component","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  { Link } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n \n} from 'reactstrap';\nimport Page from 'components/Page';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppConstants from 'AppConstants';\nimport CKEditor from \"react-ckeditor-component\";\nimport Loading from 'assets/img/loader.gif';\n\nclass EditCms extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      _id:this.props.auth.user._id,\n      id:this.props.match.params.id,\n      title:'',\n      description:'',\n     // page_title:'',\n      url:'',\n      content: '',\n      errors: {},\n      errMsg: false,\n      title_error : false,\n      description_error : false,\n      options : [\n        { value: 'student', text: 'Client',isChecked: false },\n        { value: 'mentor', text: 'Mentor',isChecked: false },\n      ],\n    }\n    //this.handleSubmit = this.handleSubmit.bind(this);  \n    this.handleInputChange = this.handleInputChange.bind(this);    \n    this.updateContent = this.updateContent.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleUsertpe = this.handleUsertpe.bind(this);\n  }\n\n  handleInputChange(e) {\n    if (e.target.name == \"title\") {\n      if (e.target.value != \"\") {\n        this.setState({\n          title_error: false\n        })\n      }\n    }\n    this.setState({\n        [e.target.name]: e.target.value\n    });\n  }\n\n  updateContent(newContent) {\n    this.setState({\n        content: newContent\n    })\n  }\n\n  onChange(evt){\n    var newContent = evt.editor.getData();\n    this.setState({\n      content: newContent\n    })\n    if (newContent) {\n      this.setState({description_error:false})\n    }\n  }\n  onBlur(evt){\n    // console.log(\"onBlur event called with event info: \", evt);\n  }\n\n  afterPaste(evt){\n    // console.log(\"afterPaste event called with event info: \", evt);\n  }\n  handleValidation(){\n    let errors = {};\n    let formIsValid = true;\n    if(!this.state.title) {\n      formIsValid = false;\n      errors[\"title\"] = \"Please enter title\";\n    }\n    if(!this.state.content){\n        formIsValid = false;\n        errors[\"description\"] = \"Please enter description\";\n    }\n    this.setState({\n      errors: errors,\n      title_error : true,\n      description_error:true\n    });\n    return formIsValid;\n  }\n\n   handleSubmit = event => {\n    event.preventDefault();\n    var user_tye = []\n    this.state.options.map((option,i)=>{\n        if(option.isChecked == true){\n            user_tye.push(option.value)\n        }\n    })\n    //alert('form submitted');    \n    if(this.handleValidation()){\n      this.setState({loading:1});\n      const addTCinfo = {\n        id:this.state.id,\n        title: this.state.title,\n        description:  this.state.content,\n        userType:JSON.stringify(user_tye)\n      }\n      axios.post(AppConstants.API+'/cms/updateCms',addTCinfo)\n        .then(res => {   \n          if(res.data.Status == \"Success\"){\n            this.setState({loading:''});\n            setTimeout((e) => {\n                this.props.history.push('/cms');\n            }, 2000);\n\n            this.setState({\n              errMsg: (<div className=\"alert alert-success fade show mt-3\">{res.data.msg}</div>)\n            });\n            setTimeout(() => {\n              this.setState({\n                errMsg: false,\n              });\n            }, 1000);\n          }\n          else{\n            this.setState({loading:''});\n            this.setState({\n              errMsg: (<div className=\"alert alert-danger fade show mt-3\">{res.data.msg}</div>)\n            });\n          }\n      });\n    } \n  };  \n\n    \n  componentDidMount() {\n    var element = document.getElementById(\"navItem-Cms-0\");\n    element.classList.add(\"active\");\n    const that = this; \n    fetch(AppConstants.API+'/cms/getCms/'+this.props.match.params.id)\n    .then(function(res) {\n      if(res.status == \"200\"){\n        return res.json();\n      }\n    })\n    .then(function(data) {\n      if(data.status == \"success\"){\n       let options = that.state.options\n      data.data.user_type.map((user,index)=>{\n          that.state.options.forEach(option => {\n              console.log(option.value,\"option.value\",user)\n              if (option.value === user)\n                option.isChecked =  true\n            })\n        })\n        that.setState({\n          title: data.data.title,\n          content: data.data.description,        \n          options:options\n        }); \n      }\n      else\n      {\n        console.log('invalid data')\n      }\n    }); \n}\n  handleUsertpe(event){\n    let options = this.state.options\n    options.forEach(option => {\n      if (option.value === event.target.value)\n        option.isChecked =  event.target.checked\n    })\n    console.log(\"options\",options)\n    this.setState({options: options});\n  }\n  render() {\n    const {user} = this.props.auth;\n    const checkboxItems = this.state.options.map(planet => {\n      return (<Label className=\"mx-3\"><Input type=\"checkbox\" name=\"usertype\" onChange={this.handleUsertpe} value={planet.value} checked={planet.isChecked} ref=\"usertype\" class=\"form-control\"></Input><span>{planet.text}</span></Label>);\n  });\n  return (\n    <Page className=\"cms-edit\" title=\"Edit CMS\" /* breadcrumbs={[{ name: 'Add Ask Assistance', active: true }]} */>\n       <ul className=\"cst-breadcrumb\">\n          <li><Link to={'/dashboard'}>Home</Link> </li>\n          <li>  <Link to={'/cms'}>  CMS </Link> </li>\n          <li> Edit CMS</li>\n        </ul>\n      <Row>\n        <Col xl={12} lg={12} md={12}>\n          <Card>\n            <CardBody>\n              <Form name=\"changeadminpassword\" onSubmit= { this.handleSubmit }>\n                <FormGroup row>\n                  <Label for=\"title\" sm={2}>\n                  Title <span style={{color: 'red'}}> * </span>\n                  </Label>\n                  <Col sm={10}>\n                    <Input\n                      type=\"text\"\n                      name=\"title\"\n                      placeholder=\"Title\"                      \n                      value={this.state.title}\n                      onChange={ this.handleInputChange }                  \n                    />\n                    {this.state.title_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"title\"]}</span> : \"\"}\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"description\" sm={2}>\n                  Description <span style={{color: 'red'}}> * </span>\n                  </Label>\n                  <Col sm={10}>\n                    <CKEditor activeClass=\"editor12\" content={this.state.content} events={{\n                    \"blur\": this.onBlur,\n                    \"afterPaste\": this.afterPaste,\n                    \"change\": this.onChange\n                    }} \n                    config={ {\n                      toolbar: [\n                        { name: 'document', groups: [ 'mode', 'document', 'doctools' ], items: [ 'Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates' ] },\n                        { name: 'clipboard', groups: [ 'clipboard', 'undo' ], items: [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ] },\n                        { name: 'editing', groups: [ 'find', 'selection', 'spellchecker' ], items: [ 'Find', 'Replace', '-', 'SelectAll', '-', 'Scayt' ] },\n                        { name: 'forms', items: [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField' ] },\n                     \n                        { name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ], items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'CopyFormatting', 'RemoveFormat' ] },\n                        { name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi' ], items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language' ] },\n                        { name: 'links', items: [ 'Link', 'Unlink', 'Anchor' ] },\n                 \n                        { name: 'styles', items: [ 'Styles', 'Format', 'Font', 'FontSize' ] },\n                        { name: 'colors', items: [ 'TextColor', 'BGColor' ] },\n                        { name: 'tools', items: [ 'Maximize', 'ShowBlocks' ] },\n                        { name: 'others', items: [ '-' ] },\n                        { name: 'about', items: [ 'About' ] }\n                      ]\n                      \n                    \n                  } }\n                    />\n                    {this.state.description_error == true ? <span className=\"error\" style={{color: 'red'}}>{this.state.errors[\"description\"]}</span>:\"\"}\n                  </Col>\n                </FormGroup>\n                   {this.state.title == \"Privacy Policy\" ? <FormGroup row>\n                  <Label for=\"title\" sm={2}>\n                      User type\n                  </Label>\n                  <Col sm={10}>\n                  <div className=\"ml-2\">{checkboxItems}</div>\n                  </Col>\n                </FormGroup>:''\n                }\n                \n                <FormGroup check row>\n                  <Col   sm={{ size: 10, offset: 2 }}>\n                    <Button className=\"btn btn-primary\" onClick={ this.handleSubmit }>Update\n                      <div disabled={!this.state.zipcode} style={this.state.loading ? {} : { display: 'none' }} className=\"image-fill w-25 loader-div \">               <div class=\"clearfix\">\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div></div>\n                    </Button>&nbsp;\n                    <Link to={\"/cms\"} className=\"btn btn-danger\" title=\"Cancel\">&nbsp;Cancel</Link>\n                  </Col>\n                </FormGroup>\n             \n                {this.state.errMsg}\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n     \n    </Page>\n  );\n};\n}\n\nEditCms.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n//export default ChangepasswordPage;\nexport  default connect(mapStateToProps, {})(EditCms);"]},"metadata":{},"sourceType":"module"}